/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Faturamentos;

import Db.DbMain;
import Funcoes.AutoCompletion;
import Funcoes.Dates;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Funcoes.newTable;
import java.awt.AWTKeyStroke;
import java.awt.BorderLayout;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author supervisor
 */
public class jFarmacia extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.con;
    boolean bExecNome = false, bExecCodigo = false;
    int tam = 0, n = 0;
    TableRowSorter<TableModel> sorter;    

    /**
     * Creates new form jFarmacia
     */
    public jFarmacia() {
        initComponents();

        // Colocando enter para pular de campo
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);
        
        fillMedicamentos();
        AutoCompleteDecorator.decorate(eCodigo);        
        AutoCompleteDecorator.decorate(eDescricao);   
        
        AutoCompletion.enable(sCodigo);
        AutoCompletion.enable(sDescricao);
        
        // Entradas
        String[] eheader = {"Novo","Codigo","Descrição","DtCompra","NumLote","Validade","Preco","Unidade","Quantidade", "GrupoId"};
        int[]    ewidth  = {-1,150,200,100,100,100,80,100,80, -1};
        String[] ealign  = {"C","L","L","L","L","L","R","C","R","C"};
        newTable.InitTable(eItens, eheader, ewidth, ealign, true);
        
        // Saidas
        String[] sheader = {"ID","Paciente","Codigo","Descrição","DtSaida","Unidade","Qtd"};
        int[]    swidth  = {0,0,150,500,100,100,80};
        String[] salign  = {"L","L","L","L","L","C","R"};
        newTable.InitTable(sItens, sheader, swidth, salign, true);

        // Controle
        String[] cheader = {"Codigo","Descrição","Unidade","Entradas","Saidas","Saldo"};
        int[]    cwidth  = {150,200,100,100,100,100};
        String[] calign  = {"L","L","L","R","R","R"};
        newTable.InitTable(cItens, cheader, cwidth, calign, true);
        
    }
    
    private void fillMedicamentos() {
        eCodigo.removeAllItems();
        eDescricao.removeAllItems();
        
        sCodigo.removeAllItems();
        sDescricao.removeAllItems();
        
        String sql = "SELECT DISTINCT e.e_codigo, " + 
                "(SELECT Upper(f.e_descricao) AS e_descricao FROM e_farmacia f WHERE f.e_codigo = e.e_codigo LIMIT 1) AS e_descricao, " + 
                "SUM(e.e_quantidade) AS e_entrada, " + 
                "(SELECT SUM(s.s_quantidade) FROM s_farmacia s WHERE s.s_codigo = e.e_codigo) AS s_saida " + 
                "FROM e_farmacia e GROUP BY 1;";
        ResultSet rs = conn.AbrirTabela(sql, ResultSet.CONCUR_READ_ONLY);
        
        try {
            while (rs.next()) {    
                eCodigo.addItem(rs.getString("e_codigo"));
                eDescricao.addItem(rs.getString("e_descricao"));
                
                if (rs.getFloat("e_entrada") - rs.getFloat("s_saida") > 0) {
                    sCodigo.addItem(rs.getString("e_codigo"));
                    sDescricao.addItem(rs.getString("e_descricao"));                
                }
            }
        } catch (Exception e) {}
        DbMain.FecharTabela(rs);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAbas = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        sCodigo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        sDescricao = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        sUnidade = new javax.swing.JTextField();
        sQuantidade = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        sCPF = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        sPaciente = new javax.swing.JTextField();
        sDtSaida = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        sbtLancar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sItens = new javax.swing.JTable();
        sbtFinalizar = new javax.swing.JButton();
        sbtExcluirItem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cBusca = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cDtInicial = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        cDtFinal = new javax.swing.JFormattedTextField();
        cbtEntradas = new javax.swing.JButton();
        cbtSaidas = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cItens = new javax.swing.JTable();
        jbarra = new javax.swing.JProgressBar();
        btnListarEstoque = new javax.swing.JButton();
        btnSaidaMedica = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        eCodigo = new javax.swing.JComboBox();
        eDescricao = new javax.swing.JComboBox();
        eDtCompra = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        eNumLote = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        eValidade = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        ePreco = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        eUnidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        eQuantidade = new javax.swing.JSpinner();
        ebtLancar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        eItens = new javax.swing.JTable();
        ebtExcluir = new javax.swing.JButton();
        ebtFinalizar = new javax.swing.JButton();

        setBackground(new java.awt.Color(101, 227, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Controle de Entrada e Saida de Medicamentos...");
        setOpaque(true);
        setVisible(true);

        jAbas.setBackground(new java.awt.Color(101, 227, 255));
        jAbas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jAbasMouseReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(101, 227, 255));

        sCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sCodigoActionPerformed(evt);
            }
        });
        sCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sCodigoFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Código");

        sDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sDescricaoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("Medicamento");

        sUnidade.setEditable(false);

        sQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setText("Quantidade:");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("Unidade:");

        jLabel13.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel13.setText("ID:");

        try {
            sCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        sCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sCPFFocusLost(evt);
            }
        });
        sCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sCPFKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setText("Paciênte:");

        sPaciente.setEditable(false);

        sDtSaida.setEditable(false);
        try {
            sDtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        sDtSaida.setText("");

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel15.setText("Data Saida:");

        sbtLancar.setText("Lançar");
        sbtLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbtLancarActionPerformed(evt);
            }
        });

        sItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(sItens);

        sbtFinalizar.setText("Finalizar Receita");
        sbtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbtFinalizarActionPerformed(evt);
            }
        });

        sbtExcluirItem.setText("Excluir Item");
        sbtExcluirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbtExcluirItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sPaciente))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sDescricao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(92, 92, 92)
                                        .addComponent(jLabel14))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(134, 134, 134)
                                        .addComponent(jLabel10)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(sbtExcluirItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sbtFinalizar)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sDtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sUnidade, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sbtLancar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(199, 199, 199))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sDtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sbtLancar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sbtFinalizar)
                    .addComponent(sbtExcluirItem))
                .addContainerGap())
        );

        jAbas.addTab("Saída", jPanel2);

        jPanel3.setBackground(new java.awt.Color(101, 227, 255));

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("MEDICAMENTOS NO ESTOQUE");
        jLabel16.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel17.setText("Busca Rápida:");

        cBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cBuscaKeyReleased(evt);
            }
        });

        jLabel18.setText("Período:");

        try {
            cDtInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cDtInicial.setText("");

        jLabel19.setText("até");

        try {
            cDtFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cDtFinal.setText("");

        cbtEntradas.setText("Listar Entradas");
        cbtEntradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtEntradasActionPerformed(evt);
            }
        });

        cbtSaidas.setText("Listar Saídas/Paciêntes");
        cbtSaidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtSaidasActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("LISTAGEM DE ESTOQUE");
        jLabel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        cItens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cItensKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(cItens);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(jbarra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbarra, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnListarEstoque.setText("Listar Estoque/Medicamentos");
        btnListarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarEstoqueActionPerformed(evt);
            }
        });

        btnSaidaMedica.setText("Saida/Medicamentos");
        btnSaidaMedica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaidaMedicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cDtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cDtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbtEntradas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbtSaidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListarEstoque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaidaMedica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cBusca)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cDtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(cDtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbtEntradas)
                    .addComponent(cbtSaidas)
                    .addComponent(btnListarEstoque)
                    .addComponent(btnSaidaMedica))
                .addContainerGap())
        );

        jAbas.addTab("Controle", jPanel3);

        jPanel1.setBackground(new java.awt.Color(101, 227, 255));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel2.setText("Medicamento");

        eCodigo.setEditable(true);
        eCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eCodigoActionPerformed(evt);
            }
        });

        eDescricao.setEditable(true);
        eDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eDescricaoActionPerformed(evt);
            }
        });

        try {
            eDtCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        eDtCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eDtCompraFocusGained(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel3.setText("Data da Compra:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel4.setText("Numero do Lote:");

        eNumLote.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eNumLoteFocusGained(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel5.setText("Validade do Lote:");

        try {
            eValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        eValidade.setText("");
        eValidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eValidadeFocusGained(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Preço:");

        ePreco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        ePreco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ePreco.setText("0,00");
        ePreco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ePrecoFocusGained(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel7.setText("Unidade:");

        eUnidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eUnidadeFocusGained(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 10)); // NOI18N
        jLabel8.setText("Quantidade:");

        eQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        eQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eQuantidadeFocusGained(evt);
            }
        });

        ebtLancar.setText("Lançar");
        ebtLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebtLancarActionPerformed(evt);
            }
        });

        eItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(eItens);

        ebtExcluir.setText("Excluir Item");
        ebtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebtExcluirActionPerformed(evt);
            }
        });

        ebtFinalizar.setText("Finalizar Entradas");
        ebtFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebtFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 832, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(eCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eDescricao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eDtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(eNumLote, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ePreco, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(150, 150, 150)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(eUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(eQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(ebtLancar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ebtExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ebtFinalizar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ePreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(eDtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eNumLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ebtLancar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ebtExcluir)
                    .addComponent(ebtFinalizar))
                .addContainerGap())
        );

        jAbas.addTab("Entrada", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAbas)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jAbas)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eCodigoActionPerformed
        if (!bExecNome) {
            int pos = eCodigo.getSelectedIndex();
            if (eDescricao.getItemCount() > 0) {
                bExecCodigo = true; 
                eDescricao.setSelectedIndex(pos); 
                bExecCodigo = false;
            }
        }
    }//GEN-LAST:event_eCodigoActionPerformed

    private void eDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eDescricaoActionPerformed
         if (!bExecCodigo) {
            int pos = eDescricao.getSelectedIndex();
            if (eCodigo.getItemCount() > 0 && eCodigo.getSelectedIndex() > -1) {
                bExecNome = true; 
                eCodigo.setSelectedIndex(pos); 
                bExecNome = false;
            }
        }
    }//GEN-LAST:event_eDescricaoActionPerformed

    private void jAbasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAbasMouseReleased
        if (jAbas.getSelectedIndex() == 2) {
            // Entradas
            eCodigo.requestFocus();
        } else if (jAbas.getSelectedIndex() == 0) {
            sCPF.selectAll();
            sCPF.requestFocus();
        } else if (jAbas.getSelectedIndex() == 1) {
            new Thread() {
                public void run() {    
                    enchecontrole2();
                }
            }.start();    
        }
    }//GEN-LAST:event_jAbasMouseReleased

    private void enchecontrole() {
        // limpa controle
        TableControl.Clear(cItens);
        
        jAbas.setEnabled(false);

        String sql = "select DISTINCT e.e_grupoid, e.e_codigo, " + 
                     "(SELECT e1.e_descricao FROM e_farmacia e1 WHERE e1.e_codigo = e.e_codigo LIMIT 1) AS e_descricao, " + 
                     "(SELECT e2.e_unidade FROM e_farmacia e2 WHERE e2.e_codigo = e.e_codigo LIMIT 1) AS e_unidade, " + 
                     "SUM(e.e_quantidade) AS e_entrada, " + 
                     "(SELECT SUM(s.s_quantidade) FROM s_farmacia s WHERE s.s_codigo = e.e_codigo) AS s_saida " + 
                     "FROM e_farmacia e GROUP BY 1,2;";
        ResultSet rs = conn.AbrirTabela(sql, ResultSet.CONCUR_READ_ONLY);
        try {
            tam = conn.RecordCount(rs);
            n = 1;
            jbarra.setValue(0);
            jbarra.setVisible(true);
            while (rs.next()) {                
                new Thread() {
                    public void run() {
                        int pos = (n * 100) / tam;
                        try {sleep(100);} catch (Exception ex) {}
                        jbarra.setValue(pos);
                        jbarra.repaint();
                    }
                }.start();                

                String tcodigo = rs.getString("e_codigo");
                String tdescri = rs.getString("e_descricao").toUpperCase();
                String tunidad = rs.getString("e_unidade").toUpperCase();
                String tentrad = rs.getString("e_entrada");
                String tsaida  = rs.getString("s_saida");
                
                if (tentrad == null) tentrad = "0";
                if (tsaida == null) tsaida = "0";
                String ttotal  = String.valueOf(Integer.valueOf(tentrad) - Integer.valueOf(tsaida)).replace(".0", "");
                
                newTable.add(cItens, new Object[] {tcodigo, tdescri, tunidad, tentrad, tsaida, ttotal});
                n++;
            }
        } catch (Exception e) {}
        DbMain.FecharTabela(rs);
        
        sorter = new TableRowSorter<TableModel>(cItens.getModel());
        cItens.setRowSorter(sorter);
        
        jbarra.setVisible(false);
        jAbas.setEnabled(true);
    }
    
    private void enchecontrole2() {
        // limpa controle
        TableControl.Clear(cItens);        
        jAbas.setEnabled(false);

        String estoqueEntradasSQL = "SELECT " +
                    "e.e_codigo, " +
                    "Upper(Trim(e.e_descricao)) AS descricao, " +
                    "Upper(Trim(e.e_unidade)) AS unidade, " +
                    "SUM(e.e_quantidade) AS entradas " +
                    "FROM " +
                    "e_farmacia e " +
                    "GROUP BY " +
                    "e.e_codigo, " +
                    "Upper(Trim(e.e_descricao)), " +
                    "Upper(Trim(e.e_unidade)) " +
                    "ORDER BY " +
                    "Upper(Trim(e.e_descricao))";
        String estoqueSaidasSQL = "SELECT " +
                    "s.s_codigo, " +
                    "Upper(Trim(s.s_descricao)) AS descricao, " +
                    "Upper(Trim(s.s_unidade)) AS unidade, " +
                    "SUM(s.s_quantidade) AS saidas " +
                    "FROM " +
                    "s_farmacia s " +
                    "GROUP BY " +
                    "s.s_codigo, " +
                    "Upper(Trim(s.s_descricao)), " +
                    "Upper(Trim(s.s_unidade)) " +
                    "ORDER BY " +
                    "Upper(Trim(s.s_descricao))";
        List<EntradasSaidasEstoque> lista = new ArrayList<EntradasSaidasEstoque>();

        // Entradas
        ResultSet rs = conn.AbrirTabela(estoqueEntradasSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                String BuscaGrupo = BuscaGrupoMedicamento(rs.getString("e_codigo"));
                String nmGrupo = BuscaNomeGrupo(BuscaGrupo);
                lista.add(new EntradasSaidasEstoque(rs.getString("e_codigo"), rs.getString("descricao"), rs.getString("unidade"), rs.getDouble("entradas"), 0,Integer.valueOf(BuscaGrupo), nmGrupo));                        
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}
        
        // Saidas
        rs = conn.AbrirTabela(estoqueSaidasSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                String BuscaGrupo = BuscaGrupoMedicamento(rs.getString("s_codigo"));
                String nmGrupo = BuscaNomeGrupo(BuscaGrupo);
                lista.add(new EntradasSaidasEstoque(rs.getString("s_codigo"), rs.getString("descricao"), rs.getString("unidade"), 0, rs.getDouble("saidas"),Integer.valueOf(BuscaGrupo),nmGrupo));
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}

        // Ordenar Lista pelo GrupoId
        Collections.sort (lista, new Comparator() {
            public int compare(Object o1, Object o2) {
                EntradasSaidasEstoque p1 = (EntradasSaidasEstoque) o1;
                EntradasSaidasEstoque p2 = (EntradasSaidasEstoque) o2;
                return p1.getGrupoid() < p2.getGrupoid() ? -1 : (p1.getGrupoid() > p2.getGrupoid() ? +1 : 0);
            }
        });

        List<EntradasSaidasEstoque> listagrp = new ArrayList<EntradasSaidasEstoque>();
        for(EntradasSaidasEstoque o : lista) {
            String tmpCodigo = o.getCodigo();
            int pos = BuscaGrupo(listagrp, tmpCodigo);
            if (pos > -1) {
                EntradasSaidasEstoque g = listagrp.get(pos);
                g.SomaEntrada(o.getEntrada());
                g.SomaSaida(o.getSaida());
                listagrp.set(pos, g);
            } else {
                listagrp.add(o);
            }
        }

        for (EntradasSaidasEstoque o : listagrp) {
            String tcodigo = o.getCodigo();
            String tdescri = o.getDescricao().toUpperCase();
            String tunidad = o.getUnidade().toUpperCase();
            double tentrad = o.getEntrada();
            double tsaida  = o.getSaida();
            double ttotal  = tentrad - tsaida;
            newTable.add(cItens, new Object[] {tcodigo, tdescri, tunidad, String.format("%.0f", tentrad), String.format("%.0f", tsaida), String.format("%.0f", ttotal)});            
        }
        sorter = new TableRowSorter<TableModel>(cItens.getModel());
        cItens.setRowSorter(sorter);
        jbarra.setVisible(false);
        jAbas.setEnabled(true);        
    }

    private void eDtCompraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eDtCompraFocusGained
        eDtCompra.selectAll();
    }//GEN-LAST:event_eDtCompraFocusGained

    private void eNumLoteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eNumLoteFocusGained
        eNumLote.selectAll();
    }//GEN-LAST:event_eNumLoteFocusGained

    private void eValidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eValidadeFocusGained
        eValidade.selectAll();
    }//GEN-LAST:event_eValidadeFocusGained

    private void ePrecoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ePrecoFocusGained
        ePreco.selectAll();
    }//GEN-LAST:event_ePrecoFocusGained

    private void eUnidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eUnidadeFocusGained
        eUnidade.selectAll();
    }//GEN-LAST:event_eUnidadeFocusGained

    private void eQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eQuantidadeFocusGained
        //
    }//GEN-LAST:event_eQuantidadeFocusGained

    private String BuscaGrupoMedicamento(String codigo) {
        String retorno = null;
        String selectSQL = "SELECT e_grupoid FROM e_farmacia WHERE UPPER(TRIM(e_codigo)) = '" + codigo.trim().toUpperCase() + "' AND (e_grupoid IS NOT NULL OR e_grupoid != 0) LIMIT 1";
        ResultSet rs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                retorno = rs.getString("e_grupoid");
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}
        return retorno;
    }
    
    private String BuscaNomeGrupo(String idgrupo) {
        String retorno = null;
        String selectSQL = "SELECT descricao FROM grupos WHERE id = '" + idgrupo.trim().toUpperCase() + "' LIMIT 1000";
        ResultSet rs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                retorno = rs.getString("descricao");
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}
        return retorno;
    }
    
    private void ebtLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebtLancarActionPerformed
        if (eCodigo.getModel().getSelectedItem().toString().trim().equals("")) return;
        if (eDescricao.getModel().getSelectedItem().toString().trim().equals("")) return;
        if (Integer.valueOf(eQuantidade.getValue().toString()) <= 0) { eQuantidade.requestFocus(); return; }
        
        // Pesquisa o Grupo do material        
        String BuscaGrupo = BuscaGrupoMedicamento(eCodigo.getSelectedItem().toString());
        if (BuscaGrupo == null) {
            jGrupoBusca jbGrupo = new jGrupoBusca(null, true);
            jbGrupo.setVisible(true);
            BuscaGrupo = jbGrupo.retorno;
        }
        
        if (BuscaGrupo == null) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um Grupo para alterar!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        boolean enovo = eCodigo.getSelectedIndex() == -1;
        String tcodigo = eCodigo.getModel().getSelectedItem().toString();
        String tdescr  = eDescricao.getModel().getSelectedItem().toString();
        String tdtcpra = eDtCompra.getText();
        String tnumlot = eNumLote.getText();
        String tvalida = eValidade.getText();
        String tpreco  = ePreco.getText();
        String tunidad = eUnidade.getText();
        String tqtde   = eQuantidade.getValue().toString();
        
        newTable.add(eItens, new Object[] {enovo, tcodigo, tdescr, tdtcpra, tnumlot, tvalida, tpreco, tunidad, tqtde, BuscaGrupo});
        
        // limpar
        eDtCompra.setText(null);
        eNumLote.setText(null);
        eValidade.setText(null);
        ePreco.setText("0,00");
        eUnidade.setText(null);
        eQuantidade.setValue(1);
        
        eCodigo.requestFocus();
    }//GEN-LAST:event_ebtLancarActionPerformed

    private void ebtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebtExcluirActionPerformed
        int r = eItens.getSelectedRow();
        if (r < 0) return;
        TableControl.del(eItens, r);
    }//GEN-LAST:event_ebtExcluirActionPerformed

    private void ebtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebtFinalizarActionPerformed
        int rows = eItens.getRowCount();
        for (int i=0;i<rows;i++) {
            String sql = "INSERT INTO e_farmacia(e_codigo, e_descricao, e_dtcompra, e_numlote, " +
                         "e_validade, e_preco, e_unidade, e_quantidade, e_grupoid) " +
                         "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);";
            
            String tcodigo = eItens.getModel().getValueAt(i, 1).toString();
            String tdescr  = eItens.getModel().getValueAt(i, 2).toString();
            String tdtcpra = Dates.StringtoString(eItens.getModel().getValueAt(i, 3).toString(),"dd/MM/yyyy","yyyy-MM-dd");
            String tnumlot = eItens.getModel().getValueAt(i, 4).toString();
            String tvalida = Dates.StringtoString(eItens.getModel().getValueAt(i, 5).toString(),"dd/MM/yyyy","yyyy-MM-dd");
            String tpreco  = eItens.getModel().getValueAt(i, 6).toString();
            String tunidad = eItens.getModel().getValueAt(i, 7).toString();
            int    tqaunti = Integer.valueOf(eItens.getModel().getValueAt(i, 8).toString());
            int   tgrupoid = Integer.valueOf(eItens.getModel().getValueAt(i, 9).toString());
            try {
                PreparedStatement stm = conn.conn.prepareStatement(sql);
                stm.setString(1, tcodigo);
                stm.setString(2, tdescr);
                stm.setDate(3, Date.valueOf(tdtcpra));
                stm.setString(4, tnumlot);
                stm.setDate(5, Date.valueOf(tvalida));
                stm.setString(6, tpreco);
                stm.setString(7, tunidad);
                stm.setInt(8, tqaunti);
                stm.setInt(9, tgrupoid);
                
                stm.execute();
                stm.close();
            } catch (Exception e) {}
        }
        
        this.dispose();
    }//GEN-LAST:event_ebtFinalizarActionPerformed

    private void sCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sCodigoActionPerformed
        if (!bExecNome) {
            int pos = sCodigo.getSelectedIndex();
            if (sDescricao.getItemCount() > 0) {
                bExecCodigo = true; 
                sDescricao.setSelectedIndex(pos); 
                bExecCodigo = false;
                
                ShowUnidade(sCodigo.getSelectedItem().toString().trim());
            }
        }
    }//GEN-LAST:event_sCodigoActionPerformed

    private void sDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sDescricaoActionPerformed
         if (!bExecCodigo) {
            int pos = sDescricao.getSelectedIndex();
            if (sCodigo.getItemCount() > 0) {
                bExecNome = true; 
                sCodigo.setSelectedIndex(pos); 
                bExecNome = false;

                ShowUnidade(sCodigo.getSelectedItem().toString().trim());
            }
        }
    }//GEN-LAST:event_sDescricaoActionPerformed

    private void ShowUnidade(String codigo) {
        String[][] dadosmed = null;
        try {
            dadosmed = conn.LerCamposTabela(new String[] {"e_unidade"}, "e_farmacia", "e_codigo = '" + codigo.trim() + "'");
        } catch (Exception e) {}
        if (dadosmed != null) {
            sUnidade.setText(dadosmed[0][3]);
        } else sUnidade.setText(null);
    }
    
    private void sCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sCPFFocusLost

    }//GEN-LAST:event_sCPFFocusLost

    private void sbtLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbtLancarActionPerformed
        if (sCPF.getText().trim().replace(".", "").replace("-", "").equalsIgnoreCase("")) return;
        
        String tcpf    = sCPF.getText().toUpperCase().trim();
        String tpacien = sPaciente.getText().trim().toUpperCase();
        String tcodigo = sCodigo.getModel().getSelectedItem().toString();
        String tdescr  = sDescricao.getModel().getSelectedItem().toString();
        String tdtsaid = sDtSaida.getText();
        String tunidad = sUnidade.getText();
        String tqtde   = sQuantidade.getValue().toString();
        
        newTable.add(sItens, new Object[] {tcpf, tpacien, tcodigo, tdescr, tdtsaid, tunidad, tqtde});
        
        // limpar
        sUnidade.setText(null);
        sQuantidade.setValue(1);
        
        sCodigo.requestFocus();
    }//GEN-LAST:event_sbtLancarActionPerformed

    private void sbtExcluirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbtExcluirItemActionPerformed
        int r = sItens.getSelectedRow();
        if (r < 0) return;
        TableControl.del(sItens, r);
    }//GEN-LAST:event_sbtExcluirItemActionPerformed

    private void sbtFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbtFinalizarActionPerformed
        String nmpaciente = sPaciente.getText().trim();
        if (nmpaciente.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Paciênte não Localizado!!!\nOu usuário não teclou ENTER para localizar nome...", "Atenção!!!", JOptionPane.INFORMATION_MESSAGE);
            sPaciente.requestFocus();
            return;
        }
        int rows = sItens.getRowCount();
        for (int i=0;i<rows;i++) {
            String sql = "INSERT INTO s_farmacia(s_cpf, s_paciente, s_codigo, s_descricao, " + 
                         "s_dtsaida, s_unidade, s_quantidade) VALUES (?, ?, ?, ?, ?, ?, ?);";
            
            String tcpf    = sItens.getModel().getValueAt(i, 0).toString();
            String tpacien = sItens.getModel().getValueAt(i, 1).toString();
            String tcodigo = sItens.getModel().getValueAt(i, 2).toString();
            String tdescr  = sItens.getModel().getValueAt(i, 3).toString();
            String tdtsaid = Dates.StringtoString(sItens.getModel().getValueAt(i, 4).toString(),"dd/MM/yyyy","yyyy-MM-dd");
            String tunidad = sItens.getModel().getValueAt(i, 5).toString();
            int    tqaunti = Integer.valueOf(sItens.getModel().getValueAt(i, 6).toString());
            try {
                PreparedStatement stm = conn.conn.prepareStatement(sql);
                stm.setString(1, tcpf);
                stm.setString(2, tpacien);
                stm.setString(3, tcodigo);
                stm.setString(4, tdescr);
                stm.setDate(5, Date.valueOf(tdtsaid));
                stm.setString(6, tunidad);
                stm.setInt(7, tqaunti);
                
                stm.execute();
                stm.close();
            } catch (Exception e) {}
        }
        
        TableControl.Clear(sItens);
        sCPF.setText(null);
        sPaciente.setText(null);
        sCodigo.setSelectedIndex(0);
        sDescricao.setSelectedIndex(0);
        sDtSaida.setText(Dates.DateFormat("dd/MM/yyyy", new java.util.Date()));
        sUnidade.setText(null);
        sQuantidade.setValue(1);
        
        sCPF.requestFocus();
    }//GEN-LAST:event_sbtFinalizarActionPerformed

    private void sCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sCodigoFocusLost
        ShowUnidade(sCodigo.getSelectedItem().toString().trim());
    }//GEN-LAST:event_sCodigoFocusLost

    private void cBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cBuscaKeyReleased
        if ("".equals(cBusca.getText().trim())) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter(cBusca.getText().trim().toUpperCase()));
            } catch (PatternSyntaxException pse) {
                   System.err.println("Bad regex pattern");
            }
        }                        
    }//GEN-LAST:event_cBuscaKeyReleased

    private void cbtEntradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtEntradasActionPerformed
        GerarEntradas(cDtInicial.getText(), cDtFinal.getText());
    }//GEN-LAST:event_cbtEntradasActionPerformed

    private void cbtSaidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtSaidasActionPerformed
        GerarSaidas(cDtInicial.getText(), cDtFinal.getText());
    }//GEN-LAST:event_cbtSaidasActionPerformed

    private void sCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sCPFKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String[][] dadospac = null;
            try {
                dadospac = conn.LerCamposTabela(new String[] {"pc_nome"}, "pacientes", "pc_numero = '" + sCPF.getText().trim() + "';");
            } catch (Exception e) {}
            if (dadospac == null) {
                JOptionPane.showMessageDialog(this, "Paciênte não cadastrado!!!", "Atenção!!!", JOptionPane.INFORMATION_MESSAGE);
                sCPF.requestFocus();
                return;
            }

            sPaciente.setText(dadospac[0][3]);
            sDtSaida.setText(Dates.DateFormat("dd/MM/yyyy", new java.util.Date()));                }
    }//GEN-LAST:event_sCPFKeyReleased

    private void cItensKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cItensKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(null,
                "Deseja excluir este medicamento ? \n\nA exclusão do medicamento\nexclui também seus lançamentos.",
                "Atenção", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (n == JOptionPane.YES_OPTION) {            
                int srow = cItens.getSelectedRow();
                int crow = cItens.convertRowIndexToModel(srow);
                String scod = cItens.getModel().getValueAt(crow, 0).toString().trim();
                String esql = "DELETE FROM e_farmacia WHERE e_codigo = '" + scod + "';";
                String ssql = "DELETE FROM s_farmacia WHERE s_codigo = '" + scod + "';";

                try {
                    conn.ExecutarComando(esql);
                    conn.ExecutarComando(ssql);

                    TableControl.del(cItens, crow);
                } catch (Exception e) {e.printStackTrace();}
            }
        }
    }//GEN-LAST:event_cItensKeyReleased

    private void btnListarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarEstoqueActionPerformed
        String estoqueEntradasSQL = "SELECT " +
                    "e.e_codigo, " +
                    "Upper(Trim(e.e_descricao)) AS descricao, " +
                    "Upper(Trim(e.e_unidade)) AS unidade, " +
                    "SUM(e.e_quantidade) AS entradas " +
                    "FROM " +
                    "e_farmacia e " +
                    "GROUP BY " +
                    "e.e_codigo, " +
                    "Upper(Trim(e.e_descricao)), " +
                    "Upper(Trim(e.e_unidade)) " +
                    "ORDER BY " +
                    "Upper(Trim(e.e_descricao))";
        String estoqueSaidasSQL = "SELECT " +
                    "s.s_codigo, " +
                    "Upper(Trim(s.s_descricao)) AS descricao, " +
                    "Upper(Trim(s.s_unidade)) AS unidade, " +
                    "SUM(s.s_quantidade) AS saidas " +
                    "FROM " +
                    "s_farmacia s " +
                    "GROUP BY " +
                    "s.s_codigo, " +
                    "Upper(Trim(s.s_descricao)), " +
                    "Upper(Trim(s.s_unidade)) " +
                    "ORDER BY " +
                    "Upper(Trim(s.s_descricao))";
        List<EntradasSaidasEstoque> lista = new ArrayList<EntradasSaidasEstoque>();

        // Entradas
        ResultSet rs = conn.AbrirTabela(estoqueEntradasSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                String BuscaGrupo = BuscaGrupoMedicamento(rs.getString("e_codigo"));
                String nmGrupo = BuscaNomeGrupo(BuscaGrupo);
                lista.add(new EntradasSaidasEstoque(rs.getString("e_codigo"), rs.getString("descricao"), rs.getString("unidade"), rs.getDouble("entradas"), 0,Integer.valueOf(BuscaGrupo), nmGrupo));                        
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}
        
        // Saidas
        rs = conn.AbrirTabela(estoqueSaidasSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
//                boolean achou = false;
//                for (int i = 0; i < lista.size(); i++) {
//                    if (lista.get(i).descricao.toUpperCase().trim().equalsIgnoreCase(rs.getString("descricao").toUpperCase().trim()) && 
//                        lista.get(i).unidade.toUpperCase().trim().equalsIgnoreCase(rs.getString("unidade").toUpperCase().trim())) {
//                        lista.get(i).saida = rs.getDouble("saidas");
//                        achou = true;
//                        break;
//                    }
//                }
//                if (!achou) {
                    String BuscaGrupo = BuscaGrupoMedicamento(rs.getString("s_codigo"));
                    String nmGrupo = BuscaNomeGrupo(BuscaGrupo);
                    lista.add(new EntradasSaidasEstoque(rs.getString("s_codigo"), rs.getString("descricao"), rs.getString("unidade"), 0, rs.getDouble("saidas"),Integer.valueOf(BuscaGrupo),nmGrupo));
//                }
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}

        // Ordenar Lista pelo GrupoId
        Collections.sort (lista, new Comparator() {
            public int compare(Object o1, Object o2) {
                EntradasSaidasEstoque p1 = (EntradasSaidasEstoque) o1;
                EntradasSaidasEstoque p2 = (EntradasSaidasEstoque) o2;
                return p1.getGrupoid() < p2.getGrupoid() ? -1 : (p1.getGrupoid() > p2.getGrupoid() ? +1 : 0);
            }
        });

        List<EntradasSaidasEstoque> listagrp = new ArrayList<EntradasSaidasEstoque>();
        for(EntradasSaidasEstoque o : lista) {
            String tmpCodigo = o.getCodigo();
            int pos = BuscaGrupo(listagrp, tmpCodigo);
            if (pos > -1) {
                EntradasSaidasEstoque g = listagrp.get(pos);
                g.SomaEntrada(o.getEntrada());
                g.SomaSaida(o.getSaida());
                listagrp.set(pos, g);
            } else {
                listagrp.add(o);
            }
        }
        
        JasperPrint jasperPrint = null;
        try {
            JRDataSource jrds = new JRBeanCollectionDataSource(listagrp);

            String reportFileName = "./reports/rEstoque.jasper";
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(reportFileName);
            jasperPrint = JasperFillManager.fillReport(reporte, null, jrds);
            viewReportFrame("Relatorio de Saldos no Estoque", jasperPrint);
        } catch (JRException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnListarEstoqueActionPerformed

    private void btnSaidaMedicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaidaMedicaActionPerformed
        String dtini = Dates.StringtoString(cDtInicial.getText(), "dd/MM/yyyy", "yyyy-MM-dd");
        String dtfim = Dates.StringtoString(cDtFinal.getText(), "dd/MM/yyyy", "yyyy-MM-dd");
        
        String estoqueSaidasSQL = "SELECT f.s_codigo, f.s_descricao, " + 
                "(SELECT Sum(s_quantidade) FROM s_farmacia s WHERE s.s_codigo = f.s_codigo AND " + 
                "(s.s_dtsaida >= '" + dtini + "' AND s.s_dtsaida <= '" + dtfim + "')) AS saidas FROM s_farmacia f " +
                "WHERE f.s_dtsaida >= '" + dtini + "' AND f.s_dtsaida <= '" + dtfim + "' " + 
                "GROUP BY f.s_codigo, f.s_descricao ORDER BY f.s_codigo;";
        List<EntradasSaidasEstoque> lista = new ArrayList<EntradasSaidasEstoque>();

        // Entradas
        ResultSet rs = conn.AbrirTabela(estoqueSaidasSQL, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {
                lista.add(new EntradasSaidasEstoque(rs.getString("s_codigo"), rs.getString("s_descricao"), "", 0, rs.getDouble("saidas"),0, ""));                        
            }
        } catch (SQLException sex) {}
        try { DbMain.FecharTabela(rs); } catch (Exception ex) {}
        
        JasperPrint jasperPrint = null;
        try {
            JRDataSource jrds = new JRBeanCollectionDataSource(lista);

            Map parametros = new HashMap();
            parametros.put("dtini", cDtInicial.getText());
            parametros.put("dtfim", cDtFinal.getText());

            String reportFileName = "./reports/rSaidaEstoque.jasper";
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(reportFileName);
            jasperPrint = JasperFillManager.fillReport(reporte, parametros, jrds);
            viewReportFrame("Relatorio de Saidas de Medicamentos no Estoque", jasperPrint);
        } catch (JRException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaidaMedicaActionPerformed

    private int BuscaGrupo(List<EntradasSaidasEstoque> grp, String value) {
        boolean bachei = false; int i = 0;
        for (i = 0; i <= grp.size() - 1; i++) {
            EntradasSaidasEstoque o = grp.get(i);
            if (o.getCodigo().equalsIgnoreCase(value)) {
                bachei = true;
                break;
            }
        }
        return bachei ? i : -1;
    }
    
    private void GerarEntradas(String dtini, String dtfim) {
        String query = "SELECT * FROM e_farmacia WHERE e_dtcompra >= '" + 
                Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd") +
                "' AND e_dtcompra <= '" + Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd") +
                "' ORDER BY Upper(e_descricao);";
        ResultSet rs = conn.AbrirTabela(query, ResultSet.CONCUR_READ_ONLY);

        Map parametros = new HashMap();
        parametros.put("dtini", Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd"));
        parametros.put("dtfim", Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd"));
        
        //implementação da interface JRDataSource para DataSource ResultSet
        JRResultSetDataSource jrRS = new JRResultSetDataSource( rs );

        String fileName = "./reports/rEntradas.jasper";

        try {
            JasperPrint print = JasperFillManager.fillReport(fileName, null, jrRS);
            viewReportFrame("Relatorio de Entradas no Estoque", print);
        } catch (Exception ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);
    }

    private void GerarSaidas(String dtini, String dtfim) {
//        String query = "SELECT f.s_cpf,(SELECT p.pc_nome FROM pacientes p WHERE CAST(p.pc_numero AS Text) = f.s_cpf OR " + 
//                       "CAST(p.pc_cpf AS Text) = f.s_cpf) AS s_paciente," + 
//                       "f.s_codigo,f.s_descricao,f.s_dtsaida,f.s_unidade, f.s_quantidade " +
//                "FROM s_farmacia f WHERE " +
//                "f.s_dtsaida >= '" + Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd") + "' AND f.s_dtsaida <= '" + Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd") + "' " +
//                "ORDER BY " +
//                "f.s_cpf,Upper(f.s_descricao),f.s_dtsaida";
        String query = "SELECT o.s_cpf, " + 
                       "(SELECT p.pc_nome FROM pacientes p WHERE CAST(p.pc_numero AS Text) = o.s_cpf OR CAST(p.pc_cpf AS Text) = o.s_cpf) AS s_paciente, " +
                       "o.s_codigo, Upper(o.s_descricao) s_descricao, o.s_dtsaida, o.s_unidade, o.s_quantidade " +
                       "FROM o_farmacia o WHERE o.s_dtsaida >= '" + Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd") +
                       "' AND o.s_dtsaida <= '" + Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd") + "' " +
                       "UNION ALL " +
                       "SELECT f.s_cpf, " +
                       "(SELECT p.pc_nome FROM pacientes p WHERE CAST(p.pc_numero AS Text) = f.s_cpf OR CAST(p.pc_cpf AS Text) = f.s_cpf) AS s_paciente, " +
                       "f.s_codigo, Upper(f.s_descricao) s_descricao, f.s_dtsaida, f.s_unidade, f.s_quantidade " +
                       "FROM s_farmacia f WHERE f.s_dtsaida >= '" + Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd") + 
                       "' AND f.s_dtsaida <= '" + Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd") + "' " +
                       "ORDER BY 1, 4, 5";
        ResultSet rs = conn.AbrirTabela(query, ResultSet.CONCUR_READ_ONLY);

        Map parametros = new HashMap();
        parametros.put("dtini", Dates.StringtoString(dtini, "dd/MM/yyyy", "yyyy-MM-dd"));
        parametros.put("dtfim", Dates.StringtoString(dtfim, "dd/MM/yyyy", "yyyy-MM-dd"));
        
        //implementação da interface JRDataSource para DataSource ResultSet
        JRResultSetDataSource jrRS = new JRResultSetDataSource( rs );

        String fileName = "./reports/rSaidas.jasper";

        try {
            JasperPrint print = JasperFillManager.fillReport(fileName, null, jrRS);
            viewReportFrame("Relatorio de Saidas no Estoque", print);
        } catch (Exception ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);
    }

    private static void viewReportFrame( String titulo, JasperPrint print ) {

        /*
         * Cria um JRViewer para exibir o relatório.
         * Um JRViewer é uma JPanel.
         */
        JRViewer viewer = new JRViewer( print );

        // cria o JFrame
        JFrame frameRelatorio = new JFrame( titulo );

        // adiciona o JRViewer no JFrame
        frameRelatorio.add( viewer, BorderLayout.CENTER );

        // configura o tamanho padrão do JFrame
        frameRelatorio.setSize( 500, 500 );

        // maximiza o JFrame para ocupar a tela toda.
        frameRelatorio.setExtendedState( JFrame.MAXIMIZED_BOTH );

        // configura a operação padrão quando o JFrame for fechado.
        frameRelatorio.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );

        // exibe o JFrame
        frameRelatorio.setVisible( true );

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarEstoque;
    private javax.swing.JButton btnSaidaMedica;
    private javax.swing.JTextField cBusca;
    private javax.swing.JFormattedTextField cDtFinal;
    private javax.swing.JFormattedTextField cDtInicial;
    private javax.swing.JTable cItens;
    private javax.swing.JButton cbtEntradas;
    private javax.swing.JButton cbtSaidas;
    private javax.swing.JComboBox eCodigo;
    private javax.swing.JComboBox eDescricao;
    private javax.swing.JFormattedTextField eDtCompra;
    private javax.swing.JTable eItens;
    private javax.swing.JTextField eNumLote;
    private javax.swing.JFormattedTextField ePreco;
    private javax.swing.JSpinner eQuantidade;
    private javax.swing.JTextField eUnidade;
    private javax.swing.JFormattedTextField eValidade;
    private javax.swing.JButton ebtExcluir;
    private javax.swing.JButton ebtFinalizar;
    private javax.swing.JButton ebtLancar;
    private javax.swing.JTabbedPane jAbas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JProgressBar jbarra;
    private javax.swing.JFormattedTextField sCPF;
    private javax.swing.JComboBox sCodigo;
    private javax.swing.JComboBox sDescricao;
    private javax.swing.JFormattedTextField sDtSaida;
    private javax.swing.JTable sItens;
    private javax.swing.JTextField sPaciente;
    private javax.swing.JSpinner sQuantidade;
    private javax.swing.JTextField sUnidade;
    private javax.swing.JButton sbtExcluirItem;
    private javax.swing.JButton sbtFinalizar;
    private javax.swing.JButton sbtLancar;
    // End of variables declaration//GEN-END:variables
}
