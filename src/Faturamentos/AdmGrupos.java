/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Faturamentos;

import Db.DbMain;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Funcoes.newTable;
import static java.lang.Thread.sleep;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Samic
 */
public class AdmGrupos extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.con;

    TableRowSorter<TableModel> sorterGrupos;
    TableRowSorter<TableModel> sorterMedicamentos;
    TableRowSorter<TableModel> sorterTrocar;
    
    int tam = 0, n = 0;
    
    /**
     * Creates new form AdmGrupos
     */
    public AdmGrupos() {
        initComponents();
        
        // Grupos
        String[][] gcheader = {{"Codigo","Descrição"}, {"80","600"}};
        TableControl.header(Grupos, gcheader, new boolean[] {false, false});

        // Medicamentos
        String[] mcheader = {"Codigo","Descrição"};
        int[]    mcwidth  = {100,570};
        String[] mcalign  = {"C","L"};
        newTable.InitTable(Medicamentos, mcheader, mcwidth, mcalign, true);                

        // Trocar
        String[] tcheader = {"Codigo","Descrição"};
        int[]    tcwidth  = {80,530};
        String[] tcalign  = {"C","L"};
        newTable.InitTable(Trocar, tcheader, tcwidth, tcalign, true);       
        
        FillGrupos();
        
        Grupos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (Grupos.getSelectedRow() > -1) {
                    FillMedicamentos(Grupos.getModel().getValueAt(Grupos.getSelectedRow(), 0).toString());
                }
            }
        });
        
        tgbTrocar.setSelected(false);
        ChangeNewGrupoName(false);        
    }

    private void ChangeNewGrupoName(boolean value) {
        lGrupoName.setVisible(value);
        lGrupoName.setEnabled(iconable);
        nGrupoName.setVisible(value);
        nGrupoName.setEnabled(iconable);
        btnConfirma.setVisible(value);
        btnConfirma.setEnabled(value);
        
        if (value) {
            nGrupoName.setText("");
            nGrupoName.requestFocus();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane2 = new javax.swing.JScrollPane();
        Grupos = new javax.swing.JTable();
        lblGrupos = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        gBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnAdc = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnAlt = new javax.swing.JButton();
        tgbTrocar = new javax.swing.JToggleButton();
        pnlTrocar = new javax.swing.JPanel();
        lblTrocar = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Trocar = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tBuscar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnTrocar = new javax.swing.JButton();
        pbTrocar = new javax.swing.JProgressBar();
        lGrupoName = new javax.swing.JLabel();
        nGrupoName = new javax.swing.JTextField();
        btnConfirma = new javax.swing.JButton();
        lblMedicamentos = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Medicamentos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        mBuscar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pbMedicamentos = new javax.swing.JProgressBar();
        pbGrupos = new javax.swing.JProgressBar();

        setClosable(true);
        setForeground(java.awt.Color.lightGray);
        setIconifiable(true);
        setTitle(".:: Administração dos Grupos de Medicamentos");
        setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        setMaximumSize(new java.awt.Dimension(730, 524));
        setMinimumSize(new java.awt.Dimension(730, 524));
        setName("AdmGrupos"); // NOI18N
        setVisible(true);

        Grupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Grupos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Grupos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Grupos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Grupos);
        Grupos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        lblGrupos.setBackground(new java.awt.Color(153, 204, 255));
        lblGrupos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGrupos.setForeground(new java.awt.Color(0, 0, 204));
        lblGrupos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/aguardando.png"))); // NOI18N
        lblGrupos.setText(".:: Grupos");
        lblGrupos.setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Buscar:");

        gBuscar.setBorder(null);
        gBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                gBuscarKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/clear.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(gBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("[ Opções ]"));

        btnAdc.setBackground(new java.awt.Color(51, 255, 51));
        btnAdc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdc.setText("Adc");
        btnAdc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdcActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(255, 51, 51));
        btnDel.setText("Del");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnAlt.setBackground(new java.awt.Color(255, 255, 102));
        btnAlt.setText("Alt");
        btnAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltActionPerformed(evt);
            }
        });

        tgbTrocar.setBackground(new java.awt.Color(51, 51, 255));
        tgbTrocar.setText("Mov");
        tgbTrocar.setOpaque(true);
        tgbTrocar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tgbTrocarStateChanged(evt);
            }
        });

        pnlTrocar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "[ Mover para ... ]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tgbTrocar, org.jdesktop.beansbinding.ELProperty.create("${selected}"), pnlTrocar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        lblTrocar.setBackground(new java.awt.Color(153, 204, 255));
        lblTrocar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTrocar.setForeground(new java.awt.Color(0, 0, 204));
        lblTrocar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/aguardando.png"))); // NOI18N
        lblTrocar.setText(".:: Grupos para mover...");
        lblTrocar.setOpaque(true);

        Trocar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Trocar.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Trocar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tgbTrocar, org.jdesktop.beansbinding.ELProperty.create("${selected}"), Trocar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jScrollPane4.setViewportView(Trocar);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("Buscar:");

        tBuscar.setBorder(null);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tgbTrocar, org.jdesktop.beansbinding.ELProperty.create("${selected}"), tBuscar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        tBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tBuscarKeyReleased(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/clear.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel8)
                .addComponent(tBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnTrocar.setText("Mover");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tgbTrocar, org.jdesktop.beansbinding.ELProperty.create("${selected}"), btnTrocar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btnTrocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrocarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTrocarLayout = new javax.swing.GroupLayout(pnlTrocar);
        pnlTrocar.setLayout(pnlTrocarLayout);
        pnlTrocarLayout.setHorizontalGroup(
            pnlTrocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTrocarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTrocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTrocarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTrocar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTrocarLayout.createSequentialGroup()
                        .addComponent(lblTrocar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbTrocar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlTrocarLayout.setVerticalGroup(
            pnlTrocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTrocarLayout.createSequentialGroup()
                .addGroup(pnlTrocarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTrocar)
                    .addComponent(pbTrocar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTrocar))
        );

        lGrupoName.setText("Novo nome para o Grupo:");

        btnConfirma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/encerrado.png"))); // NOI18N
        btnConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTrocar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAdc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tgbTrocar)
                        .addGap(18, 18, 18)
                        .addComponent(lGrupoName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nGrupoName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdc)
                        .addComponent(btnDel)
                        .addComponent(btnAlt)
                        .addComponent(tgbTrocar)
                        .addComponent(lGrupoName)
                        .addComponent(nGrupoName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTrocar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblMedicamentos.setBackground(new java.awt.Color(153, 255, 153));
        lblMedicamentos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMedicamentos.setForeground(new java.awt.Color(0, 0, 204));
        lblMedicamentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/medicamentos.png"))); // NOI18N
        lblMedicamentos.setText(".:: Medicamentos no Grupo");
        lblMedicamentos.setOpaque(true);

        Medicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Medicamentos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Medicamentos.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(Medicamentos);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Buscar:");

        mBuscar.setBorder(null);
        mBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mBuscarKeyReleased(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/clear.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(mBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pbMedicamentos.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblMedicamentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pbGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblGrupos)
                    .addComponent(pbGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMedicamentos)
                    .addComponent(pbMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FillGrupos() {
        // limpa controle
        TableControl.Clear(Grupos);
        TableControl.Clear(Trocar);        
        
        // Bloqueia
        Grupos.setEnabled(false);
        Trocar.setEnabled(false);
        
        gBuscar.setEnabled(false);
        tBuscar.setEnabled(false);
        
        String sql = "SELECT id, descricao FROM grupos ORDER BY UPPER(TRIM(descricao));";
        ResultSet rs = conn.AbrirTabela(sql, ResultSet.CONCUR_READ_ONLY);
        try {
            tam = conn.RecordCount(rs);
            n = 1;
            pbGrupos.setValue(0);
            pbGrupos.setVisible(true);

            pbTrocar.setValue(0);
            pbTrocar.setVisible(true);

            while (rs.next()) {                
                new Thread() {
                    public void run() {
                        int pos = (n * 100) / tam;
                        try {sleep(100);} catch (Exception ex) {}
                        
                        pbGrupos.setValue(pos);
                        pbGrupos.repaint();

                        pbTrocar.setValue(pos);
                        pbTrocar.repaint();
                    }
                }.start();                

                String tcodigo = rs.getString("id");
                String tdescri = rs.getString("descricao").toUpperCase();
                
                TableControl.add(Grupos, new String[][] {{tcodigo, tdescri}, { "C", "L" } }, true);
                newTable.add(Trocar, new Object[] {tcodigo, tdescri});
                n++;
            }
        } catch (Exception e) {}
        DbMain.FecharTabela(rs);
        
        sorterGrupos = null;
        sorterGrupos = new TableRowSorter<TableModel>(Grupos.getModel());
        Grupos.setRowSorter(sorterGrupos);

        sorterTrocar = null;
        sorterTrocar = new TableRowSorter<TableModel>(Trocar.getModel());
        Trocar.setRowSorter(sorterTrocar);

        pbGrupos.setValue(1);
        pbGrupos.repaint();

        pbTrocar.setValue(1);
        pbTrocar.repaint();

        // Desbloqueia
        Grupos.setEnabled(true);
        Trocar.setEnabled(true);

        gBuscar.setEnabled(true);
        tBuscar.setEnabled(true);
    }
    
    private void gBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gBuscarKeyReleased
        try {
            if ("".equals(gBuscar.getText().trim())) {
                sorterGrupos.setRowFilter(null);
            } else {
                    if (gBuscar.getText() != null) sorterGrupos.setRowFilter(RowFilter.regexFilter(gBuscar.getText().trim(), new int[0]));
            }
        } catch (Exception pse) {
            //System.err.println("Bad regex pattern");
        }
    }//GEN-LAST:event_gBuscarKeyReleased

    private void mBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mBuscarKeyReleased
        try {
            if ("".equals(mBuscar.getText().trim())) {            
                sorterMedicamentos.setRowFilter(null);
            } else {
                    if (mBuscar.getText() != null) sorterMedicamentos.setRowFilter(RowFilter.regexFilter(mBuscar.getText().trim(), new int[0]));
            }
        } catch (Exception pse) {
            //System.err.println("Bad regex pattern");
        }
    }//GEN-LAST:event_mBuscarKeyReleased

    private void tBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tBuscarKeyReleased
        try {
            if ("".equals(tBuscar.getText().trim())) {
                sorterTrocar.setRowFilter(null);
            } else {
                    if (tBuscar.getText() != null) sorterTrocar.setRowFilter(RowFilter.regexFilter(tBuscar.getText().trim(), new int[0]));
            }
        } catch (Exception pse) {
            //System.err.println("Bad regex pattern");
        }
    }//GEN-LAST:event_tBuscarKeyReleased

    private void tgbTrocarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tgbTrocarStateChanged
        BindBotoes(tgbTrocar.isSelected());
    }//GEN-LAST:event_tgbTrocarStateChanged

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        gBuscar.setText("");
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        mBuscar.setText("");
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        tBuscar.setText("");
    }//GEN-LAST:event_jLabel9MouseClicked

    private void btnAdcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdcActionPerformed
        if (gBuscar.getText().trim().equalsIgnoreCase("")) return;
        if (Grupos.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(null, "Não pode adicionar um item existente!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        String insertSQL = "INSERT INTO grupos (descricao) VALUES ('" + gBuscar.getText().trim() + "');";
        if (conn.ExecutarComando(insertSQL) != 0) {
            String tcodigo = BuscaNewId(gBuscar.getText().trim());
            if (tcodigo != null) {
                TableControl.add(Grupos, new String[][] {{tcodigo, gBuscar.getText().trim()}, { "C", "L" } }, true);
                newTable.add(Trocar, new Object[] {tcodigo, gBuscar.getText().trim()});

                sorterGrupos = null;
                sorterGrupos = new TableRowSorter<TableModel>(Grupos.getModel());
                Grupos.setRowSorter(sorterGrupos);

                sorterTrocar = null;
                sorterTrocar = new TableRowSorter<TableModel>(Trocar.getModel());
                Trocar.setRowSorter(sorterTrocar);
                
                JOptionPane.showMessageDialog(null, "Item adicionado!","Atenção",INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao adicionar!","Atenção",INFORMATION_MESSAGE);
            }
        } else {
                JOptionPane.showMessageDialog(null, "Erro ao adicionar!","Atenção",INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAdcActionPerformed

    private void btnTrocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrocarActionPerformed
        if (Grupos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Um Grupo deve estar selecionado!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        if (Medicamentos.getSelectedRows().length == 0) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um medicamento no mínimo!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        if (Trocar.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "O Grupo destino deve estar selecionado!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        if (Grupos.getModel().getValueAt(Grupos.getSelectedRow(), 0).equals(Trocar.getModel().getValueAt(Trocar.getSelectedRow(), 0)) ) {
            JOptionPane.showMessageDialog(null, "O Grupo destino deve ser diferente do Grupo de origem!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        int[] selRow = Medicamentos.getSelectedRows();
        for (int pos = 0; pos < selRow.length; pos++) {
            int nRow = selRow[pos];
            int modelRow = Medicamentos.convertRowIndexToModel(nRow);
            String updateSQL = "UPDATE e_farmacia SET e_grupoid = ? WHERE e_grupoid = ? AND e_codigo = ?;";
            Object[][] param = new Object[][] {
                {"int", Integer.valueOf(Trocar.getModel().getValueAt(Trocar.getSelectedRow(), 0).toString())},
                {"int", Integer.valueOf(Grupos.getModel().getValueAt(Grupos.getSelectedRow(), 0).toString())},
                {"string", Medicamentos.getModel().getValueAt(modelRow, 0).toString()}
            };
            conn.ExecutarComando(updateSQL, param);            
        }
        
        while (Medicamentos.getSelectedRows().length > 0) {
            int[] sRow = Medicamentos.getSelectedRows();
            int nRow = selRow[sRow.length - 1];
            int modelRow = Medicamentos.convertRowIndexToModel(nRow);
            if (!TableControl.del(Medicamentos, nRow)) {
               JOptionPane.showMessageDialog(null, "Não consegui executar a ação. Reinicia a tela!","Atenção",INFORMATION_MESSAGE);
            }
        }        
    }//GEN-LAST:event_btnTrocarActionPerformed

    private void btnAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltActionPerformed
        if (Grupos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Um Grupo deve estar selecionado!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        ChangeNewGrupoName(true);
    }//GEN-LAST:event_btnAltActionPerformed

    private void btnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaActionPerformed
        if (nGrupoName.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "O nome do Grupo não pode ser vazio!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        if (Grupos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um Grupo para alterar!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        Object[] options = { "Sim", "Não" };
        int n = JOptionPane.showOptionDialog(this, "Deseja realmente alterar o nome deste Grupo  ?", "Atenção", 0, 3, null, options, options[0]);
        if (n == 1) return;
        if (nGrupoName.getText().trim().length() > 100) {
            JOptionPane.showMessageDialog(null, "O nome do Grupo deve conter no máximo 100 caracteres!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        boolean bAchei = false;
        int nrows = Grupos.getRowCount();
        int pos = 0;
        for (pos = 0; pos <= nrows - 1; pos++ ) {
            if (Grupos.getModel().getValueAt(pos, 1).toString().trim().toUpperCase().equalsIgnoreCase(nGrupoName.getText().trim().toUpperCase())) {
                bAchei = true;
                break;
            }
        }
        if (bAchei) {
            JOptionPane.showMessageDialog(null, "O nome do Grupo deve ser diferente dos existentes!","Atenção",INFORMATION_MESSAGE);
            nGrupoName.selectAll();
            nGrupoName.requestFocus();
            return;
        }
        
        int gpos = Grupos.getSelectedRow();
        String updateSQL = "UPDATE grupos SET descricao = ? WHERE id = ?";
        Object[][] param = new Object[][] {
            {"string", nGrupoName.getText().trim().toUpperCase()},
            {"int", Integer.valueOf(Grupos.getModel().getValueAt(gpos, 0).toString())}
        };
        if (conn.ExecutarComando(updateSQL, param) > 0) {
            Grupos.setValueAt(nGrupoName.getText().trim().toUpperCase(), gpos, 1);
            Trocar.setValueAt(nGrupoName.getText().trim().toUpperCase(), gpos, 1);
        }
        ChangeNewGrupoName(false);
    }//GEN-LAST:event_btnConfirmaActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        if (Grupos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um Grupo para alterar!","Atenção",INFORMATION_MESSAGE);
            return;
        }
        
        Object[] options = { "Sim", "Não" };
        int n = JOptionPane.showOptionDialog(this, "Deseja Excluir o Grupo <" + Grupos.getModel().getValueAt(Grupos.getSelectedRow(), 1).toString() + "> ?", "Atenção", 0, 3, null, options, options[0]);
        if (n == 1) return;
        n = JOptionPane.showOptionDialog(this, "Tem certeza ?\n\nTodos os dados serão perdidos para sempre!", "Atenção", 0, 3, null, options, options[0]);
        if (n == 1) return;
        String deleteSQL = "DELETE FROM e_farmacia WHERE e_grupoid = ?;";
        Object[][] param = new Object[][] {{"int", Integer.valueOf(Grupos.getModel().getValueAt(Grupos.getSelectedRow(), 0).toString())}};
        conn.ExecutarComando(deleteSQL, param);

        deleteSQL = "DELETE FROM grupos WHERE id = ?;";
        if (conn.ExecutarComando(deleteSQL, param) > 0) {
            int sRow = Grupos.getSelectedRow();
            TableControl.del(Grupos, sRow);
            TableControl.del(Trocar, sRow);
        }        
    }//GEN-LAST:event_btnDelActionPerformed

    private String BuscaNewId(String value) {
        String retorno = null;
        String sql = "SELECT id, descricao FROM grupos WHERE Upper(Trim(descricao)) = '" + value.toUpperCase() + "'ORDER BY UPPER(TRIM(descricao));";
        ResultSet rs = conn.AbrirTabela(sql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (rs.next()) {                
                retorno = rs.getString("id");
            }
        } catch (Exception ex) {}
        DbMain.FecharTabela(rs);
        return retorno;
    }
    
    private void BindBotoes(boolean value) {
        btnAdc.setEnabled(!value);
        btnAlt.setEnabled(!value);
        btnDel.setEnabled(!value);
        if (value) tBuscar.requestFocus();
    }
    
    private void FillMedicamentos(String id) {
        // limpa controle
        TableControl.Clear(Medicamentos);        
        
        String sql = "SELECT DISTINCT e_codigo id, Upper(Trim(e_descricao)) descricao FROM e_farmacia WHERE e_grupoid = " + id + " GROUP BY 1, 2 ORDER BY Upper(Trim(e_descricao));";
        ResultSet rs = conn.AbrirTabela(sql, ResultSet.CONCUR_READ_ONLY);
        try {
            tam = conn.RecordCount(rs);
            n = 1;
            pbMedicamentos.setValue(0);
            pbMedicamentos.setVisible(true);
            while (rs.next()) {                
                new Thread() {
                    public void run() {
                        int pos = (n * 100) / tam;
                        try {sleep(100);} catch (Exception ex) {}
                        pbMedicamentos.setValue(pos);
                        //pbMedicamentos.repaint();
                    }
                }.start();                

                String tcodigo = rs.getString("id");
                String tdescri = rs.getString("descricao").toUpperCase();
                
                newTable.add(Medicamentos, new Object[] {tcodigo, tdescri});
                n++;
            }
        } catch (Exception e) {}
        DbMain.FecharTabela(rs);
        
        sorterMedicamentos = new TableRowSorter<TableModel>(Medicamentos.getModel());
        Medicamentos.setRowSorter(sorterMedicamentos);
        pbMedicamentos.setValue(1);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Grupos;
    private javax.swing.JTable Medicamentos;
    private javax.swing.JTable Trocar;
    private javax.swing.JButton btnAdc;
    private javax.swing.JButton btnAlt;
    private javax.swing.JButton btnConfirma;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnTrocar;
    private javax.swing.JTextField gBuscar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lGrupoName;
    private javax.swing.JLabel lblGrupos;
    private javax.swing.JLabel lblMedicamentos;
    private javax.swing.JLabel lblTrocar;
    private javax.swing.JTextField mBuscar;
    private javax.swing.JTextField nGrupoName;
    private javax.swing.JProgressBar pbGrupos;
    private javax.swing.JProgressBar pbMedicamentos;
    private javax.swing.JProgressBar pbTrocar;
    private javax.swing.JPanel pnlTrocar;
    private javax.swing.JTextField tBuscar;
    private javax.swing.JToggleButton tgbTrocar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
