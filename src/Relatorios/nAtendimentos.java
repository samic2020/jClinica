/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Relatorios;

import Db.DbMain;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import java.awt.BorderLayout;
import java.awt.Point;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JRViewer;

/**
 *
 * @author supervisor
 */
public class nAtendimentos extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.con;
    TableRowSorter<TableModel> sorter;
    int cdmed = -1;
    boolean bExecNome = false, bExecCodigo = false;
    
    /**
     * Creates new form nAtendimentos
     */
    public nAtendimentos() {
        initComponents();
        
        String tsql = "SELECT md_codigo, md_nome, md_categoria FROM medicos ORDER BY Lower(md_nome);";
        ResultSet trs = conn.AbrirTabela(tsql, ResultSet.CONCUR_READ_ONLY);
        jMedicos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jMedicos.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table =(JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 1) {
                    int trow = jMedicos.getSelectedRow();
                    int modelRow = jMedicos.convertRowIndexToModel(trow);
                    cdmed = Integer.valueOf(jMedicos.getModel().getValueAt(modelRow, 0).toString());
                }
            }
        });
        
        String[][] aheader = { { "codigo", "Medico", "Especialidade" }, { "0", "380", "150" } };
        TableControl.header(jMedicos, aheader);
        TableControl.delall(jMedicos);
        
        String mcod = null, mnome = null, mfuncao = null;
        try {
            while (trs.next()) {
                try { mcod = trs.getString("md_codigo"); } catch (SQLException e) {}
                try { mnome = trs.getString("md_nome"); } catch (SQLException e) {}
                try { mfuncao = trs.getString("md_categoria"); } catch (SQLException e) {}
                TableControl.add(jMedicos, new String[][] { { mcod, mnome, mfuncao }, { "C", "L", "L" } }, true);
                sorter = new TableRowSorter(jMedicos.getModel());
                jMedicos.setRowSorter(sorter);
            }
        } catch (SQLException e) {}
        try {trs.close();} catch (SQLException e) {}

        jBuscar.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent e) {
                if ("".equals(jBuscar.getText().trim())) {
                    sorter.setRowFilter(null);
                } else {
                    try {
                        sorter.setRowFilter(
                               RowFilter.regexFilter(jBuscar.getText().trim()));
                    } catch (PatternSyntaxException pse) {
                       System.err.println("Bad regex pattern");
                    }
                }
            }

            public void keyTyped(KeyEvent e) {
            }

            public void keyPressed(KeyEvent e) {
            }
        });

        FillLab();
        jBuscar.requestFocus();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoRel = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jdtinic = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jdtfim = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMedicos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jbtPrint = new javax.swing.JButton();
        jBuscar = new javax.swing.JTextField();
        jParticular = new javax.swing.JRadioButton();
        jAtendimentos = new javax.swing.JRadioButton();
        jProcedimentos = new javax.swing.JRadioButton();
        jLaboratorio = new javax.swing.JRadioButton();
        labCodigo = new javax.swing.JComboBox<>();
        labNome = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(101, 227, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Relatório de Atendimentos");
        setOpaque(true);
        setVisible(true);

        jLabel1.setText("Período:");

        jdtinic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jdtinic.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setText("até");

        jdtfim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jdtfim.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setBackground(new java.awt.Color(0, 102, 255));
        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(253, 251, 251));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Selecione o Médico");
        jLabel3.setOpaque(true);

        jMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cdMed", "Médico", "Especialidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jMedicos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jMedicos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jMedicos);
        if (jMedicos.getColumnModel().getColumnCount() > 0) {
            jMedicos.getColumnModel().getColumn(0).setResizable(false);
            jMedicos.getColumnModel().getColumn(1).setResizable(false);
            jMedicos.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setText("Buscar:");

        jbtPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/nPrint.png"))); // NOI18N
        jbtPrint.setText("Print");
        jbtPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPrintActionPerformed(evt);
            }
        });

        jParticular.setBackground(new java.awt.Color(101, 227, 255));
        GrupoRel.add(jParticular);
        jParticular.setSelected(true);
        jParticular.setText("Particulares");

        jAtendimentos.setBackground(new java.awt.Color(101, 227, 255));
        GrupoRel.add(jAtendimentos);
        jAtendimentos.setText("Atendimentos");

        jProcedimentos.setBackground(new java.awt.Color(101, 227, 255));
        GrupoRel.add(jProcedimentos);
        jProcedimentos.setText("Procedimentos");

        jLaboratorio.setBackground(new java.awt.Color(101, 227, 255));
        GrupoRel.add(jLaboratorio);
        jLaboratorio.setText("Laboratório");
        jLaboratorio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jLaboratorioStateChanged(evt);
            }
        });

        labCodigo.setEnabled(false);
        labCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labCodigoItemStateChanged(evt);
            }
        });

        labNome.setEnabled(false);
        labNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labNomeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLaboratorio)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labNome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jbtPrint))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBuscar))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jParticular)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jAtendimentos)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jProcedimentos)
                            .addGap(109, 109, 109)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdtinic, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdtfim, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jParticular)
                    .addComponent(jAtendimentos)
                    .addComponent(jProcedimentos)
                    .addComponent(jLabel1)
                    .addComponent(jdtinic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jdtfim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE))
                    .addComponent(jLaboratorio))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPrintActionPerformed
        if (cdmed <= -1) return;
        
        Map parametros = new HashMap();
        parametros.put("datainic", (Date)jdtinic.getValue());
        parametros.put("datafim", (Date)jdtfim.getValue());
        parametros.put("logado", VariaveisGlobais.logado);
        if (jLaboratorio.isSelected()) {
            parametros.put("cdmed", Integer.valueOf(labCodigo.getSelectedItem().toString()));
        } else {
            parametros.put("cdmed", cdmed);
        }
        
        String repoName;
        if (jParticular.isSelected()) {
            parametros.put("SUBREPORT_DIR", "reports/");
            repoName = "nRelAtendimentos";
            try {
                String fileName = "reports/" + repoName + ".jasper";
                JasperPrint print = JasperFillManager.fillReport(fileName, parametros, conn.conn);
                viewReportFrame("Relatorio de Atendimentos", print);
            } catch (JRException e) {
                e.printStackTrace();
                System.exit(1);
            } catch (Exception e) {
                e.printStackTrace();
                System.exit(1);
            }        
        } else if (jAtendimentos.isSelected()) {
            repoName = "rAtendimentos";
            try {
                String fileName = "reports/" + repoName + ".jasper";
                JasperPrint print = JasperFillManager.fillReport(fileName, parametros, conn.conn);
                viewReportFrame("Relatorio de Atendimentos", print);
            } catch (JRException e) {
                e.printStackTrace();
                System.exit(1);
            } catch (Exception e) {
                e.printStackTrace();
                System.exit(1);
            }        
        } else {
            // Procedimentos
            repoName = "rProcedimentos";
            try {
                String fileName = "reports/" + repoName + ".jasper";
                JasperPrint print = JasperFillManager.fillReport(fileName, parametros, conn.conn);
                viewReportFrame("Relatorio de Atendimentos", print);
            } catch (JRException e) {
                e.printStackTrace();
                System.exit(1);
            } catch (Exception e) {
                e.printStackTrace();
                System.exit(1);
            }        
        }
    }//GEN-LAST:event_jbtPrintActionPerformed

    private void labCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labCodigoItemStateChanged
        if (!bExecNome) {
            int pos = labCodigo.getSelectedIndex();
            if (labNome.getItemCount() > 0) {bExecCodigo = true; labNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
    }//GEN-LAST:event_labCodigoItemStateChanged

    private void labNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = labNome.getSelectedIndex();
            if (labCodigo.getItemCount() > 0) {bExecNome = true; labCodigo.setSelectedIndex(pos); bExecNome = false;}
        }
    }//GEN-LAST:event_labNomeItemStateChanged

    private void jLaboratorioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jLaboratorioStateChanged
        labCodigo.setEnabled(jLaboratorio.isSelected());
        labNome.setEnabled(jLaboratorio.isSelected());
    }//GEN-LAST:event_jLaboratorioStateChanged

    private static void viewReportFrame( String titulo, JasperPrint print ) {

        /*
         * Cria um JRViewer para exibir o relatório.
         * Um JRViewer é uma JPanel.
         */
        JRViewer viewer = new JRViewer( print );

        // cria o JFrame
        JFrame frameRelatorio = new JFrame( titulo );

        // adiciona o JRViewer no JFrame
        frameRelatorio.add( viewer, BorderLayout.CENTER );

        // configura o tamanho padrão do JFrame
        frameRelatorio.setSize( 500, 500 );

        // maximiza o JFrame para ocupar a tela toda.
        frameRelatorio.setExtendedState( JFrame.MAXIMIZED_BOTH );

        // configura a operação padrão quando o JFrame for fechado.
        frameRelatorio.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );

        // exibe o JFrame
        frameRelatorio.setVisible( true );

    }
    
    private void FillLab() {
        String tsql = "select id codigo, nome from laboratorios ORDER BY UPPER(nome);";
        ResultSet tbmedicos = conn.AbrirTabela(tsql, ResultSet.CONCUR_READ_ONLY);
            
        labCodigo.removeAllItems();
        labNome.removeAllItems();
        try {
          while (tbmedicos.next()) {
            labCodigo.addItem(tbmedicos.getString("codigo"));
            labNome.addItem(tbmedicos.getString("nome"));
          }
        }
        catch (Exception err) {}
        DbMain.FecharTabela(tbmedicos);                    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoRel;
    private javax.swing.JRadioButton jAtendimentos;
    private javax.swing.JTextField jBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jLaboratorio;
    private javax.swing.JTable jMedicos;
    private javax.swing.JRadioButton jParticular;
    private javax.swing.JRadioButton jProcedimentos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtPrint;
    private javax.swing.JFormattedTextField jdtfim;
    private javax.swing.JFormattedTextField jdtinic;
    private javax.swing.JComboBox<String> labCodigo;
    private javax.swing.JComboBox<String> labNome;
    // End of variables declaration//GEN-END:variables
}
