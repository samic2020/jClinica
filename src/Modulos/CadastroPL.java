/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulos;

import Db.DbMain;
import Funcoes.Dates;
import Funcoes.FuncoesGlobais;
import static Funcoes.GuiUtils.scrollToVisible;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Samic
 */
public class CadastroPL extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.con;
    boolean isNew = false;
    boolean isAlt = false;
    boolean bExecNome = false, bExecCodigo = false;

    /**
     * Creates new form CadastroPL
     */
    public CadastroPL() {
        initComponents();
        
        changeTipo.setVisible(false);
        changeTipo.setEnabled(false);
        changeTipo.setSelectedIndex(0);
        changeTipo();
        
        EnableTela(false);
        LimpaTela();
        
        ConfigView(labTabela,"L");
        labTabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
        ConfigView(ultTabela,"U");
        ultTabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
        LerCombos(labCodigo, labNome, "L");
        LerCombos(eleCodigo, eleNome, "E");
        LerCombos(ultCodigo, ultNome, "U");
        LerCombos(preCodigo, preNome, "P");
        
        ChangeTab();

        btnIncluir.setEnabled(true);
        btnGravar.setEnabled(false);
        btnRetornar.setEnabled(true);

        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        
        isNew = false; isAlt = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneProcedimentos = new javax.swing.JTabbedPane();
        Laboratorio = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        labCodigo = new javax.swing.JComboBox<>();
        labNome = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        labTabela = new javax.swing.JTable();
        Eletro = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        eleCodigo = new javax.swing.JComboBox<>();
        eleNome = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        eleValor1 = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        eleValorMd1 = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        eleValor2 = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        eleValorMd2 = new javax.swing.JFormattedTextField();
        eleCodProc = new javax.swing.JTextField();
        eleNomeProc = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        Ultra = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ultTabela = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        ultCodigo = new javax.swing.JComboBox<>();
        ultNome = new javax.swing.JComboBox<>();
        Preventivo = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        preCodigo = new javax.swing.JComboBox<>();
        preNome = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        preValor1 = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        preValorMd1 = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        preValor2 = new javax.swing.JFormattedTextField();
        jLabel25 = new javax.swing.JLabel();
        preValorMd2 = new javax.swing.JFormattedTextField();
        preCodProc = new javax.swing.JTextField();
        preNomeProc = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txfBuscar = new javax.swing.JTextField();
        btnClear = new javax.swing.JLabel();
        tipo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lvalor1 = new javax.swing.JFormattedTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTabbedPaneProcedimentos1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txfBuscar1 = new javax.swing.JTextField();
        btnClear1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        lvalormd1 = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        lvalormd2 = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        lvalor2 = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lCodigo = new javax.swing.JTextField();
        lNome = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnRetornar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        idTabela = new javax.swing.JLabel();
        codigo = new javax.swing.JComboBox<>();
        nome = new javax.swing.JComboBox<>();
        changeTipo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(101, 227, 255));
        setIconifiable(true);
        setTitle(".:: Cadastro de Laboratório, Eletro, Ultra e Preventivo");
        setOpaque(true);
        setVisible(true);

        jTabbedPaneProcedimentos.setBackground(new java.awt.Color(101, 227, 255));
        jTabbedPaneProcedimentos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPaneProcedimentos.setName(""); // NOI18N
        jTabbedPaneProcedimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPaneProcedimentosMouseClicked(evt);
            }
        });

        Laboratorio.setBackground(new java.awt.Color(101, 227, 255));
        Laboratorio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Laboratório:");

        labCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labCodigoItemStateChanged(evt);
            }
        });

        labNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labNomeItemStateChanged(evt);
            }
        });

        labTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(labTabela);

        javax.swing.GroupLayout LaboratorioLayout = new javax.swing.GroupLayout(Laboratorio);
        Laboratorio.setLayout(LaboratorioLayout);
        LaboratorioLayout.setHorizontalGroup(
            LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaboratorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LaboratorioLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labNome, 0, 569, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE))
                .addContainerGap())
        );
        LaboratorioLayout.setVerticalGroup(
            LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaboratorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LaboratorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jTabbedPaneProcedimentos.addTab("Laboratório/Ortopedia", Laboratorio);

        Eletro.setBackground(new java.awt.Color(101, 227, 255));
        Eletro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("Médico:");

        eleCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleCodigoItemStateChanged(evt);
            }
        });

        eleNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleNomeItemStateChanged(evt);
            }
        });

        jLabel18.setText("Valor1:");

        eleValor1.setEditable(false);
        eleValor1.setBackground(new java.awt.Color(255, 255, 255));
        eleValor1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValor1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValor1.setText("0,00");

        jLabel19.setText("Valor Medico1:");

        eleValorMd1.setEditable(false);
        eleValorMd1.setBackground(new java.awt.Color(255, 255, 255));
        eleValorMd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValorMd1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValorMd1.setText("0,00");

        jLabel20.setText("Valor2:");

        eleValor2.setEditable(false);
        eleValor2.setBackground(new java.awt.Color(255, 255, 255));
        eleValor2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValor2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValor2.setText("0,00");

        jLabel21.setText("Valor Medico2:");

        eleValorMd2.setEditable(false);
        eleValorMd2.setBackground(new java.awt.Color(255, 255, 255));
        eleValorMd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValorMd2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValorMd2.setText("0,00");

        eleCodProc.setEditable(false);
        eleCodProc.setBackground(new java.awt.Color(255, 255, 255));

        eleNomeProc.setEditable(false);
        eleNomeProc.setBackground(new java.awt.Color(255, 255, 255));

        jLabel27.setText("Proced.:");

        javax.swing.GroupLayout EletroLayout = new javax.swing.GroupLayout(Eletro);
        Eletro.setLayout(EletroLayout);
        EletroLayout.setHorizontalGroup(
            EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EletroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EletroLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EletroLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EletroLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(EletroLayout.createSequentialGroup()
                        .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(EletroLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EletroLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eleNomeProc, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                            .addComponent(eleNome, 0, 590, Short.MAX_VALUE))))
                .addContainerGap())
        );
        EletroLayout.setVerticalGroup(
            EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EletroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(eleCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eleNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(eleCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eleNomeProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(eleValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(eleValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EletroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(eleValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(eleValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPaneProcedimentos.addTab("Eletro", Eletro);

        Ultra.setBackground(new java.awt.Color(101, 227, 255));
        Ultra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ultTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(ultTabela);

        jLabel14.setText("Médico:");

        ultCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ultCodigoItemStateChanged(evt);
            }
        });

        ultNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ultNomeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout UltraLayout = new javax.swing.GroupLayout(Ultra);
        Ultra.setLayout(UltraLayout);
        UltraLayout.setHorizontalGroup(
            UltraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UltraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UltraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                    .addGroup(UltraLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ultCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ultNome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        UltraLayout.setVerticalGroup(
            UltraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UltraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UltraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ultCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ultNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneProcedimentos.addTab("Ultra/Procedimentos", Ultra);

        Preventivo.setBackground(new java.awt.Color(101, 227, 255));
        Preventivo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("Médico:");

        preCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                preCodigoItemStateChanged(evt);
            }
        });

        preNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                preNomeItemStateChanged(evt);
            }
        });

        jLabel22.setText("Valor1:");

        preValor1.setEditable(false);
        preValor1.setBackground(new java.awt.Color(255, 255, 255));
        preValor1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValor1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValor1.setText("0,00");

        jLabel23.setText("Valor Medico1:");

        preValorMd1.setEditable(false);
        preValorMd1.setBackground(new java.awt.Color(255, 255, 255));
        preValorMd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValorMd1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValorMd1.setText("0,00");

        jLabel24.setText("Valor2:");

        preValor2.setEditable(false);
        preValor2.setBackground(new java.awt.Color(255, 255, 255));
        preValor2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValor2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValor2.setText("0,00");

        jLabel25.setText("Valor Medico2:");

        preValorMd2.setEditable(false);
        preValorMd2.setBackground(new java.awt.Color(255, 255, 255));
        preValorMd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValorMd2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValorMd2.setText("0,00");

        preCodProc.setEditable(false);
        preCodProc.setBackground(new java.awt.Color(255, 255, 255));

        preNomeProc.setEditable(false);
        preNomeProc.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setText("Proced.:");

        javax.swing.GroupLayout PreventivoLayout = new javax.swing.GroupLayout(Preventivo);
        Preventivo.setLayout(PreventivoLayout);
        PreventivoLayout.setHorizontalGroup(
            PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreventivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PreventivoLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PreventivoLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(preNomeProc, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
                    .addComponent(preNome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PreventivoLayout.createSequentialGroup()
                    .addGap(173, 173, 173)
                    .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PreventivoLayout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(preValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel23)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(preValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PreventivoLayout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(preValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel25)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(preValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(214, Short.MAX_VALUE)))
        );
        PreventivoLayout.setVerticalGroup(
            PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PreventivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(preCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(preCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preNomeProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PreventivoLayout.createSequentialGroup()
                    .addGap(70, 70, 70)
                    .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(preValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23)
                        .addComponent(preValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(PreventivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(preValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25)
                        .addComponent(preValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(71, Short.MAX_VALUE)))
        );

        jTabbedPaneProcedimentos.addTab("Preventivo", Preventivo);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Buscar:");

        txfBuscar.setBorder(null);
        txfBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfBuscarKeyReleased(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnClear.setText("X");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnClearMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        tipo.setText("Laboratório:");

        jLabel1.setText("Valor1:");

        lvalor1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        lvalor1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lvalor1.setText("0,00");
        lvalor1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lvalor1FocusGained(evt);
            }
        });

        jTabbedPaneProcedimentos1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPaneProcedimentos1.setName(""); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneProcedimentos1.addTab("Laboratório", jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );

        jTabbedPaneProcedimentos1.addTab("Eletro", jPanel8);

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneProcedimentos1.addTab("Ultra", jPanel9);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );

        jTabbedPaneProcedimentos1.addTab("Preventivo", jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Buscar:");

        txfBuscar1.setBorder(null);

        btnClear1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClear1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnClear1.setText("X");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfBuscar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear1)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jLabel6.setText("Laboratório:");

        jTextField3.setText("jTextField1");

        jTextField4.setText("jTextField2");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPaneProcedimentos1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneProcedimentos1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(233, 233, 233)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(233, Short.MAX_VALUE)))
        );

        lvalormd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        lvalormd1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lvalormd1.setText("0,00");
        lvalormd1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lvalormd1FocusGained(evt);
            }
        });

        jLabel2.setText("Valor Md1:");

        lvalormd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        lvalormd2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lvalormd2.setText("0,00");
        lvalormd2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lvalormd2FocusGained(evt);
            }
        });

        jLabel7.setText("Valor Md2:");

        lvalor2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        lvalor2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lvalor2.setText("0,00");
        lvalor2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lvalor2FocusGained(evt);
            }
        });

        jLabel8.setText("Valor2:");

        jLabel9.setText("Proced.:");

        lCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lCodigo.setText("00000000");

        jPanel1.setBackground(new java.awt.Color(101, 227, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "[ Opções ]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/plus.png"))); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnIncluir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnIncluir.setIconTextGap(5);
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/edit.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAlterar.setIconTextGap(5);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/remove.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnExcluir.setIconTextGap(5);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/save.png"))); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGravar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGravar.setIconTextGap(5);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnRetornar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/cancel.png"))); // NOI18N
        btnRetornar.setText("Retornar");
        btnRetornar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnRetornar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnRetornar.setIconTextGap(5);
        btnRetornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetornarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRetornar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnGravar)
                    .addComponent(btnRetornar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Id:");

        idTabela.setBackground(new java.awt.Color(255, 255, 204));
        idTabela.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        idTabela.setForeground(new java.awt.Color(51, 51, 255));
        idTabela.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idTabela.setText("000000");
        idTabela.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        idTabela.setOpaque(true);

        codigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codigoItemStateChanged(evt);
            }
        });

        nome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nomeItemStateChanged(evt);
            }
        });

        changeTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laboratorio", "Eletro", "Ultra", "Preventivo" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPaneProcedimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lNome, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvalor1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvalormd1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvalor2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lvalormd2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneProcedimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo)
                    .addComponent(jLabel10)
                    .addComponent(idTabela)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lvalor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lvalormd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(lvalor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(lvalormd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeTipo() {
        tipo.setText((changeTipo.getSelectedIndex() == 0 ? "Laboratório" : "Médico") + ":");
        if (tipo.getText().substring(0,1).toUpperCase().equalsIgnoreCase("L")) {
            int postab = labTabela.getSelectedRow();
            LerCombos(codigo, nome, "L");
            if (postab > -1) labTabela.setRowSelectionInterval(postab, postab);
            return;
        } else if (changeTipo.getSelectedItem().toString().substring(0,1).toUpperCase().equalsIgnoreCase("E")) {
            LerCombos(codigo, nome, "E");
            return;
        } else if (changeTipo.getSelectedItem().toString().substring(0,1).toUpperCase().equalsIgnoreCase("U")) {
            LerCombos(codigo, nome, "U");
            return;
        } else if (changeTipo.getSelectedItem().toString().substring(0,1).toUpperCase().equalsIgnoreCase("U")) {
            LerCombos(codigo, nome, "P");
            return;
        }
    }                             
    
    private void FindTipo(String value) {
        int pos = -1;
        for (int i=0; i < codigo.getItemCount(); i++) {
            if (codigo.getItemAt(i).equalsIgnoreCase(value)) {
                pos = i;
                break;
            }
        }
        codigo.setSelectedIndex(pos);
    }

    private void LoadLU(String scodigo, JTable grid, String tipo) {
        TableControl.Clear(grid);
        grid.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        String[][] itens = {};
        if (tipo.equalsIgnoreCase("L")) {
            String selectSQL = "SELECT id, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'L' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet labRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (labRs.next()) {
                    String qid = null; try { qid = labRs.getString("id"); } catch (SQLException ex) {}
                    String qcdleup = null; try { qcdleup = labRs.getString("codleup"); } catch (SQLException ex) {}
                    String qnmleup = null; try { qnmleup = labRs.getString("nomeleup"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = labRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = labRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = labRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = labRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = labRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = labRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    itens = FuncoesGlobais.ArraysAdd(itens, new String[] {qid, "L", qcdleup, qnmleup, qcodigo, qnome, df.format(qvr1), df.format(qvrmd1), df.format(qvr2), df.format(qvrmd2)});
                }
                DbMain.FecharTabela(labRs);
            } catch (SQLException e) { }                        
        }
        if (tipo.equalsIgnoreCase("U")) {
            String selectSQL = "SELECT id, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'U' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet ultRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (ultRs.next()) {
                    String qid = null; try { qid = ultRs.getString("id"); } catch (SQLException ex) {}
                    String qcdleup = null; try { qcdleup = ultRs.getString("codleup"); } catch (SQLException ex) {}
                    String qnmleup = null; try { qnmleup = ultRs.getString("nomeleup"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = ultRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = ultRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = ultRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = ultRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = ultRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = ultRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    itens = FuncoesGlobais.ArraysAdd(itens, new String[] {qid, "U", qcdleup, qnmleup, qcodigo, qnome, df.format(qvr1), df.format(qvrmd1), df.format(qvr2), df.format(qvrmd2)});
                }
                DbMain.FecharTabela(ultRs);
            } catch (SQLException e) { }                        
        }        
        if (itens.length > 0) {
            try {
                for (String[] data : itens) {
                    TableControl.add(grid, new String[][] {data,{"C", "C", "C", "L", "C", "L", "R", "R", "R", "R"}}, true);
                }
            } catch (Exception e) {e.printStackTrace();}

            ListSelectionModel selectionModel = grid.getSelectionModel();
            final boolean bEnabled = grid.getRowCount() > 0;
            selectionModel.addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    btnAlterar.setEnabled(bEnabled);
                    btnExcluir.setEnabled(bEnabled);
                }
            });                
        }
    }
    
    private void LoadEP(String scodigo, String tipo) {
        boolean bEnabled = false;
        if (tipo.equalsIgnoreCase("E")) {
            // Limpa
            eleCodProc.setToolTipText("");
            eleCodProc.setText("");
            eleNomeProc.setText("");
            eleValor1.setText("0,00");
            eleValorMd1.setText("0,00");
            eleValor2.setText("0,00");
            eleValorMd2.setText("0,00");

            String selectSQL = "SELECT id, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'E' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet eleRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (eleRs.next()) {
                    bEnabled = true;
                    
                    String qid = null; try { qid = eleRs.getString("id"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = eleRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = eleRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = eleRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = eleRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = eleRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = eleRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    eleCodProc.setToolTipText(qid);
                    eleCodProc.setText(qcodigo);
                    eleNomeProc.setText(qnome);
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    eleValor1.setText(df.format(qvr1));
                    eleValorMd1.setText(df.format(qvrmd1));
                    eleValor2.setText(df.format(qvr2));
                    eleValorMd2.setText(df.format(qvrmd2));
                }
            } catch (SQLException e) {
                    eleCodProc.setToolTipText("");
                    eleCodProc.setText("");
                    eleNomeProc.setText("");
                    eleValor1.setText("0,00");
                    eleValorMd1.setText("0,00");
                    eleValor2.setText("0,00");
                    eleValorMd2.setText("0,00");
            }                        
        }
        if (tipo.equalsIgnoreCase("P")) {
            // Limpa
            preCodProc.setToolTipText("");
            preCodProc.setText("");
            preNomeProc.setText("");
            preValor1.setText("0,00");
            preValorMd1.setText("0,00");
            preValor2.setText("0,00");
            preValorMd2.setText("0,00");

            String selectSQL = "SELECT id, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'P' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet eleRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (eleRs.next()) {
                    bEnabled = true;
                    
                    String qid = null; try { qid = eleRs.getString("id"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = eleRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = eleRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = eleRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = eleRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = eleRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = eleRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    preCodProc.setToolTipText(qid);
                    preCodProc.setText(qcodigo);
                    preNomeProc.setText(qnome);
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    preValor1.setText(df.format(qvr1));
                    preValorMd1.setText(df.format(qvrmd1));
                    preValor2.setText(df.format(qvr2));
                    preValorMd2.setText(df.format(qvrmd2));
                }
            } catch (SQLException e) {
                    preCodProc.setToolTipText("");
                    preCodProc.setText("");
                    preNomeProc.setText("");
                    preValor1.setText("0,00");
                    preValorMd1.setText("0,00");
                    preValor2.setText("0,00");
                    preValorMd2.setText("0,00");
            }                        
        }      
        btnAlterar.setEnabled(bEnabled);
        btnExcluir.setEnabled(bEnabled);
    }

    private void LimpaTela() {
        idTabela.setText("00000000");
        try {codigo.setSelectedIndex(0);} catch (Exception e) {}
        try {nome.setSelectedIndex(0);} catch (Exception e) {}
        lCodigo.setText("00000000");
        lNome.setText("");
        lvalor1.setText("0,00");
        lvalormd1.setText("0,00");
        lvalor2.setText("0,00");
        lvalormd2.setText("0,00");
    }
    
    private void EnableTela(boolean value) {
        idTabela.setEnabled(value);
        codigo.setEnabled(value);
        nome.setEnabled(value);
        lCodigo.setEnabled(value);
        lNome.setEnabled(value);
        lvalor1.setEnabled(value);
        lvalormd1.setEnabled(value);
        lvalor2.setEnabled(value);
        lvalormd2.setEnabled(value);
    }
    
    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        isNew = true; isAlt = false;
        jTabbedPaneProcedimentos.setEnabled(false);
        
        // Laboratório
        labCodigo.setEnabled(false);
        labNome.setEnabled(false);
        labTabela.setEnabled(false);         
        
        // Eletro
        eleCodigo.setEnabled(false);
        eleNome.setEnabled(false);            

        // Ultra
        ultCodigo.setEnabled(false);
        ultNome.setEnabled(false);
        ultTabela.setEnabled(false);
        
        // Preventivo
        preCodigo.setEnabled(false);
        preNome.setEnabled(false);            
        
        changeTipo.setSelectedIndex(jTabbedPaneProcedimentos.getSelectedIndex());
        changeTipo();
        
        codigo.setEnabled(true);
        nome.setEnabled(true);
        lCodigo.setEnabled(true);
        lNome.setEnabled(true);
        lvalor1.setEnabled(true);
        lvalormd1.setEnabled(true);
        lvalor2.setEnabled(true);
        lvalormd2.setEnabled(true);
        
        btnIncluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnGravar.setEnabled(true);
        btnRetornar.setEnabled(true);
        
        codigo.setSelectedIndex(0);
        codigo.requestFocus();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        isNew = false; isAlt = true;
        jTabbedPaneProcedimentos.setEnabled(false);
        
        // Laboratório
        labCodigo.setEnabled(false);
        labNome.setEnabled(false);
        labTabela.setEnabled(false);         
        
        // Eletro
        eleCodigo.setEnabled(false);
        eleNome.setEnabled(false);            

        // Ultra
        ultCodigo.setEnabled(false);
        ultNome.setEnabled(false);
        ultTabela.setEnabled(false);
        
        // Preventivo
        preCodigo.setEnabled(false);
        preNome.setEnabled(false);            
        
        changeTipo.setSelectedIndex(jTabbedPaneProcedimentos.getSelectedIndex());
        changeTipo();
        
        codigo.setEnabled(false);
        nome.setEnabled(false);
        lCodigo.setEnabled(false);
        lNome.setEnabled(false);
        lvalor1.setEnabled(true);
        lvalormd1.setEnabled(true);
        lvalor2.setEnabled(true);
        lvalormd2.setEnabled(true);

        switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
            case 0:
                int posrow = labTabela.getSelectedRow();
                FindTipo(labTabela.getValueAt(posrow,2).toString());
                lCodigo.setText(labTabela.getValueAt(posrow,4).toString());
                lNome.setText(labTabela.getValueAt(posrow,5).toString());
                lvalor1.setText(labTabela.getValueAt(posrow,6).toString());
                lvalormd1.setText(labTabela.getValueAt(posrow,7).toString());
                lvalor2.setText(labTabela.getValueAt(posrow,8).toString());
                lvalormd2.setText(labTabela.getValueAt(posrow,9).toString());
                break;
            case 1:
                FindTipo(eleCodigo.getSelectedItem().toString());
                lCodigo.setText(eleCodProc.getText());
                lNome.setText(eleNomeProc.getText());
                lvalor1.setText(eleValor1.getText());
                lvalormd1.setText(eleValorMd1.getText());
                lvalor2.setText(eleValor2.getText());
                lvalormd2.setText(eleValorMd2.getText());
                break;
            case 2:
                int rowpos = ultTabela.getSelectedRow();
                FindTipo(ultTabela.getValueAt(rowpos,2).toString());
                lCodigo.setText(ultTabela.getValueAt(rowpos,4).toString());
                lNome.setText(ultTabela.getValueAt(rowpos,5).toString());
                lvalor1.setText(ultTabela.getValueAt(rowpos,6).toString());
                lvalormd1.setText(ultTabela.getValueAt(rowpos,7).toString());
                lvalor2.setText(ultTabela.getValueAt(rowpos,8).toString());
                lvalormd2.setText(ultTabela.getValueAt(rowpos,9).toString());
                break;
            case 3:
                FindTipo(preCodigo.getSelectedItem().toString());
                lCodigo.setText(preCodProc.getText());
                lNome.setText(preNomeProc.getText());
                lvalor1.setText(preValor1.getText());
                lvalormd1.setText(preValorMd1.getText());
                lvalor2.setText(preValor2.getText());
                lvalormd2.setText(preValorMd2.getText());
                break;                
        }
                        
        btnIncluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnGravar.setEnabled(true);
        btnRetornar.setEnabled(true);
        
        lvalor1.requestFocus();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        Object[] options = { "Sim", "Não" };
        int n = JOptionPane.showOptionDialog(this, "Exclui o Lancamento selecionado?", "Atenção", 0, 3, null, options, options[1]);
        if (n == 1) return;                

        int qid = -1; String deleteSQL = "";
        switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
            case 0:
                qid = Integer.valueOf(labTabela.getValueAt(labTabela.getSelectedRow(), 0).toString());
                deleteSQL = "DELETE FROM nproced WHERE id = ?;";
                if (conn.ExecutarComando(deleteSQL, new Object[][] {{"int", qid}}) > 0) {
                    int pos = labTabela.getSelectedRow();
                    TableControl.del(labTabela, pos);                    
                }
                break;
            case 1:
                qid = Integer.valueOf(eleCodProc.getToolTipText());
                deleteSQL = "DELETE FROM nproced WHERE id = ?;";
                if (conn.ExecutarComando(deleteSQL, new Object[][] {{"int", qid}}) > 0) {
                    eleCodProc.setToolTipText("");
                    eleCodProc.setText("");
                    eleNomeProc.setText("");
                    eleValor1.setText("0,00");
                    eleValorMd1.setText("0,00");
                    eleValor2.setText("0,00");
                    eleValorMd2.setText("0,00");
                }
                break;
            case 2:
                qid = Integer.valueOf(ultTabela.getValueAt(ultTabela.getSelectedRow(), 0).toString());
                deleteSQL = "DELETE FROM nproced WHERE id = ?;";
                if (conn.ExecutarComando(deleteSQL, new Object[][] {{"int", qid}}) > 0) {
                    int pos = ultTabela.getSelectedRow();
                    TableControl.del(ultTabela, pos);                    
                }
                break;
            case 3:
                qid = Integer.valueOf(preCodProc.getToolTipText());
                deleteSQL = "DELETE FROM nproced WHERE id = ?;";
                if (conn.ExecutarComando(deleteSQL, new Object[][] {{"int", qid}}) > 0) {
                    preCodProc.setToolTipText("");
                    preCodProc.setText("");
                    preNomeProc.setText("");
                    preValor1.setText("0,00");
                    preValorMd1.setText("0,00");
                    preValor2.setText("0,00");
                    preValorMd2.setText("0,00");
                }
                break;                
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        String iuSQL = ""; Object[][] param = null;
        if (isNew || isAlt) {
            // Verifica se dados foram digitados
            if (lCodigo.getText().trim().equalsIgnoreCase("")) {
                JOptionPane.showInternalMessageDialog(this, "O Código é Obrigatório");
                lCodigo.requestFocus();
                return;
            }
            
            if (lNome.getText().trim().equalsIgnoreCase("")) {
                JOptionPane.showInternalMessageDialog(this, "O Nome é Obrigatório");
                lNome.requestFocus();
                return;
            }
            
            if (lvalor1.getText().equalsIgnoreCase("0,00")) {
                JOptionPane.showInternalMessageDialog(this, "O Valor1 é Obrigatório");
                lvalor1.requestFocus();
                return;
            }
            
            if (lvalormd1.getText().equalsIgnoreCase("0,00")) {
                JOptionPane.showInternalMessageDialog(this, "O ValorMd1 é Obrigatório");
                lvalormd1.requestFocus();
                return;
            }
            
            if (lvalor2.getText().equalsIgnoreCase("0,00")) {
                JOptionPane.showInternalMessageDialog(this, "O Valor2 é Obrigatório");
                lvalor2.requestFocus();
                return;
            }
            
            if (lvalormd2.getText().equalsIgnoreCase("0,00")) {
                JOptionPane.showInternalMessageDialog(this, "O ValorMd2 é Obrigatório");
                lvalormd2.requestFocus();
                return;
            }

            String qtipo = "";
            switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
                case 0: 
                    qtipo = "L";
                    break;
                case 1:
                    qtipo = "E";
                    break;
                case 2:
                    qtipo = "U";
                    break;
                case 3:
                    qtipo = "P";
                    break;
            }

            if (isNew) {
                // Verifica se não existe cadastrado
                if (!PesquisaItem(jTabbedPaneProcedimentos.getSelectedIndex())) {
                    iuSQL = "INSERT INTO nproced(tipo, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
                    param = new Object[][] {
                        {"string",qtipo},
                        {"string",codigo.getSelectedItem().toString()},
                        {"string",nome.getSelectedItem().toString().trim().toUpperCase()},
                        {"string",lCodigo.getText().trim().toUpperCase()},
                        {"string",lNome.getText().trim().toUpperCase()},
                        {"decimal",new BigDecimal(lvalor1.getValue().toString())},
                        {"decimal",new BigDecimal(lvalormd1.getValue().toString())},
                        {"decimal",new BigDecimal(lvalor2.getValue().toString())},
                        {"decimal",new BigDecimal(lvalormd2.getValue().toString())},
                        {"date", Dates.toSqlDate(new Date())},
                        {"string", VariaveisGlobais.logado},
                    };      
                } else {
                    JOptionPane.showInternalMessageDialog(this, "Item já Cadastrado!");
                    return;
                }
            }
            if (isAlt) {
                // Verifica se já existe cadastrado
                iuSQL = "UPDATE nproced SET tipo=?, codleup=?, nomeleup=?, codproc=?, nomeproc=?, valor1=?, valormd1=?, valor2=?, valormd2=? WHERE id=?;";
                int qid = -1;
                switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
                    case 0: 
                        qid = Integer.valueOf(labTabela.getValueAt(labTabela.getSelectedRow(),0).toString());
                        break;
                    case 1:
                        qid = Integer.valueOf(eleCodProc.getToolTipText());
                        break;
                    case 2:
                        qid = Integer.valueOf(ultTabela.getValueAt(ultTabela.getSelectedRow(),0).toString());
                        break;
                    case 3:
                        qid = Integer.valueOf(preCodProc.getToolTipText());
                        break;
                }
                param = new Object[][] {
                    {"string",qtipo},
                    {"string",codigo.getSelectedItem().toString()},
                    {"string",nome.getSelectedItem().toString().trim().toUpperCase()},
                    {"string",lCodigo.getText().trim().toUpperCase()},
                    {"string",lNome.getText().trim().toUpperCase()},
                    {"decimal",new BigDecimal(lvalor1.getValue().toString())},
                    {"decimal",new BigDecimal(lvalormd1.getValue().toString())},
                    {"decimal",new BigDecimal(lvalor2.getValue().toString())},
                    {"decimal",new BigDecimal(lvalormd2.getValue().toString())},
                    {"int",qid}
                };                
            }
            conn.ExecutarComando(iuSQL, param);            
        }
        
        switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
            case 0:
                try {LoadLU(codigo.getSelectedItem().toString(), labTabela, "L");} catch (Exception e) {}
                break;
            case 1:
                eleCodigo.setSelectedIndex(codigo.getSelectedIndex());
                try {LoadEP(codigo.getSelectedItem().toString(), "E");} catch (Exception e) {}
                break;
            case 2:
                try {LoadLU(codigo.getSelectedItem().toString(), ultTabela, "U");} catch (Exception e) {}
                break;
            case 3:
                preCodigo.setSelectedIndex(codigo.getSelectedIndex());
                try {LoadEP(codigo.getSelectedItem().toString(), "P");} catch (Exception e) {}
                break;
        }        

        LimpaTela();
        jTabbedPaneProcedimentos.setEnabled(true);

        // Laboratório
        labCodigo.setEnabled(true);
        labNome.setEnabled(true);
        labTabela.setEnabled(true);         
        
        // Eletro
        eleCodigo.setEnabled(true);
        eleNome.setEnabled(true);            

        // Ultra
        ultCodigo.setEnabled(true);
        ultNome.setEnabled(true);
        ultTabela.setEnabled(true);
        
        // Preventivo
        preCodigo.setEnabled(true);
        preNome.setEnabled(true);            
        
        changeTipo.setSelectedIndex(jTabbedPaneProcedimentos.getSelectedIndex());
        changeTipo();
        
        codigo.setEnabled(false);
        nome.setEnabled(false);
        lCodigo.setEnabled(false);
        lNome.setEnabled(false);
        lvalor1.setEnabled(false);
        lvalormd1.setEnabled(false);
        lvalor2.setEnabled(false);
        lvalormd2.setEnabled(false);
        
        btnIncluir.setEnabled(true);
        btnGravar.setEnabled(false);
        btnRetornar.setEnabled(true);
        
        isNew = false; isAlt = false;
        
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnRetornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetornarActionPerformed
        if (isNew || isAlt) {
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(this, "Voçê esta " + (isNew ? "Incluindo" : "Alterando") + " e os dados lançados serão perdidos.\n\nConfirma", "Atenção", 0, 3, null, options, options[1]);
            if (n == 1) return;                
            
            jTabbedPaneProcedimentos.setEnabled(true);
            LimpaTela();            
                                    
            int pos = -1;
            if (isAlt) {
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 0) {
                    pos = labTabela.getSelectedRow();
                    ChangeTab();
                    if (pos > -1) labTabela.getSelectionModel().setSelectionInterval(pos, pos); else labTabela.getSelectionModel().clearSelection();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 1) {
                    //LoadEP(eleCodigo.getSelectedItem().toString(),"E");
                    ChangeTab();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 2) {
                    pos = ultTabela.getSelectedRow();
                    ChangeTab();
                    if (pos > -1) ultTabela.getSelectionModel().setSelectionInterval(pos, pos); else ultTabela.getSelectionModel().clearSelection();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 3) {
                    //LoadEP(preCodigo.getSelectedItem().toString(),"P");
                    ChangeTab();
                }
            }
            
            if (isNew) {
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 0) {
                    ChangeTab();
                    labTabela.getSelectionModel().clearSelection();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 1) {
                    LoadEP(eleCodigo.getSelectedItem().toString(),"E");
                    ChangeTab();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 2) {
                    ChangeTab();
                    ultTabela.getSelectionModel().clearSelection();
                }
                
                if (jTabbedPaneProcedimentos.getSelectedIndex() == 3) {
                    LoadEP(preCodigo.getSelectedItem().toString(),"P");
                    ChangeTab();
                }
            }

            isNew = false; isAlt = false;            

            // Laboratório
            labCodigo.setEnabled(true);
            labNome.setEnabled(true);
            labTabela.setEnabled(true);         

            // Eletro
            eleCodigo.setEnabled(true);
            eleNome.setEnabled(true);            

            // Ultra
            ultCodigo.setEnabled(true);
            ultNome.setEnabled(true);
            ultTabela.setEnabled(true);

            // Preventivo
            preCodigo.setEnabled(true);
            preNome.setEnabled(true);            

            codigo.setEnabled(false);
            nome.setEnabled(false);
            lCodigo.setEnabled(false);
            lNome.setEnabled(false);
            lvalor1.setEnabled(false);
            lvalormd1.setEnabled(false);
            lvalor2.setEnabled(false);
            lvalormd2.setEnabled(false);

            btnIncluir.setEnabled(true);
            btnGravar.setEnabled(false);
            btnRetornar.setEnabled(true);
        } else {
            dispose();
        }
    }//GEN-LAST:event_btnRetornarActionPerformed

    private void jTabbedPaneProcedimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPaneProcedimentosMouseClicked
        ChangeTab();
    }//GEN-LAST:event_jTabbedPaneProcedimentosMouseClicked

    private void btnClearMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseReleased
        txfBuscar.setText(""); txfBuscar.requestFocus();
    }//GEN-LAST:event_btnClearMouseReleased

    private void labCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labCodigoItemStateChanged
        if (!bExecNome) {
            int pos = labCodigo.getSelectedIndex();
            if (labNome.getItemCount() > 0) {bExecCodigo = true; labNome.setSelectedIndex(pos); bExecCodigo = false;}
        }        
        try {LoadLU(labCodigo.getSelectedItem().toString(), labTabela, "L");} catch (Exception e) {}                                
    }//GEN-LAST:event_labCodigoItemStateChanged

    private void lvalor1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lvalor1FocusGained
        lvalor1.selectAll();
    }//GEN-LAST:event_lvalor1FocusGained

    private void lvalormd1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lvalormd1FocusGained
        lvalormd1.selectAll();
    }//GEN-LAST:event_lvalormd1FocusGained

    private void lvalor2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lvalor2FocusGained
        lvalor2.selectAll();
    }//GEN-LAST:event_lvalor2FocusGained

    private void lvalormd2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lvalormd2FocusGained
        lvalormd2.selectAll();
    }//GEN-LAST:event_lvalormd2FocusGained

    private void labNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = labNome.getSelectedIndex();
            if (labCodigo.getItemCount() > 0) {bExecNome = true; labCodigo.setSelectedIndex(pos); bExecNome = false;}
        }        
    }//GEN-LAST:event_labNomeItemStateChanged

    private void eleCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleCodigoItemStateChanged
        if (!bExecNome) {
            int pos = eleCodigo.getSelectedIndex();
            if (eleNome.getItemCount() > 0) {bExecCodigo = true; eleNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
        try {LoadEP(eleCodigo.getSelectedItem().toString(),"E");} catch (Exception e) {}
    }//GEN-LAST:event_eleCodigoItemStateChanged

    private void eleNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = eleNome.getSelectedIndex();
            if (eleCodigo.getItemCount() > 0) {bExecNome = true; eleCodigo.setSelectedIndex(pos); bExecNome = false;}
        }                        
    }//GEN-LAST:event_eleNomeItemStateChanged

    private void ultCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ultCodigoItemStateChanged
        if (!bExecNome) {
            int pos = ultCodigo.getSelectedIndex();
            if (ultNome.getItemCount() > 0) {bExecCodigo = true; ultNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
        try {LoadLU(ultCodigo.getSelectedItem().toString(), ultTabela, "U");} catch (Exception e) {}
    }//GEN-LAST:event_ultCodigoItemStateChanged

    private void ultNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ultNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = ultNome.getSelectedIndex();
            if (ultCodigo.getItemCount() > 0) {bExecNome = true; ultCodigo.setSelectedIndex(pos); bExecNome = false;}
        }
    }//GEN-LAST:event_ultNomeItemStateChanged

    private void preCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_preCodigoItemStateChanged
        if (!bExecNome) {
            int pos = preCodigo.getSelectedIndex();
            if (preNome.getItemCount() > 0) {bExecCodigo = true; preNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
        try {LoadEP(preCodigo.getSelectedItem().toString(),"P");} catch (Exception e) {}
    }//GEN-LAST:event_preCodigoItemStateChanged

    private void preNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_preNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = preNome.getSelectedIndex();
            if (preCodigo.getItemCount() > 0) {bExecNome = true; preCodigo.setSelectedIndex(pos); bExecNome = false;}
        }
    }//GEN-LAST:event_preNomeItemStateChanged

    private void txfBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfBuscarKeyReleased
        int pos = -1;
        switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
            case 0:
                pos = TableControl.seek(labTabela, 5, txfBuscar.getText().trim().toUpperCase());
                if (pos > -1) {
                    labTabela.setRowSelectionInterval(pos, pos);
                    scrollToVisible(labTabela,pos);
                } else labTabela.clearSelection();
                break;
            case 1:
                break;
            case 2:
                pos = TableControl.seek(ultTabela, 5, txfBuscar.getText().trim().toUpperCase());
                if (pos > -1) {
                    ultTabela.setRowSelectionInterval(pos, pos);
                    scrollToVisible(ultTabela,pos);
                } else ultTabela.clearSelection();
                break;
            case 3:
                break;
        }
    }//GEN-LAST:event_txfBuscarKeyReleased

    private void codigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codigoItemStateChanged
        if (!bExecNome) {
            int pos = codigo.getSelectedIndex();
            if (nome.getItemCount() > 0) {bExecCodigo = true; nome.setSelectedIndex(pos); bExecCodigo = false;}
        }        
        try {LoadLU(labCodigo.getSelectedItem().toString(), labTabela, "L");} catch (Exception e) {}                                
    }//GEN-LAST:event_codigoItemStateChanged

    private void nomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nomeItemStateChanged
        if (!bExecCodigo) {
            int pos = nome.getSelectedIndex();
            if (codigo.getItemCount() > 0) {bExecNome = true; codigo.setSelectedIndex(pos); bExecNome = false;}
        }        
    }//GEN-LAST:event_nomeItemStateChanged

    private void ChangeTab() {
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 0) {
            // Labo
            try {codigo.setSelectedIndex(0);} catch (Exception e) {}
            changeTipo.setSelectedIndex(0);
            
            txfBuscar.setEnabled(true);
            btnClear.setEnabled(true);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 1) {
            // Ele
            try {codigo.setSelectedIndex(1);} catch (Exception e) {}
            changeTipo.setSelectedIndex(1);

            txfBuscar.setEnabled(false);
            btnClear.setEnabled(false);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 2) {
            // Ult
            try {codigo.setSelectedIndex(2);} catch (Exception e) {}
            changeTipo.setSelectedIndex(2);
            
            txfBuscar.setEnabled(true);
            btnClear.setEnabled(true);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 3) {
            // Pre
            try {codigo.setSelectedIndex(3);} catch (Exception e) {}
            changeTipo.setSelectedIndex(3);

            txfBuscar.setEnabled(false);
            btnClear.setEnabled(false);            
        }

        changeTipo();        
    }
    
    private boolean PesquisaItem(int value) {
        boolean retorno = false;
        String selectSQL = "SELECT id, tipo, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = ? AND codleup = ? AND nomeproc = ?;";
        Object[][] param = null;
        
        switch (value) {
            case 0: // LABORATORIO
                param = new Object[][] {{"string", "L"}, {"string", codigo.getSelectedItem().toString()}, {"string", lNome.getText().trim().toUpperCase()}};
                break;
            case 1: // Eletro
                param = new Object[][] {{"string", "E"}, {"string", codigo.getSelectedItem().toString()}, {"string", lNome.getText().trim().toUpperCase()}};
                break;
            case 2: // Ultra
                param = new Object[][] {{"string", "U"}, {"string", codigo.getSelectedItem().toString()}, {"string", lNome.getText().trim().toUpperCase()}};
                break;
            case 3: // Prenatal
                param = new Object[][] {{"string", "P"}, {"string", codigo.getSelectedItem().toString()}, {"string", lNome.getText().trim().toUpperCase()}};
                break;
        }
        ResultSet rs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
        try {
            while (rs.next()) {
                retorno = true;
            }
        } catch (SQLException e) {}
        DbMain.FecharTabela(rs);
        
        return retorno;
    }
    
    private void ConfigView(JTable grid, String tipo) {
        try { TableControl.Clear(grid); } catch (Exception err) {}
        String[][] cab = null;
        if (tipo.equalsIgnoreCase("L")) {
            cab = new String[][] {{ "id", "tipo", "codigo", "nome", "codproc", "nomeproc", "valor1", "valormd1", "valor2", "valormd2" }, { "0", "0", "0", "0", "80", "200", "80", "80", "80", "80" }};            
        } else if (tipo.equalsIgnoreCase("E")) {
            
        } else if (tipo.equalsIgnoreCase("U")) {
            cab = new String[][] {{ "id", "tipo", "codigo", "nome", "codproc", "nomeproc", "valor1", "valormd1", "valor2", "valormd2" }, { "0", "0", "0", "0", "80", "200", "80", "80", "80", "80" }};            
        } else {
            // P
        }
        TableControl.header(grid, cab);
    }
    
    private void LerCombos(JComboBox<String> combo1, JComboBox<String> combo2, String tipo) {        
        String tsql = null;
        ResultSet tbmedicos = null;
        if (tipo.equalsIgnoreCase("L")) {
            tsql = "select id codigo, nome from laboratorios ORDER BY UPPER(nome);";
            tbmedicos = conn.AbrirTabela(tsql, 1007);
        } else {
            // EUP
            tsql = "select md_codigo codigo, md_nome nome from medicos ORDER BY UPPER(md_nome);";
            tbmedicos = conn.AbrirTabela(tsql, 1007);
        }
            
        combo1.removeAllItems();
        combo2.removeAllItems();
        try {
          while (tbmedicos.next()) {
            combo1.addItem(tbmedicos.getString("codigo"));
            combo2.addItem(tbmedicos.getString("nome"));
          }
        }
        catch (Exception err) {}
        DbMain.FecharTabela(tbmedicos);            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Eletro;
    private javax.swing.JPanel Laboratorio;
    private javax.swing.JPanel Preventivo;
    private javax.swing.JPanel Ultra;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JLabel btnClear;
    private javax.swing.JLabel btnClear1;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnRetornar;
    private javax.swing.JComboBox<String> changeTipo;
    private javax.swing.JComboBox<String> codigo;
    private javax.swing.JTextField eleCodProc;
    private javax.swing.JComboBox<String> eleCodigo;
    private javax.swing.JComboBox<String> eleNome;
    private javax.swing.JTextField eleNomeProc;
    private javax.swing.JFormattedTextField eleValor1;
    private javax.swing.JFormattedTextField eleValor2;
    private javax.swing.JFormattedTextField eleValorMd1;
    private javax.swing.JFormattedTextField eleValorMd2;
    private javax.swing.JLabel idTabela;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPaneProcedimentos;
    private javax.swing.JTabbedPane jTabbedPaneProcedimentos1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField lCodigo;
    private javax.swing.JTextField lNome;
    private javax.swing.JComboBox<String> labCodigo;
    private javax.swing.JComboBox<String> labNome;
    private javax.swing.JTable labTabela;
    private javax.swing.JFormattedTextField lvalor1;
    private javax.swing.JFormattedTextField lvalor2;
    private javax.swing.JFormattedTextField lvalormd1;
    private javax.swing.JFormattedTextField lvalormd2;
    private javax.swing.JComboBox<String> nome;
    private javax.swing.JTextField preCodProc;
    private javax.swing.JComboBox<String> preCodigo;
    private javax.swing.JComboBox<String> preNome;
    private javax.swing.JTextField preNomeProc;
    private javax.swing.JFormattedTextField preValor1;
    private javax.swing.JFormattedTextField preValor2;
    private javax.swing.JFormattedTextField preValorMd1;
    private javax.swing.JFormattedTextField preValorMd2;
    private javax.swing.JLabel tipo;
    private javax.swing.JTextField txfBuscar;
    private javax.swing.JTextField txfBuscar1;
    private javax.swing.JComboBox<String> ultCodigo;
    private javax.swing.JComboBox<String> ultNome;
    private javax.swing.JTable ultTabela;
    // End of variables declaration//GEN-END:variables
}
