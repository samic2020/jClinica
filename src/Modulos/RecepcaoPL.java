/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulos;

import Atendimentos.bioVerificar;
import Atendimentos.jFichaPaciente;
import Caixa.jPagRec;
import Db.DbMain;
import Funcoes.Collections;
import Funcoes.Dates;
import Funcoes.FuncoesGlobais;
import static Funcoes.GuiUtils.scrollToVisible;
import Funcoes.LerValor;
import Funcoes.Pad;
import Funcoes.ResizeImageIcon;
import Funcoes.StringManager;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Funcoes.jPDF;
import Funcoes.toPrint;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.BarcodeInter25;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.lowagie.text.Element;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import static java.lang.Thread.sleep;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingWorker;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Samic
 */
public class RecepcaoPL extends javax.swing.JInternalFrame {
    String[][] listaespera = new String[0][];
    String[][] listaencerrados = new String[0][];
    TableRowSorter<TableModel> sorter;
    TableRowSorter<TableModel> sorter2;
    TableRowSorter<TableModel> sorter3;
    TableRowSorter<TableModel> sorter4;
    DbMain conn = VariaveisGlobais.con;
    Thread digitacao;
    int tam = 0;
    int n = 0;
    
    private static SwingWorker w = null;

    // RecepçãoPL
    boolean bExecNome = false, bExecCodigo = false;
    boolean bCheck1 = true, bCheck2 = true;
    
    /**
     * Creates new form RecepcaoPL2
     */
    public RecepcaoPL() {
        initComponents();

        // Torna Valores ao médico invisivel
        eleValorMd1.setVisible(false);
        eleValorMd1.setText("0,00");
        eleValorMd2.setVisible(false);
        eleValorMd2.setText("0,00");
        preValorMd1.setVisible(false);
        preValorMd1.setText("0,00");
        preValorMd2.setVisible(false);
        preValorMd2.setText("0,00");

        ConfigView(labTabela,"L");
        ConfigView(ultTabela,"U");
        ConfigLista(tblLista);
        
        LerCombos(labCodigo, labNome, "L");
        LerCombos(eleCodigo, eleNome, "E");
        LerCombos(ultCodigo, ultNome, "U");
        LerCombos(preCodigo, preNome, "P");
        
        TotalizaLista(tblLista);
        EnablePac();
        ShowExtorno();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        TotalGeral = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPaneProcedimentos = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        labTabela = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        labCodigo = new javax.swing.JComboBox<>();
        labNome = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        eleCodigo = new javax.swing.JComboBox<>();
        eleNome = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        eleCodProc = new javax.swing.JTextField();
        eleNomeProc = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        eleValor1 = new javax.swing.JFormattedTextField();
        eleValor2 = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        ultSel1 = new javax.swing.JRadioButton();
        ultSel2 = new javax.swing.JRadioButton();
        eleBtnLancar = new javax.swing.JButton();
        eleValorMd1 = new javax.swing.JFormattedTextField();
        eleValorMd2 = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ultCodigo = new javax.swing.JComboBox<>();
        ultNome = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ultTabela = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        preCodigo = new javax.swing.JComboBox<>();
        preNome = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        preCodProc = new javax.swing.JTextField();
        preNomeProc = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        preValor1 = new javax.swing.JFormattedTextField();
        preValor2 = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        preSel1 = new javax.swing.JRadioButton();
        preSel2 = new javax.swing.JRadioButton();
        preBtnLancar = new javax.swing.JButton();
        preValorMd1 = new javax.swing.JFormattedTextField();
        preValorMd2 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jBiometria = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tbmatricula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tbnomepac = new javax.swing.JTextField();
        jtpBusca = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        rbtNovoPaciente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        clvPacientes = new javax.swing.JTable();
        pbBuscar = new javax.swing.JProgressBar();
        btnReceber = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txfBuscar = new javax.swing.JTextField();
        btnClear = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblExtorno = new javax.swing.JTable();

        setBackground(new java.awt.Color(101, 227, 255));
        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Recepção de Procedimentos");
        setName(""); // NOI18N
        setVisible(true);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "id", "Código", "Discriminação", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLista.setGridColor(new java.awt.Color(255, 255, 255));
        tblLista.setShowHorizontalLines(false);
        tblLista.setShowVerticalLines(false);
        tblLista.setUpdateSelectionOnSort(false);
        tblLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblListaKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(tblLista);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Total a Pagar:");

        TotalGeral.setBackground(new java.awt.Color(204, 255, 255));
        TotalGeral.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TotalGeral.setForeground(new java.awt.Color(0, 153, 51));
        TotalGeral.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        TotalGeral.setText("0,00");
        TotalGeral.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        TotalGeral.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(153, 204, 255));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText(".:: EXAMES A REALIZAR");
        jLabel10.setOpaque(true);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 154, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TotalGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TotalGeral))
                .addContainerGap())
        );

        jTabbedPaneProcedimentos.setBackground(new java.awt.Color(101, 227, 255));
        jTabbedPaneProcedimentos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPaneProcedimentos.setName(""); // NOI18N
        jTabbedPaneProcedimentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPaneProcedimentosMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(101, 227, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        labTabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        labTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labTabelaMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                labTabelaMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(labTabela);

        jLabel4.setText("Laboratório:");

        labCodigo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        labCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labCodigoItemStateChanged(evt);
            }
        });

        labNome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        labNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                labNomeItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labNome, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneProcedimentos.addTab("Laboratório/Ortopedia", jPanel2);

        jPanel3.setBackground(new java.awt.Color(101, 227, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Médico:");

        eleCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleCodigoItemStateChanged(evt);
            }
        });

        eleNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleNomeItemStateChanged(evt);
            }
        });

        jLabel27.setText("Proced.:");

        eleCodProc.setEditable(false);
        eleCodProc.setBackground(new java.awt.Color(255, 255, 255));

        eleNomeProc.setEditable(false);
        eleNomeProc.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setText("Valor1:");

        eleValor1.setEditable(false);
        eleValor1.setBackground(new java.awt.Color(255, 255, 255));
        eleValor1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValor1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValor1.setText("0,00");

        eleValor2.setEditable(false);
        eleValor2.setBackground(new java.awt.Color(255, 255, 255));
        eleValor2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValor2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValor2.setText("0,00");

        jLabel20.setText("Valor2:");

        buttonGroup1.add(ultSel1);
        ultSel1.setSelected(true);

        buttonGroup1.add(ultSel2);

        eleBtnLancar.setText("Lançar");
        eleBtnLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eleBtnLancarActionPerformed(evt);
            }
        });

        eleValorMd1.setEditable(false);
        eleValorMd1.setBackground(new java.awt.Color(255, 255, 255));
        eleValorMd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValorMd1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValorMd1.setText("0,00");

        eleValorMd2.setEditable(false);
        eleValorMd2.setBackground(new java.awt.Color(255, 255, 255));
        eleValorMd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        eleValorMd2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        eleValorMd2.setText("0,00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eleValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eleValorMd2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleCodProc))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eleCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eleNomeProc)
                            .addComponent(eleNome, 0, 536, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eleBtnLancar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eleValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eleValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ultSel1)
                                    .addComponent(ultSel2))))
                        .addContainerGap(238, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(eleCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eleNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(eleCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eleNomeProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(eleValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ultSel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(eleValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ultSel2)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(eleValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eleValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eleBtnLancar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneProcedimentos.addTab("Eletro", jPanel3);

        jPanel4.setBackground(new java.awt.Color(101, 227, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Médico:");

        ultCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ultCodigoItemStateChanged(evt);
            }
        });

        ultNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ultNomeItemStateChanged(evt);
            }
        });

        ultTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ultTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ultTabelaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ultTabela);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ultCodigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ultNome, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ultCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ultNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jTabbedPaneProcedimentos.addTab("Ultra/Procedimentos", jPanel4);

        jPanel5.setBackground(new java.awt.Color(101, 227, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Médico:");

        preCodigo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                preCodigoItemStateChanged(evt);
            }
        });

        preNome.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                preNomeItemStateChanged(evt);
            }
        });

        jLabel28.setText("Proced.:");

        preCodProc.setEditable(false);
        preCodProc.setBackground(new java.awt.Color(255, 255, 255));

        preNomeProc.setEditable(false);
        preNomeProc.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setText("Valor1:");

        preValor1.setEditable(false);
        preValor1.setBackground(new java.awt.Color(255, 255, 255));
        preValor1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValor1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValor1.setText("0,00");

        preValor2.setEditable(false);
        preValor2.setBackground(new java.awt.Color(255, 255, 255));
        preValor2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValor2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValor2.setText("0,00");

        jLabel21.setText("Valor2:");

        preSel1.setBackground(new java.awt.Color(101, 227, 255));
        buttonGroup2.add(preSel1);
        preSel1.setSelected(true);

        preSel2.setBackground(new java.awt.Color(101, 227, 255));
        buttonGroup2.add(preSel2);

        preBtnLancar.setText("Lançar");
        preBtnLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preBtnLancarActionPerformed(evt);
            }
        });

        preValorMd1.setEditable(false);
        preValorMd1.setBackground(new java.awt.Color(255, 255, 255));
        preValorMd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValorMd1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValorMd1.setText("0,00");

        preValorMd2.setEditable(false);
        preValorMd2.setBackground(new java.awt.Color(255, 255, 255));
        preValorMd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.##"))));
        preValorMd2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        preValorMd2.setText("0,00");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(preCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(265, 265, 265)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(preBtnLancar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(preValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(preValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(preSel1)
                                            .addComponent(preSel2))))))
                        .addGap(0, 224, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(preValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(preValorMd2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(preCodProc)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(preNomeProc)
                            .addComponent(preNome, 0, 541, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(preCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(preCodProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preNomeProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preSel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(preValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(preValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(preSel2)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(preValorMd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preValorMd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preBtnLancar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneProcedimentos.addTab("Preventivo", jPanel5);

        jPanel1.setBackground(new java.awt.Color(101, 227, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jBiometria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/dedo.jpg"))); // NOI18N
        jBiometria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBiometria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jBiometriaMouseReleased(evt);
            }
        });

        jLabel1.setText("Inscrição:");

        tbmatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbmatriculaKeyReleased(evt);
            }
        });

        jLabel2.setText("Nome do Paciênte:");

        tbnomepac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbnomepacKeyTyped(evt);
            }
        });

        jtpBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Começado por", "Contendo", "Igual" }));
        jtpBusca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jtpBuscaItemStateChanged(evt);
            }
        });
        jtpBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtpBuscaActionPerformed(evt);
            }
        });
        jtpBusca.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtpBuscaPropertyChange(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(204, 255, 204));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/find.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(null);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        rbtNovoPaciente.setText("P");
        rbtNovoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNovoPacienteActionPerformed(evt);
            }
        });

        clvPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        clvPacientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clvPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                clvPacientesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(clvPacientes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jBiometria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tbmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tbnomepac, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtpBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtNovoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jBiometria))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(1, 1, 1)
                        .addComponent(tbmatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(rbtNovoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtpBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tbnomepac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        btnReceber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/money.png"))); // NOI18N
        btnReceber.setText("Receber");
        btnReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceberActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Buscar:");

        txfBuscar.setBorder(null);
        txfBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfBuscarKeyReleased(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnClear.setText("X");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnClearMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/IconesPL/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setBackground(new java.awt.Color(153, 204, 255));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(".:: EXTORNAR");
        jLabel11.setOpaque(true);

        tblExtorno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "aut", "pc_numero", "pc_nome", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblExtorno.setGridColor(new java.awt.Color(255, 255, 255));
        tblExtorno.setShowHorizontalLines(false);
        tblExtorno.setShowVerticalLines(false);
        tblExtorno.setUpdateSelectionOnSort(false);
        tblExtorno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblExtornoKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tblExtorno);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTabbedPaneProcedimentos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPaneProcedimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnReceber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBiometriaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBiometriaMouseReleased
        bioVerificar oTela = new bioVerificar(null, true);
        oTela.setVisible(true);
        String bID = oTela.get();
        oTela = null;
        if (!bID.isEmpty()) {
            int row = clvPacientes.getSelectedRow();
            jFichaPaciente oFichaPac = new jFichaPaciente(null, true);
            oFichaPac.ReadFields("WHERE pc_numero = '" + bID + "';");
            oFichaPac.setVisible(true);
        }
    }//GEN-LAST:event_jBiometriaMouseReleased

    private void tbmatriculaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbmatriculaKeyReleased
        String tinsc = tbmatricula.getText().trim();
        if (tinsc.length() >= 3) {
            String txtBusca = "";String nrPac = tbmatricula.getText().trim();
            if (jtpBusca.getSelectedIndex() == 0) {
                txtBusca = "WHERE Upper(pc_inscricao) LIKE '" + nrPac + "%'";
            }
            if (jtpBusca.getSelectedIndex() == 1) {
                txtBusca = "WHERE Upper(pc_inscricao) LIKE '%" + nrPac + "%'";
            } else {
                txtBusca = "WHERE Upper(pc_inscricao) LIKE '" + nrPac + "'";
            }
            PegarPacientesCadastro(txtBusca);
        }
    }//GEN-LAST:event_tbmatriculaKeyReleased

    private void tbnomepacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbnomepacKeyTyped
        try {
            w.cancel(true);
            w = null;
        } catch (Exception e) {}
        btnBuscar.setEnabled(true);
    }//GEN-LAST:event_tbnomepacKeyTyped

    private void jtpBuscaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jtpBuscaItemStateChanged
        buscaNomesPac();
    }//GEN-LAST:event_jtpBuscaItemStateChanged

    private void jtpBuscaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtpBuscaPropertyChange

    }//GEN-LAST:event_jtpBuscaPropertyChange

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String tnome = tbnomepac.getText().trim();
        try {
            TableControl.Clear(clvPacientes);
        } catch (Exception err) {}
        if (tnome.length() >= 3) {
            Cursor cursor = Cursor.getPredefinedCursor(3);
            setCursor(cursor);

            String txtBusca = "";String nmPac = "";
            if (tbnomepac.getText().trim().length() != 0) {
                nmPac = tbnomepac.getText().trim().toUpperCase();
                int ntpbusca = jtpBusca.getSelectedIndex();
                if (ntpbusca == 0) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '" + nmPac + "%'";
                }
                if (ntpbusca == 1) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '%" + nmPac + "%'";
                } else if (ntpbusca == 2) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '" + nmPac + "'";
                }
            } else {
                if (tbmatricula.getText().trim().length() != 0) {
                    nmPac = tbmatricula.getText().trim();
                    int ntpbusca = jtpBusca.getSelectedIndex();
                    if (ntpbusca == 0) {
                        txtBusca = "WHERE Upper(pc_matricula) LIKE '" + nmPac + "%'";
                    }
                    if (ntpbusca == 1) {
                        txtBusca = "WHERE Upper(pc_matricula) LIKE '%" + nmPac + "%'";
                    } else if (ntpbusca == 2) {
                        txtBusca = "WHERE Upper(pc_matricula) LIKE '" + nmPac + "'";
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Você deve Digitar uma matricula ou nome a pesquisar!","Atenção",INFORMATION_MESSAGE);
                    cursor = Cursor.getDefaultCursor();
                    setCursor(cursor);
                    return;
                }
            }
            PegarPacientesCadastro(txtBusca);

            cursor = Cursor.getDefaultCursor();
            setCursor(cursor);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void rbtNovoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNovoPacienteActionPerformed
        jFichaPaciente oFichaPac = new jFichaPaciente(null, true);
        oFichaPac.setNovo(true);
        oFichaPac.setVisible(true);
        String newNamePac = oFichaPac.getNomePac();
        if (!newNamePac.trim().equalsIgnoreCase("")) {
            tbnomepac.setText(newNamePac);buscaNomesPac();
        }
    }//GEN-LAST:event_rbtNovoPacienteActionPerformed

    private void clvPacientesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clvPacientesMouseReleased
        if (!clvPacientes.isEnabled()) return;
        
        try {
            w.cancel(true);
            w = null;
        } catch (Exception e) {}

        int row = clvPacientes.getSelectedRow();
        String tficha = clvPacientes.getModel().getValueAt(row, 1).toString();
        jFichaPaciente oFichaPac = new jFichaPaciente(null, true);
        oFichaPac.ReadFields("WHERE pc_numero = '" + tficha + "';");
        oFichaPac.setVisible(true);
    }//GEN-LAST:event_clvPacientesMouseReleased

    private void labCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labCodigoItemStateChanged
        if (!bExecNome) {
            int pos = labCodigo.getSelectedIndex();
            if (labNome.getItemCount() > 0) {bExecCodigo = true; labNome.setSelectedIndex(pos); bExecCodigo = false;}
        }        
        try {LoadLU(labCodigo.getSelectedItem().toString(), labTabela, "L");} catch (Exception e) {}                                
    }//GEN-LAST:event_labCodigoItemStateChanged

    private void labNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_labNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = labNome.getSelectedIndex();
            if (labCodigo.getItemCount() > 0) {bExecNome = true; labCodigo.setSelectedIndex(pos); bExecNome = false;}
        }        
    }//GEN-LAST:event_labNomeItemStateChanged

    private void ultCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ultCodigoItemStateChanged
        if (!bExecNome) {
            int pos = ultCodigo.getSelectedIndex();
            if (ultNome.getItemCount() > 0) {bExecCodigo = true; ultNome.setSelectedIndex(pos); bExecCodigo = false;}
        }        
        try {LoadLU(ultCodigo.getSelectedItem().toString(), ultTabela, "U");} catch (Exception e) {}                                
    }//GEN-LAST:event_ultCodigoItemStateChanged

    private void ultNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ultNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = ultNome.getSelectedIndex();
            if (ultCodigo.getItemCount() > 0) {bExecNome = true; ultCodigo.setSelectedIndex(pos); bExecNome = false;}
        }        
    }//GEN-LAST:event_ultNomeItemStateChanged

    private void tblListaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblListaKeyPressed
        int tecla=evt.getKeyCode();          
        if (tecla==KeyEvent.VK_DELETE){  
            Object[] options = { "Sim", "Não" };
            int n = JOptionPane.showOptionDialog(this, "Deseja excluir a exame selecionado?", "Atenção", 0, 3, null, options, options[0]);
            if (n == 0) {
                TableControl.del(tblLista, tblLista.getSelectedRow());
                TotalizaLista(tblLista);
            }
        }
    }//GEN-LAST:event_tblListaKeyPressed

    private void eleCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleCodigoItemStateChanged
        if (!bExecNome) {
            int pos = eleCodigo.getSelectedIndex();
            if (eleNome.getItemCount() > 0) {bExecCodigo = true; eleNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
        try {LoadEP(eleCodigo.getSelectedItem().toString(),"E");} catch (Exception e) {}
    }//GEN-LAST:event_eleCodigoItemStateChanged

    private void eleNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = eleNome.getSelectedIndex();
            if (eleCodigo.getItemCount() > 0) {bExecNome = true; eleCodigo.setSelectedIndex(pos); bExecNome = false;}
        }                        
    }//GEN-LAST:event_eleNomeItemStateChanged

    private void preCodigoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_preCodigoItemStateChanged
        if (!bExecNome) {
            int pos = preCodigo.getSelectedIndex();
            if (preNome.getItemCount() > 0) {bExecCodigo = true; preNome.setSelectedIndex(pos); bExecCodigo = false;}
        }
        try {LoadEP(preCodigo.getSelectedItem().toString(),"P");} catch (Exception e) {}
    }//GEN-LAST:event_preCodigoItemStateChanged

    private void preNomeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_preNomeItemStateChanged
        if (!bExecCodigo) {
            int pos = preNome.getSelectedIndex();
            if (preCodigo.getItemCount() > 0) {bExecNome = true; preCodigo.setSelectedIndex(pos); bExecNome = false;}
        }
    }//GEN-LAST:event_preNomeItemStateChanged

    private void eleBtnLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eleBtnLancarActionPerformed
        if (clvPacientes.getRowCount() == 0 && clvPacientes.getSelectedRowCount() == 0) {
            JOptionPane.showInternalMessageDialog(clvPacientes, "Você deve selecionar um paciente na lista.", "Atenção!", INFORMATION_MESSAGE);
            return;
        }

        String qid = eleCodProc.getToolTipText();
        String qtipo = "E";
        String qcdleup = eleCodigo.getSelectedItem().toString();
        String qnmleup = eleNome.getSelectedItem().toString();
        String qcodigo = eleCodProc.getText();
        String qnome = eleNomeProc.getText();
        String qvalor = "0,00";
        String qvalormd = "0,00";

        if (ultSel1.isSelected()) {
            qvalor = eleValor1.getText();
            qvalormd = eleValorMd1.getText();
        } else {
            qvalor = eleValor2.getText();
            qvalormd = eleValorMd2.getText();
        }
        
        int pos = -1;
        pos = TableControl.seek(tblLista, 5, qnome);
        if (pos == -1) {
            TableControl.add(tblLista, new Object[][] {new Object[] {
                qid, qtipo, qcdleup, qnmleup, qcodigo, qnome, qvalor, qvalormd
                },{"C", "C", "C", "L", "C", "L", "R", "R"}}, true);         
            TotalizaLista(tblLista);
        } else {
            JOptionPane.showMessageDialog(null, "Item já lançado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_eleBtnLancarActionPerformed

    private void preBtnLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preBtnLancarActionPerformed
        if (clvPacientes.getRowCount() == 0 && clvPacientes.getSelectedRowCount() == 0) {
            JOptionPane.showInternalMessageDialog(clvPacientes, "Você deve selecionar um paciente na lista.", "Atenção!", INFORMATION_MESSAGE);
            return;
        }

        String qid = preCodProc.getToolTipText();
        String qtipo = "P";
        String qcdleup = preCodigo.getSelectedItem().toString();
        String qnmleup = preNome.getSelectedItem().toString();
        String qcodigo = preCodProc.getText();
        String qnome = preNomeProc.getText();
        String qvalor = "0,00";
        String qvalormd = "0,00";

        if (preSel1.isSelected()) {
            qvalor = preValor1.getText();
            qvalormd = preValorMd1.getText();
        } else {
            qvalor = preValor2.getText();
            qvalormd = preValorMd2.getText();
        }
        
        int pos = -1;
        pos = TableControl.seek(tblLista, 5, qnome);
        if (pos == -1) {
            TableControl.add(tblLista, new Object[][] {new Object[] {
                qid, qtipo, qcdleup, qnmleup, qcodigo, qnome, qvalor, qvalormd
                },{"C", "C", "C", "L", "C", "L", "R", "R"}}, true);         
            TotalizaLista(tblLista);
        } else {
            JOptionPane.showMessageDialog(null, "Item já lançado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_preBtnLancarActionPerformed

    private void jtpBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtpBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtpBuscaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        EnableBuscaPac();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceberActionPerformed
        int aut = 0; String[] tipopag = new String[] {"ND","DN","CH","CT"}; String pagtipo = "";
        jPagRec tpg = new jPagRec(null, true);
        tpg.setValor(TotalGeral.getText().replace(".", ""));
        tpg.setVisible(true);
        Object[] retorno = tpg.getPagRec();
        tpg = null;
        
        if (Integer.valueOf(retorno[0].toString()) == 0) return;

        // Impressão
//        for (int i = 0; i <= tblLista.getRowCount() - 1; i++) {
//                {"string", tblLista.getValueAt(i, 1).toString()},
//                {"string", tblLista.getValueAt(i, 2).toString()},
//                {"string", tblLista.getValueAt(i, 3).toString()},
//                {"string", tblLista.getValueAt(i, 4).toString()},
//                {"string", tblLista.getValueAt(i, 5).toString()},
//                {"decimal", new BigDecimal(LerValor.StringToFloat(tblLista.getValueAt(i, 6).toString()))},
//                {"decimal", new BigDecimal(LerValor.StringToFloat(tblLista.getValueAt(i, 7).toString()))},
//                {"date", Dates.toSqlDate(datap)},
//                {"int",Integer.valueOf(clvPacientes.getValueAt(clvPacientes.getSelectedRow(), 1).toString())},
//                {"string", clvPacientes.getValueAt(clvPacientes.getSelectedRow(), 3).toString()},
//                {"int", aut}
//        }                
        
        // Lancamento no caixa
        java.util.Date datap = Dates.StringtoDate((String)((Object[])retorno[2])[3],"dd-MM-yyyy");
        String pbanco = (String)((Object[])retorno[2])[0];
        String pagencia = (String)((Object[])retorno[2])[1];
        String pncheque = (String)((Object[])retorno[2])[2];
        String pnrcartao = (String)retorno[1];
        pagtipo = tipopag[Integer.valueOf(retorno[0].toString())];
        aut = conn.LancarCaixa(
            "CRE",
            pagtipo,
            "REC",
            Integer.valueOf(clvPacientes.getValueAt(clvPacientes.getSelectedRow(), 1).toString()),
            datap,
            pbanco,
            pagencia,
            pncheque,
            pnrcartao,
            new BigDecimal(TotalGeral.getText().replace(".", "").replace(",", ".")),
            Integer.valueOf(VariaveisGlobais.cdlogado)
        );
        if (aut == 0) return;

        // Impressao do Recibo
        ImprimeReciboProcedimentosPDF(aut,new String[][] {{"",pbanco,pagencia,pncheque,TotalGeral.getText(),pagtipo,"RC","",pnrcartao}},TotalGeral.getText(),"F",VariaveisGlobais.nviasRecibo,VariaveisGlobais.nviasRecibo);
        
        for (int i = 0; i <= tblLista.getRowCount() - 1; i++) {
            String insertSQL = "INSERT INTO public.nprocedia(tipo, codleup, nomeleup, codproc, nomeproc, valor, valormed, dataetd, pc_numero, pc_nome, aut) " + 
                               "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
            
            Object[][] param = {
                {"string", tblLista.getValueAt(i, 1).toString()},
                {"string", tblLista.getValueAt(i, 2).toString()},
                {"string", tblLista.getValueAt(i, 3).toString()},
                {"string", tblLista.getValueAt(i, 4).toString()},
                {"string", tblLista.getValueAt(i, 5).toString()},
                {"decimal", new BigDecimal(LerValor.StringToFloat(tblLista.getValueAt(i, 6).toString()))},
                {"decimal", new BigDecimal(LerValor.StringToFloat(tblLista.getValueAt(i, 7).toString()))},
                {"date", Dates.toSqlDate(datap)},
                {"int",Integer.valueOf(clvPacientes.getValueAt(clvPacientes.getSelectedRow(), 1).toString())},
                {"string", clvPacientes.getValueAt(clvPacientes.getSelectedRow(), 3).toString()},
                {"int", aut}
            };
            
            try {conn.ExecutarComando(insertSQL, param);} catch (Exception e) {e.printStackTrace();}
        }                
        EnableBuscaPac();
        ShowExtorno();        
    }//GEN-LAST:event_btnReceberActionPerformed

   public void ImprimeReciboProcedimentosPDF(float nAut, String[][] Valores, String ValorRec, String cutPaper,int via, float nRecibos) {
       System.out.println("ImprimeReciboTaxasPDF");

        int sRow = clvPacientes.getSelectedRow();
        if (sRow < 0) return;
        int mRow = clvPacientes.convertRowIndexToModel(sRow);
        String cdpac = ""; String cdmed = ""; String nmmed = ""; String nmesp = ""; String nmpac = null;
        try {cdpac = clvPacientes.getModel().getValueAt(mRow, 1).toString().trim();} catch (Exception err)  { cdpac = ""; }
        try {nmpac = clvPacientes.getModel().getValueAt(mRow, 3).toString().trim();} catch (Exception err)  { nmpac = ""; }
        
       float[] columnWidths = {};
        Collections gVar = VariaveisGlobais.dCliente;
        jPDF pdf = new jPDF();
        pdf.setPathName("reports/Recibos/" + Dates.iYear(new Date()) + "/" + Dates.Month(new Date()) + "/");
        String docID = "_" + cdpac + ".pdf";
        String docName = "RC_" + Dates.DateFormat("ddMMyyyy", new Date()) + "_" + 
                FuncoesGlobais.StrZero(String.valueOf((int)nAut), 7) + "-" + 
                FuncoesGlobais.StrZero(String.valueOf((int)via), 2) + "_" + FuncoesGlobais.StrZero(String.valueOf((int)nRecibos), 2) + docID;
        pdf.setDocName(docName);
        
        BaseFont bf = null;
        try {
            bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.EMBEDDED);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        com.itextpdf.text.Font font = new com.itextpdf.text.Font(bf, 9, Font.PLAIN);

        pdf.open();
        
        // Logo
        com.itextpdf.text.Image img;
        try {
            Image t_img = new ResizeImageIcon("E", VariaveisGlobais.logo, 80, 30).getImg().getImage();
            img = com.itextpdf.text.Image.getInstance(t_img, Color.BLACK);
            img.setAlignment(Element.ALIGN_LEFT);        
            pdf.doc_add(img);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        Paragraph p;
        
        p = pdf.print(gVar.get("empresa"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        if (!gVar.get("cnpj").trim().equals("") || gVar.get("cnpj") != null) {
            p = pdf.print(gVar.get("cnpj"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT,pdf.BLACK);
            pdf.doc_add(p);
        }
        p = pdf.print(gVar.get("endereco") + ", " + gVar.get("numero") + " " + gVar.get("complemento"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print(gVar.get("bairro") + " - " + gVar.get("cidade") + " - " + gVar.get("estado") + " - " + gVar.get("cep"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print("Tel:" + gVar.get("telefone"), pdf.HELVETICA, 9, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        p = pdf.print((nAut >0 ? gVar.get("recibo") : "D E M O N S T R A T I V O"), pdf.HELVETICA, 12, pdf.BOLD, pdf.CENTER, pdf.BLUE);
        pdf.doc_add(p);
        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        columnWidths = new float[] {37, 63 };
        PdfPTable table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        font = new com.itextpdf.text.Font(bf, 9, Font.PLAIN);
        font.setColor(BaseColor.BLACK);
        
        PdfPCell cell1 = new PdfPCell(new Phrase("CAIXA: " + VariaveisGlobais.logado,font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell1);
        PdfPCell cell2 = new PdfPCell(new Phrase("Data/Hora: " + Dates.DateFormat("dd/MM/yyyy HH:mm", new Date()),font));
        cell2.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell2.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell2);
        table.completeRow();
        pdf.doc_add(table);

        p = pdf.print("", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        LineSeparator l = new LineSeparator();
        l.setPercentage(100f);
        p.add(new Chunk(l));
        pdf.doc_add(p);

        // Dados do locatario
        columnWidths = new float[] {35, 65 };
        table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);

        font = new com.itextpdf.text.Font(bf, 8, Font.PLAIN);        
        cell1 = new PdfPCell(new Phrase("Paciente: " + cdpac,font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell1);
        cell2 = new PdfPCell(new Phrase(StringManager.ConvStr(nmpac.toString()),font));
        cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell2.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell2);        
        table.completeRow();
        pdf.doc_add(table);

        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);

        // Cabeçario do recibo
        columnWidths = new float[] {70, 30};
        table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        font.setColor(BaseColor.WHITE);
        cell1 = new PdfPCell(new Phrase("DESCRIMINAÇÃO",font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        cell1.setBackgroundColor(BaseColor.BLACK);
        table.addCell(cell1);
        PdfPCell cell3 = new PdfPCell(new Phrase("VALOR", font));
        cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell3.setBorder(Rectangle.NO_BORDER);
        cell3.setBackgroundColor(BaseColor.BLACK);
        table.addCell(cell3);
        table.completeRow();
        pdf.doc_add(table);

        columnWidths = new float[] {80, 20};
        table = new PdfPTable(columnWidths);
        table.setHeaderRows(0);
        table.setWidthPercentage(100);
        for (int i = 0; i <= tblLista.getRowCount() - 1; i++) {
            // Dados do recibo
            font.setColor(BaseColor.BLACK);
            cell1 = new PdfPCell(new Phrase(tblLista.getValueAt(i, 5).toString(),font));
            cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell1.setBorder(Rectangle.NO_BORDER);
            cell1.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell1);

            cell3 = new PdfPCell(new Phrase(LerValor.floatToCurrency(LerValor.StringToFloat(tblLista.getValueAt(i, 6).toString()),2), font));
            cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
            cell3.setBorder(Rectangle.NO_BORDER);
            cell3.setBackgroundColor(BaseColor.WHITE);
            table.addCell(cell3);
        }

        font.setColor(BaseColor.BLACK);
        cell1 = new PdfPCell(new Phrase("",font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        cell1.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell1);
        cell3 = new PdfPCell(new Phrase("=======", font));
        cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell3.setBorder(Rectangle.NO_BORDER);
        cell3.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell3);

        font.setColor(BaseColor.BLACK);
        cell1 = new PdfPCell(new Phrase("Total do Recibo",font));
        cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
        cell1.setBorder(Rectangle.NO_BORDER);
        cell1.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell1);
        cell3 = new PdfPCell(new Phrase(LerValor.floatToCurrency(Float.valueOf(ValorRec.replace(",", ".")),2), font));
        cell3.setHorizontalAlignment(Element.ALIGN_RIGHT);
        cell3.setBorder(Rectangle.NO_BORDER);
        cell3.setBackgroundColor(BaseColor.WHITE);
        table.addCell(cell3);
        table.completeRow();
        pdf.doc_add(table);

        p = pdf.print("\n", pdf.HELVETICA, 9, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
        pdf.doc_add(p);
        
        font = new com.itextpdf.text.Font(bf, 8, Font.PLAIN);
        if (nAut > 0) {
            p = pdf.print("__________ VALOR(ES) LANCADOS __________", pdf.HELVETICA, 7, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
            pdf.doc_add(p);

            for (int i=0;i<Valores.length;i++) {
                String bLinha = "";
                if (!"".equals(Valores[i][1].trim())) {
                    bLinha = "BCO:" + new Pad(Valores[i][1],3).RPad() + " AG:" + new Pad(Valores[i][2],4).RPad() + " CH:" + new Pad(Valores[i][3],8).RPad() + " DT: " + new Pad(Valores[i][0],10).CPad() + " VR:" + new Pad(Valores[i][4],10).LPad();
                } else {
                    bLinha = (Valores[i][5].trim().toUpperCase().equalsIgnoreCase("CT") ? "BC" : Valores[i][5].trim().toUpperCase()) +  ":" + new Pad(LerValor.floatToCurrency(Float.valueOf(Valores[i][4].replace(",", ".")),2),10).LPad();
                }

                p = pdf.print(bLinha, pdf.HELVETICA, 6, pdf.NORMAL, pdf.RIGHT, pdf.BLACK);
                pdf.doc_add(p);
            }

            p = pdf.print("\n", pdf.HELVETICA, 6, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
            pdf.doc_add(p);

            l = new LineSeparator();
            l.setPercentage(100f);
            p = pdf.print("", pdf.HELVETICA, 7, pdf.BOLDITALIC, pdf.LEFT, pdf.BLACK);
            p.add(new Chunk(l));
            pdf.doc_add(p);

            // Imprimir Autenticação
            p = pdf.print(VariaveisGlobais.dCliente.get("marca").trim() + "RC" + FuncoesGlobais.StrZero(String.valueOf((int)nAut), 7) + "-" +
                          FuncoesGlobais.StrZero(String.valueOf((int)via), 2) + "/" + FuncoesGlobais.StrZero(String.valueOf((int)nRecibos), 2) + 
                          Dates.DateFormat("ddMMyyyyHHmmss", new Date()) + FuncoesGlobais.GravaValores(ValorRec.replace(".", ","), 2) + VariaveisGlobais.logado, pdf.HELVETICA, 7, pdf.NORMAL, pdf.CENTER, pdf.BLACK);
            pdf.doc_add(p);
            
            PdfContentByte cb = pdf.writer().getDirectContent();
            BarcodeInter25 code25 = new BarcodeInter25();
            String barra = FuncoesGlobais.StrZero(String.valueOf((int)nAut),16);
            code25.setCode(barra);
            code25.setChecksumText(true);
            code25.setFont(null);
            com.itextpdf.text.Image cdbar = code25.createImageWithBarcode(cb, null, null);
            cdbar.setAlignment(Element.ALIGN_CENTER);
            pdf.doc_add(cdbar);            
        }

        // Pula linhas (6) / corta papel
        for (int k=1;k<=6;k++) { 
            p = pdf.print("\n", pdf.HELVETICA, 6, pdf.NORMAL, pdf.LEFT, pdf.BLACK);
            pdf.doc_add(p);
        }
        
        pdf.close();
        //pdf.print();
        new toPrint(pdf.getPathName() + docName, VariaveisGlobais.Recibo.split(",")[0],VariaveisGlobais.Recibo.split(",")[1],VariaveisGlobais.Recibo.split(",")[2]);
        pdf.setPathName("");
        pdf.setDocName("");
   }
    
    private void txfBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfBuscarKeyReleased
        int pos = -1;
        switch (jTabbedPaneProcedimentos.getSelectedIndex()) {
            case 0:
                pos = TableControl.seek(labTabela, 5, txfBuscar.getText().trim().toUpperCase());
                if (pos > -1) {
                    labTabela.setRowSelectionInterval(pos, pos);
                    scrollToVisible(labTabela,pos);
                } else labTabela.clearSelection();
                break;
            case 1:
                break;
            case 2:
                pos = TableControl.seek(ultTabela, 5, txfBuscar.getText().trim().toUpperCase());
                if (pos > -1) {
                    ultTabela.setRowSelectionInterval(pos, pos);
                    scrollToVisible(ultTabela,pos);
                } else ultTabela.clearSelection();
                break;
            case 3:
                break;
        }
    }//GEN-LAST:event_txfBuscarKeyReleased

    private void btnClearMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseReleased
        txfBuscar.setText(""); txfBuscar.requestFocus();
    }//GEN-LAST:event_btnClearMouseReleased

    private void jTabbedPaneProcedimentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPaneProcedimentosMouseClicked
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 0) {
            // Labo
            txfBuscar.setEnabled(true);
            btnClear.setEnabled(true);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 1) {
            // Ele
            txfBuscar.setEnabled(false);
            btnClear.setEnabled(false);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 2) {
            // Ult
            txfBuscar.setEnabled(true);
            btnClear.setEnabled(true);            
        } 
        
        if (jTabbedPaneProcedimentos.getSelectedIndex() == 3) {
            // Pre
            txfBuscar.setEnabled(false);
            btnClear.setEnabled(false);            
        }
    }//GEN-LAST:event_jTabbedPaneProcedimentosMouseClicked

    private void tblExtornoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblExtornoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblExtornoKeyPressed

    private void labTabelaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labTabelaMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_labTabelaMouseReleased

    private void ultTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ultTabelaMouseClicked
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            if (clvPacientes.getRowCount() == 0 && clvPacientes.getSelectedRowCount() == 0) {
                JOptionPane.showInternalMessageDialog(clvPacientes, "Você deve selecionar um paciente na lista.", "Atenção!", INFORMATION_MESSAGE);
                return;
            }
            Object[] options = {"R$ " + table.getValueAt(row, 6), "R$ " + table.getValueAt(row, 8)};
            int n = JOptionPane.showOptionDialog(null, "Qual Valor a lançar?", "Atenção", 0, 3, null, options, options[0]);
            String qid = table.getValueAt(row, 0).toString();
            String qtipo = table.getValueAt(row, 1).toString();
            String qcdleup = table.getValueAt(row, 2).toString();
            String qnmleup = table.getValueAt(row, 3).toString();
            String qcodigo = table.getValueAt(row, 4).toString();
            String qnome = table.getValueAt(row, 5).toString();
            String qvalor = table.getValueAt(row, (n == 0 ? 6 : 8)).toString();
            String qvalormd = table.getValueAt(row, (n == 0 ? 7 : 9)).toString();

            int pos = -1;
            pos = TableControl.seek(tblLista, 5, qnome);
            if (pos == -1) {
                if (tblLista.getRowCount() == 0) DisableBuscaPac();

                TableControl.add(tblLista, new Object[][] {new Object[] {
                    qid, qtipo, qcdleup, qnmleup, qcodigo, qnome, qvalor, qvalormd
                    },{"C", "C", "C", "L", "C", "L", "R", "R"}}, true);         
                TotalizaLista(tblLista);

            } else {
                JOptionPane.showMessageDialog(null, "Item já lançado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_ultTabelaMouseClicked

    private void labTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labTabelaMouseClicked
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            if (clvPacientes.getRowCount() == 0 && clvPacientes.getSelectedRowCount() == 0) {
                JOptionPane.showInternalMessageDialog(clvPacientes, "Você deve selecionar um paciente na lista.", "Atenção!", INFORMATION_MESSAGE);
                return;
            }
            Object[] options = {"R$ " + table.getValueAt(row, 6), "R$ " + table.getValueAt(row, 8)};
            int n = JOptionPane.showOptionDialog(null, "Qual Valor a lançar?", "Atenção", 0, 3, null, options, options[0]);
            String qid = table.getValueAt(row, 0).toString();
            String qtipo = table.getValueAt(row, 1).toString();
            String qcdleup = table.getValueAt(row, 2).toString();
            String qnmleup = table.getValueAt(row, 3).toString();
            String qcodigo = table.getValueAt(row, 4).toString();
            String qnome = table.getValueAt(row, 5).toString();
            String qvalor = table.getValueAt(row, (n == 0 ? 6 : 8)).toString();
            String qvalormd = table.getValueAt(row, (n == 0 ? 7 : 9)).toString();

            int pos = -1;
            pos = TableControl.seek(tblLista, 5, qnome);
            if (pos == -1) {
                if (tblLista.getRowCount() == 0) DisableBuscaPac();

                TableControl.add(tblLista, new Object[][] {new Object[] {
                    qid, qtipo, qcdleup, qnmleup, qcodigo, qnome, qvalor, qvalormd
                    },{"C", "C", "C", "L", "C", "L", "R", "R"}}, true);         
                TotalizaLista(tblLista);

            } else {
                JOptionPane.showMessageDialog(null, "Item já lançado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_labTabelaMouseClicked

    private void PegarPacientesCadastro(String sWHERE) {
        VariaveisGlobais.sWhere = sWHERE;
        pbBuscar.setStringPainted(true);
        pbBuscar.setValue(0);
        pbBuscar.setVisible(true);
       
        try { TableControl.Clear(clvPacientes); } catch (Exception err) {}
        String[][] cab = { { "origem", "ficha", "inscricao", "nome", "dias" }, { "100", "80", "200", "400", "50" } };
        TableControl.header(clvPacientes, cab);

        w = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                btnBuscar.setEnabled(false);
                String sql = "SELECT pc_numero, pc_inscricao, pc_nome, pc_origem FROM pacientes " + VariaveisGlobais.sWhere + " ORDER BY Upper(pc_nome);";
                ResultSet rs = conn.AbrirTabela(sql, 1007);
                int tam = DbMain.RecordCount(rs);
                int n = 0;
                try {
                    while (rs.next()) {
                        if (isCancelled()) break;
                        
                        int pos = n * 100 / tam;
                        pbBuscar.setValue(pos);
                        pbBuscar.repaint();
                        try { sleep(1); } catch (Exception ex) {}

                        String tficha = rs.getString("pc_numero");
                        String tinsc = rs.getString("pc_inscricao");
                        String tnome = rs.getString("pc_nome").toUpperCase();
                        String torigem = rs.getString("pc_origem").toLowerCase().trim();

                        Date tdata = null;
                        String[][] tultima = conn.LerCamposTabela(new String[] { "ma_data" }, "faturar", "ma_pcnumero = '" + tficha.trim() + "' AND ma_consulta = 1 ORDER BY ma_data DESC LIMIT 1");
                        if (tultima != null) {
                            tdata = Dates.StringtoDate(tultima[0][3], "yyyy-MM-dd");
                        } 
                        if (tdata != null) {
                        int iDias = Dates.DateDiff("D", tdata, new Date());
                        String tdias = FuncoesGlobais.StrZero(String.valueOf(iDias), 5);
                        TableControl.add(clvPacientes, new String[][] { { torigem, tficha, tinsc, tnome, tdias }, { "C", "L", "L", "L", "C" } }, true);
                        } else {
                            TableControl.add(clvPacientes, new String[][] { { torigem, tficha, tinsc, tnome, "NUNCA" }, { "C", "L", "L", "L", "C" } }, true);
                        }
                        clvPacientes.repaint();

                        n += 1;
                    }
                }
                catch (Exception err) {}
                DbMain.FecharTabela(rs);
                
                pbBuscar.setValue(100);
                pbBuscar.repaint();
                try { sleep(1); } catch (Exception ex) {}
                
                clvPacientes.setRowSelectionInterval(0, 0);
                btnBuscar.setEnabled(true);
                return 0;
            }
            
//            @Override
//            protected void done() {
//                
//            }
        };
        w.execute();
    }
    
    private void buscaNomesPac() {
        try {
            TableControl.Clear(clvPacientes);
        } catch (Exception err) {}
        try {
            digitacao.stop();
        } catch (Exception err) {}
        digitacao = null;
        digitacao = new Thread() { 
            public void run() { 
                try { sleep(100L); } catch (Exception ex) {}
                Cursor cursor = Cursor.getPredefinedCursor(3);
                setCursor(cursor);

                String txtBusca = "";String nmPac = tbnomepac.getText().trim().toUpperCase();
                int ntpbusca = jtpBusca.getSelectedIndex();
                if (ntpbusca == 0) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '" + nmPac + "%'";
                }
                if (ntpbusca == 1) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '%" + nmPac + "%'";
                } else if (ntpbusca == 2) {
                    txtBusca = "WHERE Upper(pc_nome) LIKE '" + nmPac + "'";
                }
                PegarPacientesCadastro(txtBusca);

                cursor = Cursor.getDefaultCursor();
                setCursor(cursor);
            }
        };
        digitacao.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TotalGeral;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel btnClear;
    private javax.swing.JButton btnReceber;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTable clvPacientes;
    private javax.swing.JButton eleBtnLancar;
    private javax.swing.JTextField eleCodProc;
    private javax.swing.JComboBox<String> eleCodigo;
    private javax.swing.JComboBox<String> eleNome;
    private javax.swing.JTextField eleNomeProc;
    private javax.swing.JFormattedTextField eleValor1;
    private javax.swing.JFormattedTextField eleValor2;
    private javax.swing.JFormattedTextField eleValorMd1;
    private javax.swing.JFormattedTextField eleValorMd2;
    private javax.swing.JLabel jBiometria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPaneProcedimentos;
    private javax.swing.JComboBox jtpBusca;
    private javax.swing.JComboBox<String> labCodigo;
    private javax.swing.JComboBox<String> labNome;
    private javax.swing.JTable labTabela;
    private javax.swing.JProgressBar pbBuscar;
    private javax.swing.JButton preBtnLancar;
    private javax.swing.JTextField preCodProc;
    private javax.swing.JComboBox<String> preCodigo;
    private javax.swing.JComboBox<String> preNome;
    private javax.swing.JTextField preNomeProc;
    private javax.swing.JRadioButton preSel1;
    private javax.swing.JRadioButton preSel2;
    private javax.swing.JFormattedTextField preValor1;
    private javax.swing.JFormattedTextField preValor2;
    private javax.swing.JFormattedTextField preValorMd1;
    private javax.swing.JFormattedTextField preValorMd2;
    private javax.swing.JButton rbtNovoPaciente;
    private javax.swing.JTable tblExtorno;
    private javax.swing.JTable tblLista;
    private javax.swing.JTextField tbmatricula;
    private javax.swing.JTextField tbnomepac;
    private javax.swing.JTextField txfBuscar;
    private javax.swing.JComboBox<String> ultCodigo;
    private javax.swing.JComboBox<String> ultNome;
    private javax.swing.JRadioButton ultSel1;
    private javax.swing.JRadioButton ultSel2;
    private javax.swing.JTable ultTabela;
    // End of variables declaration//GEN-END:variables

    private void LoadLU(String scodigo, JTable grid, String tipo) {
        TableControl.Clear(grid);
        grid.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        Object[][] itens = {};
        if (tipo.equalsIgnoreCase("L")) {
            String selectSQL = "SELECT id, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'L' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet labRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (labRs.next()) {
                    String qid = null; try { qid = labRs.getString("id"); } catch (SQLException ex) {}
                    String qcdleup = null; try { qcdleup = labRs.getString("codleup"); } catch (SQLException ex) {}
                    String qnmleup = null; try { qnmleup = labRs.getString("nomeleup"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = labRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = labRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = labRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = labRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = labRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = labRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    itens = FuncoesGlobais.ObjectsAdd(itens, new Object[] {qid, "L", qcdleup, qnmleup, qcodigo, qnome, df.format(qvr1), df.format(qvrmd1), df.format(qvr2), df.format(qvrmd2)});
                }
                DbMain.FecharTabela(labRs);
            } catch (SQLException e) { }                        
        }
        if (tipo.equalsIgnoreCase("U")) {
            String selectSQL = "SELECT id, codleup, nomeleup, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'U' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet ultRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (ultRs.next()) {
                    String qid = null; try { qid = ultRs.getString("id"); } catch (SQLException ex) {}
                    String qcdleup = null; try { qcdleup = ultRs.getString("codleup"); } catch (SQLException ex) {}
                    String qnmleup = null; try { qnmleup = ultRs.getString("nomeleup"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = ultRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = ultRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = ultRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = ultRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = ultRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = ultRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    itens = FuncoesGlobais.ObjectsAdd(itens, new Object[] {qid, "U", qcdleup, qnmleup, qcodigo, qnome, df.format(qvr1), df.format(qvrmd1), df.format(qvr2), df.format(qvrmd2)});
                }
                DbMain.FecharTabela(ultRs);
            } catch (SQLException e) { }                        
        }        
        if (itens.length > 0) {
            try {
                for (Object[] data : itens) {
                    TableControl.add(grid, new Object[][] {data,{"C", "C", "C", "L", "C", "L", "R", "R", "R", "R"}}, true);
                }
            } catch (Exception e) {e.printStackTrace();}
                    
//            grid.addMouseListener(new MouseAdapter() {
//                @Override
//                public void mousePressed(MouseEvent mouseEvent) {                    
//                    JTable table = (JTable) mouseEvent.getSource();
//                    Point point = mouseEvent.getPoint();
//                    int row = table.rowAtPoint(point);
//                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
//                        if (clvPacientes.getRowCount() == 0 && clvPacientes.getSelectedRowCount() == 0) {
//                            JOptionPane.showInternalMessageDialog(clvPacientes, "Você deve selecionar um paciente na lista.", "Atenção!", INFORMATION_MESSAGE);
//                            return;
//                        }
//                        Object[] options = {"R$ " + table.getValueAt(row, 6), "R$ " + table.getValueAt(row, 8)};
//                        int n = JOptionPane.showOptionDialog(null, "Qual Valor a lançar?", "Atenção", 0, 3, null, options, options[0]);
//                        String qid = table.getValueAt(row, 0).toString();
//                        String qtipo = table.getValueAt(row, 1).toString();
//                        String qcdleup = table.getValueAt(row, 2).toString();
//                        String qnmleup = table.getValueAt(row, 3).toString();
//                        String qcodigo = table.getValueAt(row, 4).toString();
//                        String qnome = table.getValueAt(row, 5).toString();
//                        String qvalor = table.getValueAt(row, (n == 0 ? 6 : 8)).toString();
//                        String qvalormd = table.getValueAt(row, (n == 0 ? 7 : 9)).toString();
//                        
//                        int pos = -1;
//                        pos = TableControl.seek(tblLista, 5, qnome);
//                        if (pos == -1) {
//                            if (tblLista.getRowCount() == 0) DisableBuscaPac();
//
//                            TableControl.add(tblLista, new Object[][] {new Object[] {
//                                qid, qtipo, qcdleup, qnmleup, qcodigo, qnome, qvalor, qvalormd
//                                },{"C", "C", "C", "L", "C", "L", "R", "R"}}, true);         
//                            TotalizaLista(tblLista);
//                            
//                        } else {
//                            JOptionPane.showMessageDialog(null, "Item já lançado!", "Atenção!", JOptionPane.WARNING_MESSAGE);
//                        }
//                    }
//                }
//            });
        }
    }
                
    private void LoadEP(String scodigo, String tipo) {
        boolean bEnabled = false;
        if (tipo.equalsIgnoreCase("E")) {
            // Limpa
            eleCodProc.setToolTipText("");
            eleCodProc.setText("");
            eleNomeProc.setText("");
            eleValor1.setText("0,00");
            eleValorMd1.setText("0,00");
            eleValor2.setText("0,00");
            eleValorMd2.setText("0,00");

            String selectSQL = "SELECT id, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'E' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet eleRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (eleRs.next()) {
                    bEnabled = true;
                    
                    String qid = null; try { qid = eleRs.getString("id"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = eleRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = eleRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = eleRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = eleRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = eleRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = eleRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    eleCodProc.setToolTipText(qid);
                    eleCodProc.setText(qcodigo);
                    eleNomeProc.setText(qnome);
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    eleValor1.setText(df.format(qvr1));
                    eleValorMd1.setText(df.format(qvrmd1));
                    eleValor2.setText(df.format(qvr2));
                    eleValorMd2.setText(df.format(qvrmd2));
                }
            } catch (SQLException e) {
                    eleCodProc.setToolTipText("");
                    eleCodProc.setText("");
                    eleNomeProc.setText("");
                    eleValor1.setText("0,00");
                    eleValorMd1.setText("0,00");
                    eleValor2.setText("0,00");
                    eleValorMd2.setText("0,00");
            }                        
        }
        if (tipo.equalsIgnoreCase("P")) {
            // Limpa
            preCodProc.setToolTipText("");
            preCodProc.setText("");
            preNomeProc.setText("");
            preValor1.setText("0,00");
            preValorMd1.setText("0,00");
            preValor2.setText("0,00");
            preValorMd2.setText("0,00");

            String selectSQL = "SELECT id, codproc, nomeproc, valor1, valormd1, valor2, valormd2, datacad, logado FROM nproced WHERE tipo = 'P' AND codleup = ? ORDER BY id;";
            Object[][] param = {{"string", scodigo}};
            ResultSet eleRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, param);
            try {
                while (eleRs.next()) {
                    bEnabled = true;
                    
                    String qid = null; try { qid = eleRs.getString("id"); } catch (SQLException ex) {}
                    String qcodigo = null; try { qcodigo = eleRs.getString("codproc"); } catch (SQLException ex) {}
                    String qnome = null; try { qnome = eleRs.getString("nomeproc"); } catch (SQLException ex) {}
                    BigDecimal qvr1 = null; try { qvr1 = eleRs.getBigDecimal("valor1"); } catch (SQLException ex) {}
                    BigDecimal qvrmd1 = null; try { qvrmd1 = eleRs.getBigDecimal("valormd1"); } catch (SQLException ex) {}
                    BigDecimal qvr2 = null; try { qvr2 = eleRs.getBigDecimal("valor2"); } catch (SQLException ex) {}
                    BigDecimal qvrmd2 = null; try { qvrmd2 = eleRs.getBigDecimal("valormd2"); } catch (SQLException ex) {}
                    
                    preCodProc.setToolTipText(qid);
                    preCodProc.setText(qcodigo);
                    preNomeProc.setText(qnome);
                    
                    DecimalFormat df = new DecimalFormat("#,##0.00");
                    preValor1.setText(df.format(qvr1));
                    preValorMd1.setText(df.format(qvrmd1));
                    preValor2.setText(df.format(qvr2));
                    preValorMd2.setText(df.format(qvrmd2));
                }
            } catch (SQLException e) {
                    preCodProc.setToolTipText("");
                    preCodProc.setText("");
                    preNomeProc.setText("");
                    preValor1.setText("0,00");
                    preValorMd1.setText("0,00");
                    preValor2.setText("0,00");
                    preValorMd2.setText("0,00");
            }                        
        }      
    }

    private void ConfigView(JTable grid, String tipo) {
        try { TableControl.Clear(grid); } catch (Exception err) {}
        String[][] cab = null;
        if (tipo.equalsIgnoreCase("L")) {
            cab = new String[][] {{ "id", "tipo", "codigo", "nome", "codproc", "nomeproc", "valor1", "valormd1", "valor2", "valormd2" }, { "0", "0", "0", "0", "80", "200", "80", "0", "80", "0" }};            
        } else if (tipo.equalsIgnoreCase("E")) {
            
        } else if (tipo.equalsIgnoreCase("U")) {
            cab = new String[][] {{ "id", "tipo", "codigo", "nome", "codproc", "nomeproc", "valor1", "valormd1", "valor2", "valormd2" }, { "0", "0", "0", "0", "80", "200", "80", "0", "80", "0" }};            
        } else {
            // P
        }
        TableControl.header(grid, cab, new boolean[] {false, false, false, false, false, false, false, false, false, false});
    }

    private void ConfigLista(JTable grid) {
        try { TableControl.Clear(grid); } catch (Exception err) {}
        String[][] cab = new String[][] {{ "id", "tipo", "codigo", "nome", "codproc", "nomeproc", "valor", "valormd" }, { "0", "20", "0", "0", "55", "200", "80", "0" }};
        TableControl.header(grid, cab);
    }
    
    private void LerCombos(JComboBox<String> combo1, JComboBox<String> combo2, String tipo) {        
        String tsql = null;
        ResultSet tbmedicos = null;
        if (tipo.equalsIgnoreCase("L")) {
            tsql = "select id codigo, nome from laboratorios ORDER BY UPPER(nome);";
            tbmedicos = conn.AbrirTabela(tsql, 1007);
        } else {
            // EUP
            tsql = "select md_codigo codigo, md_nome nome from medicos ORDER BY UPPER(md_nome);";
            tbmedicos = conn.AbrirTabela(tsql, 1007);
        }
            
        combo1.removeAllItems();
        combo2.removeAllItems();
        try {
          while (tbmedicos.next()) {
            combo1.addItem(tbmedicos.getString("codigo"));
            combo2.addItem(tbmedicos.getString("nome"));
          }
        }
        catch (Exception err) {}
        DbMain.FecharTabela(tbmedicos);            
    }

    private void TotalizaLista(JTable grid) {
        BigDecimal tl = new BigDecimal(0);
        
        for (int i=0; i <= grid.getRowCount() - 1; i++) {
            tl = tl.add(new BigDecimal(LerValor.StringToFloat(grid.getValueAt(i, 6).toString())));
        }
        
        DecimalFormat df = new DecimalFormat("#,##0.00");        
        TotalGeral.setText(df.format(tl));
        
        btnReceber.setEnabled(tl.floatValue() != 0);
        btnCancelar.setEnabled(true);
    }
    
    private void EnablePac() {
        jBiometria.setEnabled(true);
        tbmatricula.setEnabled(true);
        tbnomepac.setEnabled(true);
        jtpBusca.setEnabled(true);
        btnBuscar.setEnabled(true);
        rbtNovoPaciente.setEnabled(true);
        clvPacientes.setEnabled(true);
        tblLista.setEnabled(false);        
        btnReceber.setEnabled(false);
        btnCancelar.setEnabled(true);
        jTabbedPaneProcedimentos.setSelectedIndex(0);
    }
    
    private void DisableBuscaPac() {
        jBiometria.setEnabled(false);
        tbmatricula.setEnabled(false);
        tbnomepac.setEnabled(false);
        jtpBusca.setEnabled(false);
        btnBuscar.setEnabled(false);
        rbtNovoPaciente.setEnabled(false);
        clvPacientes.setEnabled(false);
        tblLista.setEnabled(true);        
        btnReceber.setEnabled(false);
        btnCancelar.setEnabled(true);
        jTabbedPaneProcedimentos.setSelectedIndex(0);
    }

    private void EnableBuscaPac() {
        jBiometria.setEnabled(true);
        tbmatricula.setEnabled(true);
        tbnomepac.setEnabled(true);
        jtpBusca.setEnabled(true);
        btnBuscar.setEnabled(true);
        rbtNovoPaciente.setEnabled(true);
        TableControl.Clear(clvPacientes);
        clvPacientes.setEnabled(true);
        tblLista.setEnabled(false);        

        TableControl.Clear(tblLista);
        TotalGeral.setText("0,00");
        btnReceber.setEnabled(false);
        btnCancelar.setEnabled(true);

        jTabbedPaneProcedimentos.setSelectedIndex(0);
        tbnomepac.setText("");
        tbmatricula.setText("");
        tbmatricula.requestFocus();
    }
    
    private void ShowExtorno() {
        try { TableControl.Clear(tblExtorno); } catch (Exception err) {}
        String[][] cab = new String[][] {{ "aut", "numero", "nome", "valor" }, { "80", "80", "200", "80" }};
        TableControl.header(tblExtorno, cab);
        tblExtorno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        Object[][] itens = {};
        
        String selectSQL = "select c.autenticacao aut, c.pc_numero numero, (select Upper(p.pc_nome) from pacientes p where p.pc_numero = c.pc_numero) nome, c.valor from ncaixa c where c.datap = ? AND NOT c.oper LIKE '%X' AND EXISTS (select d.aut from nprocedia d where d.aut = c.autenticacao);";
        ResultSet ultRs = conn.AbrirTabela(selectSQL, ResultSet.CONCUR_READ_ONLY, new Object[][] {{"date", Dates.toSqlDate(new Date())}});
        try {
            while (ultRs.next()) {
                String qaut = null; try { qaut = ultRs.getString("aut"); } catch (SQLException ex) {}
                String qnumero = null; try { qnumero = ultRs.getString("numero"); } catch (SQLException ex) {}
                String qnome = null; try { qnome = ultRs.getString("nome"); } catch (SQLException ex) {}
                BigDecimal qvalor = null; try { qvalor = ultRs.getBigDecimal("valor"); } catch (SQLException ex) {}

                DecimalFormat df = new DecimalFormat("#,##0.00");
                itens = FuncoesGlobais.ObjectsAdd(itens, new Object[] {qaut, qnumero, qnome, df.format(qvalor)});
            }
            DbMain.FecharTabela(ultRs);
        } catch (SQLException e) { }                        
        if (itens.length > 0) {
            try {
                for (Object[] data : itens) {
                    TableControl.add(tblExtorno, new Object[][] {data,{"C", "C", "L", "R"}}, true);
                }
            } catch (Exception e) {e.printStackTrace();}
                    
            tblExtorno.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent mouseEvent) {                    
                    JTable table =(JTable) mouseEvent.getSource();
                    Point point = mouseEvent.getPoint();
                    int row = table.rowAtPoint(point);
                    if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {
                        Object[] options = { "Sim", "Não" };
                        int n = JOptionPane.showOptionDialog(tblExtorno, "Deseja extornar o lançamento selecionado?", "Atenção", 0, 3, null, options, options[1]);
                        if (n == 1) return;
                        
                        // Extornar
                        String qaut = table.getValueAt(row, 0).toString();
                        String deleteSQL = "DELETE FROM nprocedia WHERE aut = ?;";
                        if (conn.ExecutarComando(deleteSQL, new Object[][] {{"int", Integer.valueOf(qaut)}}) > 0) {
                            String updateSQL = "UPDATE ncaixa SET oper = oper || 'X' WHERE autenticacao = ?;";
                            conn.ExecutarComando(updateSQL, new Object[][] {{"int", Integer.valueOf(qaut)}});
                            TableControl.del(tblExtorno, tblExtorno.getSelectedRow());
                        }
                    }
                }
            });
        }
        
    }
    
}
