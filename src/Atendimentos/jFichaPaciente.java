/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Atendimentos;

import Db.DbMain;
import Funcoes.AutoCompletion;
import Funcoes.Dates;
import Funcoes.FuncoesGlobais;
import Funcoes.LerValor;
import Funcoes.LimitedTextField;
import Funcoes.Soundex;
import Funcoes.VariaveisGlobais;
import java.awt.AWTKeyStroke;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JRViewer;

/**
 *
 * @author supervisor
 */
public class jFichaPaciente extends javax.swing.JDialog {
    DbMain conn = VariaveisGlobais.con;
    boolean isnew = false;

    public jFichaPaciente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        HashSet conj = new HashSet(getFocusTraversalKeys(0));
        conj.add(AWTKeyStroke.getAWTKeyStroke(10, 0));
        setFocusTraversalKeys(0, conj);

        LimparFicha();

        setLocationRelativeTo(null);

        fillconvenios(pConvenio);
        AutoCompletion.enable(pConvenio);
        if (isnew) {
            LimparFicha();
            setTitle(".:: Cadastro de Pacientes - [incluir]");
            jbtFichaPaciente.setEnabled(false);
            EnabledFields(true);
            pInscricao.requestFocus();
        } else {
            pInscricao.requestFocus();
        }
    }

    public void setNovo(boolean value) { isnew = value; }
    public String getNomePac() { return pNomePaciente.getText().trim(); }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pNacionalidade = new LimitedTextField(10);
        pNaturalidade = new LimitedTextField(15);
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        pProfissao = new LimitedTextField(25);
        jLabel20 = new javax.swing.JLabel();
        pDtNasc = new javax.swing.JFormattedTextField();
        pSexo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pEndereco = new LimitedTextField(60);
        pCor = new javax.swing.JComboBox();
        pNumero = new LimitedTextField(15);
        pComplemento = new LimitedTextField(25);
        jLabel10 = new javax.swing.JLabel();
        pBairro = new LimitedTextField(25);
        pCidade = new LimitedTextField(25);
        jLabel11 = new javax.swing.JLabel();
        pEstado = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter tEstado= new javax.swing.text.MaskFormatter("UU");
            pEstado = new javax.swing.JFormattedTextField(tEstado);
        }
        catch (Exception e){
        }
        jLabel22 = new javax.swing.JLabel();
        pMae = new LimitedTextField(60);
        jLabel23 = new javax.swing.JLabel();
        pPai = new LimitedTextField(60);
        jLabel24 = new javax.swing.JLabel();
        pUltConsultas = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pObservacoes = new javax.swing.JTextArea();
        jbtSalvar = new javax.swing.JButton();
        jbtSavaeFecha = new javax.swing.JButton();
        jbtFechar = new javax.swing.JButton();
        jbtFichaPaciente = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        pRenda = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        pNumPesFamilia = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        pDtCadastro = new javax.swing.JFormattedTextField();
        pValidadePlano = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter tValidadePlano= new javax.swing.text.MaskFormatter("##/##/####");
            pValidadePlano = new javax.swing.JFormattedTextField(tValidadePlano);
        }
        catch (Exception e){
        }
        jLabel1 = new javax.swing.JLabel();
        pInscricao = new LimitedTextField(20);
        jLabel3 = new javax.swing.JLabel();
        pConvenio = new javax.swing.JComboBox();
        pRendaFamiliar = new javax.swing.JFormattedTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        pRendaPercapta = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jbtBuscaCep = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        pCep = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter tCep= new javax.swing.text.MaskFormatter("#####-###");
            pCep = new javax.swing.JFormattedTextField(tCep);
        }
        catch (Exception e){
        }
        jLabel14 = new javax.swing.JLabel();
        jbtDelFichaPac = new javax.swing.JButton();
        pTel1 = new javax.swing.JFormattedTextField();
        pTel2 = new javax.swing.JFormattedTextField();
        pTel3 = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pContato = new LimitedTextField(25);
        pPlano = new LimitedTextField(25);
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pEstCivil = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        pNomePaciente = new LimitedTextField(60);
        jLabel6 = new javax.swing.JLabel();
        pCpf = new javax.swing.JFormattedTextField();
        pRg = new javax.swing.JFormattedTextField();
        btbiometria = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        btnQuestionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:: Cadastro de Pacientes");
        setBackground(new java.awt.Color(101, 227, 255));

        jLabel7.setText("RG:");

        jLabel8.setText("Dt.Nasc:");

        jLabel17.setText("Estado Civil:");

        pNacionalidade.setText("jTextField1");

        pNaturalidade.setText("jTextField1");

        jLabel18.setText("Natural:");

        jLabel19.setText("Profissão:");

        pProfissao.setText("jTextField1");

        jLabel20.setText("Sexo:");

        try {
            pDtNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        pSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino", "Outro" }));

        jLabel9.setText("End.:");

        jLabel21.setText("Cor:");

        pEndereco.setText("jTextField1");

        pCor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Branca", "Preta", "Parda", "Amarela" }));

        pNumero.setText("jTextField1");

        pComplemento.setText("jTextField1");

        jLabel10.setText("Bairro:");

        pBairro.setText("jTextField1");

        pCidade.setText("jTextField1");

        jLabel11.setText("Cidade:");

        pEstado.setText("jTextField1");

        jLabel22.setText("Mãe:");

        pMae.setText("jTextField1");

        jLabel23.setText("Pai:");

        pPai.setText("jTextField1");

        jLabel24.setText("Ultimas Consultas:");

        jLabel25.setText("Observações:");

        pObservacoes.setColumns(20);
        pObservacoes.setRows(5);
        jScrollPane1.setViewportView(pObservacoes);

        jbtSalvar.setText("Salvar");
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtSavaeFecha.setText("Salvar e Fechar");
        jbtSavaeFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSavaeFechaActionPerformed(evt);
            }
        });

        jbtFechar.setText("Fechar");
        jbtFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFecharActionPerformed(evt);
            }
        });

        jbtFichaPaciente.setText("Ficha do Paciente");
        jbtFichaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtFichaPacienteActionPerformed(evt);
            }
        });

        jLabel26.setText("Renda:");

        pRenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        pRenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pRenda.setText("0,00");

        jLabel27.setText("Nº.Pess.Família:");

        pNumPesFamilia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pNumPesFamiliaStateChanged(evt);
            }
        });

        jLabel28.setText("Dt.Cadastro:");

        try {
            pDtCadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pDtCadastro.setEnabled(false);

        pValidadePlano.setText("99/99/9999");

        jLabel1.setText("Inscrição:");

        pInscricao.setText("jTextField1");

        jLabel3.setText("Convênio:");

        pRendaFamiliar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        pRendaFamiliar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pRendaFamiliar.setText("0,00");

        jLabel29.setText("Renda Familiar:");

        jLabel30.setText("Renda Percapta:");

        pRendaPercapta.setEditable(false);
        pRendaPercapta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        pRendaPercapta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pRendaPercapta.setText("0,00");

        jLabel12.setText("UF:");

        jbtBuscaCep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/find.png"))); // NOI18N
        jbtBuscaCep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscaCepActionPerformed(evt);
            }
        });

        jLabel13.setText("Cep:");

        pCep.setText("99999-999");
        pCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pCepFocusLost(evt);
            }
        });

        jLabel14.setText("Telefones:");

        jbtDelFichaPac.setText("Excluir Ficha Paciente");
        jbtDelFichaPac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDelFichaPacActionPerformed(evt);
            }
        });

        try {
            pTel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            pTel2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            pTel3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel15.setText("Contato:");

        jLabel4.setText("Plano:");

        pContato.setText("jTextField1");

        pPlano.setText("jTextField2");

        jLabel16.setText("Nacionalidade:");

        jLabel2.setText("Validade:");

        pEstCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Solteiro", "Solteira", "Casado", "Casada", "Separado", "Separada", "Divorciado", "Divorciada", "Viuvo", "Viuva", "União Estavel", " " }));

        jLabel5.setText("Nome:");

        pNomePaciente.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        pNomePaciente.setForeground(new java.awt.Color(61, 10, 195));
        pNomePaciente.setText("jTextField1");

        jLabel6.setText("CPF:");

        try {
            pCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        pRg.setText("999.999.999-99");

        btbiometria.setText("Biometria");
        btbiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbiometriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel34.setText("jLabel34");

        jLabel35.setText("jLabel35");

        btnQuestionario.setText("Questionário");
        btnQuestionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuestionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel26)
                                                    .addGap(200, 200, 200)
                                                    .addComponent(jLabel29)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(pRendaFamiliar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel27)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(pNumPesFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(41, 41, 41))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel16)
                                                    .addGap(6, 6, 6)
                                                    .addComponent(pNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel18)
                                                    .addGap(8, 8, 8)
                                                    .addComponent(pNaturalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(153, 153, 153))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(6, 6, 6)
                                                    .addComponent(pNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(6, 6, 6)
                                                    .addComponent(jLabel6)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel7)
                                                    .addGap(65, 65, 65))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addGap(6, 6, 6)
                                                    .addComponent(pInscricao, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel23)
                                                    .addGap(222, 222, 222))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel10)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(pBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(175, 175, 175))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel8)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(pDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jLabel9)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(pEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jbtBuscaCep, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(pNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(6, 6, 6)
                                                    .addComponent(pPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel20)
                                                .addGap(6, 6, 6)
                                                .addComponent(pSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(115, 115, 115)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pUltConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel28)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(pRenda, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel30)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pRendaPercapta, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pMae, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pPai, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(406, 406, 406)
                                        .addComponent(pCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pRg, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pValidadePlano, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pCor, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(pComplemento, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(pEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel13)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(pCep, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pTel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pContato, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbtDelFichaPac, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbtFichaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnQuestionario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btbiometria, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jbtFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jbtSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jbtSavaeFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jLabel25))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1))
                            .addComponent(pInscricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel5))
                                    .addComponent(pNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(pCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(pRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(pValidadePlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(pDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(pEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                    .addComponent(pComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jbtBuscaCep))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(pEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(pTel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pTel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pTel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pNaturalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel16))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pEstCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19))
                            .addComponent(jLabel20)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(pSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pMae, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pPai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pRenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pRendaFamiliar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pRendaPercapta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30)
                        .addComponent(pNumPesFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel26)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pUltConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24))
                    .addComponent(pDtCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btbiometria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtSavaeFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtFechar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtDelFichaPac)
                            .addComponent(jbtFichaPaciente)
                            .addComponent(btnQuestionario))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
        String checkup = checacampostela(isnew);
        if (checkup == null) {
            String nFicha = SaveFields(isnew);
            isnew = false;
            try {
                setTitle(".:: Cadastro de Pacientes - Ficha Nº " + nFicha);
            } catch (Exception e) {
                setTitle(".:: Cadastro de Pacientes");
            }
        } else {
            JOptionPane.showMessageDialog(this, checkup, "Atenção!!!", 1);
        }
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtSavaeFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSavaeFechaActionPerformed
        String checkup = checacampostela(isnew);
        if (checkup == null) {
            SaveFields(isnew);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, checkup, "Atenção!!!", 1);
        }
    }//GEN-LAST:event_jbtSavaeFechaActionPerformed

    private void jbtFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFecharActionPerformed
        dispose();
    }//GEN-LAST:event_jbtFecharActionPerformed

    private void jbtFichaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtFichaPacienteActionPerformed
        GerarFichaPac(pInscricao.getToolTipText());
    }//GEN-LAST:event_jbtFichaPacienteActionPerformed

    private void pNumPesFamiliaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pNumPesFamiliaStateChanged
        float frenda = LerValor.StringToFloat(pRenda.getText());
        float frenfm = LerValor.StringToFloat(pRendaFamiliar.getText());
        int ipesso = Integer.valueOf(pNumPesFamilia.getValue().toString()).intValue();
        float frenpc = (frenda + frenfm) / ipesso;
        String srenpc = LerValor.FloatToString(frenpc);
        pRendaPercapta.setText(srenpc);
    }//GEN-LAST:event_pNumPesFamiliaStateChanged

    private void jbtBuscaCepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscaCepActionPerformed
        BuscaCep oCep = new BuscaCep(null, true);
        oCep.setVisible(true);

        Object[] dados = oCep.dados;
        oCep = null;
        if (dados != null) {
            pEndereco.setText(dados[0].toString() + " " + dados[1].toString());
            pBairro.setText(dados[2].toString());
            pCidade.setText(dados[3].toString());
            pEstado.setText(dados[4].toString());
            pCep.setText(dados[5].toString());

            pNumero.requestFocus();
        }
    }//GEN-LAST:event_jbtBuscaCepActionPerformed

    private void pCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pCepFocusLost
        if (pEndereco.getText().trim().equalsIgnoreCase("")) {
            String tsql = "select e.logradouro, e.nomeslog, e.nomeclog, b.nome as bairro, c.nome as cidade, b.uf as uf, e.cep  from cep_enderecos e, cep_bairros b, cep_cidades c where (e.bairro_id = b.id) and (e.cidade_id = c.id) and b.uf = 'RJ' and e.cep = '" + pCep.getText().trim() + "' ORDER BY Upper(c.nome), Upper(e.nomeslog);";
            ResultSet crs = conn.AbrirTabela(tsql, 1007);
            String cend = "";String cbai = "";String ccid = "";String cuf = "";
            try {
                while (crs.next()) {
                    cend = crs.getString("nomeclog");
                    cbai = crs.getString("bairro");
                    ccid = crs.getString("cidade");
                    cuf = crs.getString("uf");
                }
                DbMain.FecharTabela(crs);

                pEndereco.setText(cend);
                pBairro.setText(cbai);
                pCidade.setText(ccid);
                pEstado.setText(cuf);
                pNumero.requestFocus();
            } catch (Exception e) {}
        }
    }//GEN-LAST:event_pCepFocusLost

    private void jbtDelFichaPacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDelFichaPacActionPerformed
        Object[] options = { "Sim", "Não" };
        int n = JOptionPane.showOptionDialog(this, "Deseja excluir a ficha deste paciênte ?\n\nMUITO CUIDADO POIS TODOS OS DADOS DESTE PACIENTE SERÃO PERDIDOS!!!", "Atenção", 0, 3, null, options, options[0]);
        if (n == 0) {
            String nFicha = getTitle().substring(getTitle().indexOf("º") + 2).trim();
            conn.ExecutarComando("DELETE FROM pacientes WHERE pc_numero = " + nFicha + ";");
            dispose();
        }
    }//GEN-LAST:event_jbtDelFichaPacActionPerformed

    private void btbiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbiometriaActionPerformed
        bioCadastrar oTela = new bioCadastrar(null, true);
        oTela.put(pInscricao.getToolTipText().trim());
        oTela.setVisible(true);
        oTela = null;
    }//GEN-LAST:event_btbiometriaActionPerformed

    private void btnQuestionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuestionarioActionPerformed
        if (pInscricao.getToolTipText() != null) {
        jQuestionario oQuest = new jQuestionario(null, true);        
        oQuest.setCdPac(pInscricao.getToolTipText());
        oQuest.LerQuestionario();
        oQuest.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Não pode ser acessado na inclusão!","Atenção",INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnQuestionarioActionPerformed

    private String checacampostela(boolean Novo) {
        String retorno = null;
        if (pNomePaciente.getText().trim().length() <= 0) {
            retorno = "Campo Nome";
        }
        if (pRg.getText().trim().length() <= 0) {
            retorno = "Campo Rg";
        }
        if (pCpf.getText().trim().replace(".", "").replace("-", "").length() <= 0) {
            retorno = "Campo CPF";
        }
        if (pMae.getText().trim().length() <= 0) {
            retorno = "Campo Mãe ";
        }
        if (pDtNasc.getText().trim().length() <= 0) {
            retorno = "Campo Data de Nascimento";
        }
        if ((retorno != null) && (retorno.length() > 0)) {
            retorno = retorno + " do paciênte é obrigatório!!!";
        }
        return retorno;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFichaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFichaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFichaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFichaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jFichaPaciente dialog = new jFichaPaciente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void fillconvenios(JComboBox box) {
        String sql = "select cv_numero, cv_apelido from convenios order by cv_apelido;";
        ResultSet crs = conn.AbrirTabela(sql, 1007);
        try {
            while (crs.next()) {
                box.addItem(crs.getString("cv_apelido"));
            }
        } catch (Exception e) {}
        DbMain.FecharTabela(crs);
    }
  
    private void LimparFicha() {
        pBairro.setText(null);
        pCep.setText(null);
        pCidade.setText(null);
        pComplemento.setText(null);
        pContato.setText(null);
        pConvenio.getModel().setSelectedItem(null);
        pCor.getModel().setSelectedItem(null);
        pCpf.setText("000.000.000-00");
        pDtNasc.setText(null);
        pEndereco.setText(null);
        pEstCivil.getModel().setSelectedItem(null);
        pEstado.setText(null);
        pInscricao.setText("0000");pInscricao.setToolTipText(null);
        pMae.setText(".");
        pNacionalidade.setText(null);
        pNaturalidade.setText(null);
        pNomePaciente.setText(null);
        pNumPesFamilia.setValue(Integer.valueOf(0));
        pNumero.setText(null);
        pObservacoes.setText(null);
        pPai.setText(null);
        pPlano.setText(null);
        pProfissao.setText(null);
        pRenda.setText("0,00");
        pRg.setText("0000");
        pSexo.getModel().setSelectedItem(null);
        pTel1.setText(null);
        pTel2.setText(null);
        pTel3.setText(null);
        pUltConsultas.getModel().setSelectedItem(null);
        pValidadePlano.setText(null);
        pDtCadastro.setText(Dates.DateFormat("dd/MM/yyyy", new java.util.Date()));
    }
  
    private void EnabledFields(boolean Value) {
        pBairro.setEnabled(Value);
        pCep.setEnabled(Value);
        pCidade.setEnabled(Value);
        pComplemento.setEnabled(Value);
        pContato.setEnabled(Value);
        pConvenio.setEnabled(Value);
        pCor.setEnabled(Value);
        pCpf.setEnabled(Value);
        pDtNasc.setEnabled(Value);
        pEndereco.setEnabled(Value);
        pEstCivil.setEnabled(Value);
        pEstado.setEnabled(Value);
        pInscricao.setEnabled(Value);
        pMae.setEnabled(Value);
        pNacionalidade.setEnabled(Value);
        pNaturalidade.setEnabled(Value);
        pNomePaciente.setEnabled(Value);
        pNumPesFamilia.setEnabled(Value);
        pNumero.setEnabled(Value);
        pObservacoes.setEnabled(Value);
        pPai.setEnabled(Value);
        pPlano.setEnabled(Value);
        pProfissao.setEnabled(Value);
        pRenda.setEnabled(Value);
        pRg.setEnabled(Value);
        pSexo.setEnabled(Value);
        pTel1.setEnabled(Value);
        pTel2.setEnabled(Value);
        pTel3.setEnabled(Value);
        pUltConsultas.setEnabled(Value);
        pValidadePlano.setEnabled(Value);
        pDtCadastro.setEnabled(Value);
    }
  
    private String SaveFields(boolean save) {
        String codpac = "";
        String tbairro = "";
        String tcep = "";
        String tcidade = "";
        String tcomplemento = "";
        String tcontato = "";
        String tconvenio = "";
        String tcor = "Branco";
        String tdtnasc = "01/01/1900";
        String tendereco = "";
        String testcivil = "Solteiro";
        String testado = "";
        String tinscricao = "";
        String tmae = "";
        String tnacionalidade = "";
        String tnaturalidade = "";
        String tnomepaciente = "";
        String tnumero = "";
        String tobservacao = "";
        String tpai = "";
        String tplano = "";
        String tprofissao = "";
        String tcpf = "000.000.000-00";
        String trg = "00.000.000-00";
        String tsexo = "Masculino";
        String ttel1 = "";
        String ttel2 = "";
        String ttel3 = "";
        String tvalidadeplano = "31/12/2012";
        
        try { tbairro = pBairro.getText(); } catch (Exception e) {}
        try { tcep = pCep.getText(); } catch (Exception e) {}
        try { tcidade = pCidade.getText(); } catch (Exception e) {}
        try { tcomplemento = pComplemento.getText(); } catch (Exception e) {}
        try { tcontato = pContato.getText(); } catch (Exception e) {}
        try { tconvenio = pConvenio.getSelectedItem().toString(); } catch (Exception e) {}
        try { tcor = pCor.getSelectedItem().toString(); } catch (Exception e) {}
        try { tdtnasc = pDtNasc.getText(); } catch (Exception e) {}
        try { tendereco = pEndereco.getText(); } catch (Exception e) {}
        try { testcivil = pEstCivil.getSelectedItem().toString(); } catch (Exception e) {}
        try { testado = pEstado.getText(); } catch (Exception e) {}
        try { tinscricao = pInscricao.getText(); } catch (Exception e) {}
        try { tmae = pMae.getText(); } catch (Exception e) {}
        try { tnacionalidade = pNacionalidade.getText(); } catch (Exception e) {}
        try { tnaturalidade = pNaturalidade.getText(); } catch (Exception e) {}
        try { tnomepaciente = pNomePaciente.getText(); } catch (Exception e) {}
        try { tnumero = pNumero.getText(); } catch (Exception e) {}
        try { tobservacao = pObservacoes.getText(); } catch (Exception e) {}
        try { tpai = pPai.getText(); } catch (Exception e) {}
        try { tplano = pPlano.getText(); } catch (Exception e) {}
        try { tprofissao = pProfissao.getText(); } catch (Exception e) {}
        try { tcpf = pCpf.getText(); } catch (Exception e) {}
        try { trg = pRg.getText(); } catch (Exception e) {}
        try { tsexo = pSexo.getSelectedItem().toString(); } catch (Exception e) {}
        try { ttel1 = pTel1.getText(); } catch (Exception e) {}
        try { ttel2 = pTel2.getText(); } catch (Exception e) {}
        try { ttel3 = pTel3.getText(); } catch (Exception e) {}
        try { tvalidadeplano = pValidadePlano.getText(); } catch (Exception e) {}
        if (pValidadePlano.getText().replace("/", "").replace("-", "").trim().equalsIgnoreCase("")) {
            tvalidadeplano = "31/12/2012";
        }
        String tdtcadastro = Dates.DateFormat("dd/MM/yyyy", new java.util.Date());
    
        String trenda = "0";
        try { trenda = pRenda.getText().replace(".", "").replace(",", "."); } catch (Exception e) {trenda = "0";}
        String trendafam = "0";
        try { trendafam = pRendaFamiliar.getText().replace(".", "").replace(",", "."); } catch (Exception e) {trendafam = "0";}
        String trendaper = "0";
        try { trendaper = pRendaPercapta.getText().replace(".", "").replace(",", "."); } catch (Exception e) {trendaper = "0";}
        String tnumpesfamilia = "0";
        try { tnumpesfamilia = pNumPesFamilia.getValue().toString().replace(".", "").replace(",", "."); } catch (Exception e) {tnumpesfamilia = "0";}
        String tcdconvenio = "00";
        try { tcdconvenio = conn.LerCamposTabela(new String[] { "cv_numero" }, "convenios", "Upper(cv_apelido) = '" + tconvenio.trim().toUpperCase() + "'")[0][3]; } catch (Exception e) {e.printStackTrace();}    String tsequencia = "0-00000";
        String tsoundex = new Soundex().makesondexstring(tnomepaciente.trim());
        if (save) {
            double cdpac = 0.0D;
            try {
                cdpac = Double.valueOf(conn.LerParametros("codpac")).doubleValue() + 1.0D;
                conn.GravarParametros(new String[] { "codpac", String.valueOf(Double.valueOf(conn.LerParametros("codpac")).doubleValue() + 1.0D).replace(".0", ""), "NUMERICO" });
            } catch (Exception e) { e.printStackTrace(); }
            codpac = String.valueOf(cdpac).replace(".0", "");
            try {
                String sLetra = FuncoesGlobais.myLetra(tnomepaciente.substring(0, 1));
                String nseq = String.valueOf(Integer.valueOf(conn.LerParametros(sLetra)));
                tsequencia = sLetra + "-" + FuncoesGlobais.StrZero(nseq, 5);
                conn.GravarParametros(new String[] { sLetra, FuncoesGlobais.StrZero(nseq, 5), "NUMERICO" });
            } catch (Exception e) {
                e.printStackTrace();
            }
            String sql = "INSERT INTO pacientes(pc_inscricao, pc_identidade, pc_nome, pc_nascimento, pc_nacionalidade, pc_profissao, pc_endereco, pc_endnum, pc_compl, pc_bairro, pc_cidade, pc_estado, pc_cep, pc_telefone, pc_telefone2, pc_telefone3, pc_contato, pc_observacao, pc_naturalidade, pc_sequencia, pc_mae, pc_pai, pc_estadocivil, pc_sexo, pc_cor, pc_convenio, pc_convnumero, pc_plano, pc_soundex, pc_origem, pc_numero, pc_validade, pc_cpf, pc_renda, pc_pessoas, pc_dtcadastro, pc_rendafam, pc_rendaper) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
      
            java.util.Date wdtnasc = null;
        try { wdtnasc = Dates.StringtoDate(tdtnasc, "dd-MM-yyyy"); } catch (Exception e) { wdtnasc = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd"); }
        java.util.Date wtvalidadeplano = null;
        try { wtvalidadeplano = Dates.StringtoDate(tvalidadeplano, "dd-MM-yyyy"); } catch (Exception e) { wtvalidadeplano = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd"); }
        java.util.Date wtdtcadastro = null;
        try { wtdtcadastro = Dates.StringtoDate(tdtcadastro, "dd-MM-yyyy"); } catch (Exception e) { wtdtcadastro = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd"); }
        try { 
            PreparedStatement stm = conn.conn.prepareStatement(sql);        
            stm.setString(1, tinscricao);
            stm.setString(2, trg);
            stm.setString(3, tnomepaciente);
            stm.setDate(4, new java.sql.Date(wdtnasc.getTime()));
            stm.setString(5, tnacionalidade);
            stm.setString(6, tprofissao);
            stm.setString(7, tendereco);
            stm.setString(8, tnumero);
            stm.setString(9, tcomplemento);
            stm.setString(10, tbairro);
            stm.setString(11, tcidade);
            stm.setString(12, testado);
            stm.setString(13, tcep);
            stm.setString(14, ttel1);
            stm.setString(15, ttel2);
            stm.setString(16, ttel3);
            stm.setString(17, tcontato);
            stm.setString(18, tobservacao);
            stm.setString(19, tnaturalidade);
            stm.setString(20, tsequencia);
            stm.setString(21, tmae);
            stm.setString(22, tpai);
            stm.setString(23, testcivil);
            stm.setString(24, tsexo);
            stm.setString(25, tcor);
            stm.setString(26, tconvenio);
            stm.setInt(27, Integer.parseInt(tcdconvenio));
            stm.setString(28, tplano);
            stm.setString(29, tsoundex);
            stm.setString(30, VariaveisGlobais.origem);
            stm.setDouble(31, cdpac);
            stm.setDate(32, new java.sql.Date(wtvalidadeplano.getTime()));
            stm.setString(33, tcpf);
            stm.setDouble(34, Double.parseDouble(trenda.equalsIgnoreCase("") ? "0" : trenda));
            stm.setInt(35, Integer.parseInt(tnumpesfamilia.equalsIgnoreCase("") ? "0" : tnumpesfamilia));
            stm.setDate(36, new java.sql.Date(wtdtcadastro.getTime()));
            stm.setDouble(37, Double.parseDouble(trendafam.equalsIgnoreCase("") ? "0" : trendafam));
            stm.setDouble(38, Double.parseDouble(trendaper.equalsIgnoreCase("") ? "0" : trendaper));
            stm.execute();
            stm.close();
        } catch (Exception err) { err.printStackTrace();}
    } else {
      String sql = "UPDATE pacientes SET pc_inscricao=?, pc_identidade=?, pc_nome=?, pc_nascimento=?, pc_nacionalidade=?, pc_profissao=?, pc_endereco=?, pc_endnum=?, pc_compl=?, pc_bairro=?, pc_cidade=?, pc_estado=?, pc_cep=?, pc_telefone=?, pc_telefone2=?, pc_telefone3=?, pc_contato=?, pc_observacao=?, pc_naturalidade=?, pc_sequencia=?, pc_mae=?, pc_pai=?, pc_estadocivil=?, pc_sexo=?, pc_cor=?, pc_convenio=?, pc_convnumero=?, pc_plano=?, pc_soundex=?, pc_origem=?, pc_numero=?, pc_validade=?, pc_cpf=?, pc_renda=?, pc_pessoas=?, pc_dtcadastro=?, pc_rendafam=?, pc_rendaper=? WHERE pc_numero=?;";
      try {
        PreparedStatement stm = conn.conn.prepareStatement(sql);
        double cdpac = Double.parseDouble(pInscricao.getToolTipText().trim());
        codpac = String.valueOf(cdpac).replace(".0", "");
        
        java.util.Date wdtnasc = null;
        try {
          wdtnasc = Dates.StringtoDate(tdtnasc, "dd-MM-yyyy");
        } catch (Exception e) {
          e.printStackTrace();
          wdtnasc = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd");
        }
        java.util.Date wtvalidadeplano = null;
        try {
          wtvalidadeplano = Dates.StringtoDate(tvalidadeplano, "dd-MM-yyyy");
        } catch (Exception e) {
          wtvalidadeplano = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd");
        }
        java.util.Date wtdtcadastro = null;
        try {
          wtdtcadastro = Dates.StringtoDate(tdtcadastro, "dd-MM-yyyy");
        } catch (Exception e) {
          wtdtcadastro = Dates.StringtoDate("1900-01-01", "yyyy-MM-dd");
        }
        stm.setString(1, tinscricao);
        stm.setString(2, trg);
        stm.setString(3, tnomepaciente);
        stm.setDate(4, new java.sql.Date(wdtnasc.getTime()));
        stm.setString(5, tnacionalidade);
        stm.setString(6, tprofissao);
        stm.setString(7, tendereco);
        stm.setString(8, tnumero);
        stm.setString(9, tcomplemento);
        stm.setString(10, tbairro);
        stm.setString(11, tcidade);
        stm.setString(12, testado);
        stm.setString(13, tcep);
        stm.setString(14, ttel1);
        stm.setString(15, ttel2);
        stm.setString(16, ttel3);
        stm.setString(17, tcontato);
        stm.setString(18, tobservacao);
        stm.setString(19, tnaturalidade);
        stm.setString(20, tsequencia);
        stm.setString(21, tmae);
        stm.setString(22, tpai);
        stm.setString(23, testcivil);
        stm.setString(24, tsexo);
        stm.setString(25, tcor);
        stm.setString(26, tconvenio);
        stm.setInt(27, Integer.parseInt(tcdconvenio));
        stm.setString(28, tplano);
        stm.setString(29, tsoundex);
        stm.setString(30, VariaveisGlobais.origem);
        stm.setDouble(31, cdpac);
        stm.setDate(32, new java.sql.Date(wtvalidadeplano.getTime()));
        stm.setString(33, tcpf);
        stm.setDouble(34, Double.parseDouble(trenda.equalsIgnoreCase("") ? "0" : trenda));
        stm.setInt(35, Integer.parseInt(tnumpesfamilia.equalsIgnoreCase("") ? "0" : tnumpesfamilia));
        stm.setDate(36, new java.sql.Date(wtdtcadastro.getTime()));
        stm.setDouble(37, Double.parseDouble(trendafam.equalsIgnoreCase("") ? "0" : trendafam));
        stm.setDouble(38, Double.parseDouble(trendaper.equalsIgnoreCase("") ? "0" : trendaper));
        stm.setDouble(39, cdpac);
        stm.execute();
        stm.close();
      } catch (Exception err) { err.printStackTrace(); }
    }
    return codpac;
  }
  
  public void ReadFields(String sWhere) {
    String sql = "SELECT pc_inscricao, pc_cpf, pc_identidade, pc_nome, pc_nascimento, pc_nacionalidade, pc_profissao, pc_endereco, pc_endnum, pc_compl, pc_bairro, pc_cidade, pc_estado, pc_cep, pc_telefone, pc_telefone2, pc_telefone3, pc_contato, pc_datapconsulta, pc_dataultimaconsulta, pc_atendidopor, pc_observacao, pc_prontuario, pc_naturalidade, pc_sequencia, pc_mae, pc_pai, pc_estadocivil, pc_sexo, pc_cor, pc_convenio, pc_convnumero, pc_plano, pc_soundex, pc_origem, pc_numero, pc_validade, pc_dtcadastro, pc_renda, pc_pessoas, pc_rendafam, pc_rendaper FROM pacientes " + sWhere;
    
    ResultSet rs = conn.AbrirTabela(sql, 1007);
    
    String nFicha = "";
    String tbairro = "";
    String tcep = "";
    String tcidade = "";
    String tcomplemento = "";
    String tcontato = "";
    String tconvenio = "";
    String tcor = "";
    String tcpf = "";
    String tdtnasc = "";
    String tendereco = "";
    String testcivil = "";
    String testado = "";
    String tinscricao = "";
    String tmae = "";
    String tnacionalidade = "";
    String tnaturalidade = "";
    String tnomepaciente = "";
    String tnumero = "";
    String tobservacao = "";
    String tpai = "";
    String tplano = "";
    String tprofissao = "";
    String trg = "";
    String tsexo = "";
    String ttel1 = "";
    String ttel2 = "";
    String ttel3 = "";
    String tvalidadeplano = "";
    String tdtcadastro = "";
    
    String trenda = "0,00";
    String tnumpesfamilia = "0";
    String trendafam = "0,00";
    String trendaper = "0,00";
    try
    {
      while (rs.next())
      {
        try
        {
          nFicha = rs.getString("pc_numero");
        }
        catch (Exception e) {}
        try
        {
          tbairro = rs.getString("pc_bairro");
        }
        catch (Exception e) {}
        try
        {
          tcep = rs.getString("pc_cep");
        }
        catch (Exception e) {}
        try
        {
          tcidade = rs.getString("pc_cidade");
        }
        catch (Exception e) {}
        try
        {
          tcomplemento = rs.getString("pc_compl");
        }
        catch (Exception e) {}
        try
        {
          tcontato = rs.getString("pc_contato");
        }
        catch (Exception e) {}
        try
        {
          tconvenio = rs.getString("pc_convenio");
        }
        catch (Exception e) {}
        try
        {
          tcor = rs.getString("pc_cor");
        }
        catch (Exception e) {}
        try
        {
          tcpf = rs.getString("pc_cpf");
        }
        catch (Exception e) {}
        try
        {
          tdtnasc = Dates.DateFormat("dd/MM/yyyy", rs.getDate("pc_nascimento"));
        }
        catch (Exception e) {}
        try
        {
          tendereco = rs.getString("pc_endereco");
        }
        catch (Exception e) {}
        try
        {
          testcivil = rs.getString("pc_estadocivil");
        }
        catch (Exception e) {}
        try
        {
          testado = rs.getString("pc_estado");
        }
        catch (Exception e) {}
        try
        {
          tinscricao = rs.getString("pc_inscricao");
        }
        catch (Exception e) {}
        try
        {
          tmae = rs.getString("pc_mae");
        }
        catch (Exception e) {}
        try
        {
          tnacionalidade = rs.getString("pc_nacionalidade");
        }
        catch (Exception e) {}
        try
        {
          tnaturalidade = rs.getString("pc_naturalidade");
        }
        catch (Exception e) {}
        try
        {
          tnomepaciente = rs.getString("pc_nome");
        }
        catch (Exception e) {}
        try
        {
          tnumero = rs.getString("pc_endnum");
        }
        catch (Exception e) {}
        try
        {
          tobservacao = rs.getString("pc_observacao");
        }
        catch (Exception e) {}
        try
        {
          tpai = rs.getString("pc_pai");
        }
        catch (Exception e) {}
        try
        {
          tplano = rs.getString("pc_plano");
        }
        catch (Exception e) {}
        try
        {
          tprofissao = rs.getString("pc_profissao");
        }
        catch (Exception e) {}
        if (trenda.trim().equalsIgnoreCase("")) {
          trenda = "0,00";
        }
        try
        {
          trg = rs.getString("pc_identidade");
        }
        catch (Exception e) {}
        try
        {
          tsexo = rs.getString("pc_sexo");
        }
        catch (Exception e) {}
        try
        {
          ttel1 = rs.getString("pc_telefone");
        }
        catch (Exception e) {}
        try
        {
          ttel2 = rs.getString("pc_telefone2");
        }
        catch (Exception e) {}
        try
        {
          ttel3 = rs.getString("pc_telefone3");
        }
        catch (Exception e) {}
        try
        {
          tvalidadeplano = Dates.DateFormat("dd/MM/yyyy", rs.getDate("pc_validade"));
        }
        catch (Exception e) {}
        try
        {
          trenda = rs.getString("pc_renda");
        }
        catch (Exception e) {}
        try
        {
          tnumpesfamilia = rs.getString("pc_pessoas");
        }
        catch (Exception e) {}
        try
        {
          trendafam = rs.getString("pc_rendafam");
        }
        catch (Exception e) {}
        try
        {
          trendaper = rs.getString("pc_rendaper");
        }
        catch (Exception e) {}
        ResultSet oldatd = conn.AbrirTabela("select * from faturar where (ma_consulta = 1 or ma_revisao = 1) and ma_pcnumero = " + nFicha + " order by ma_data desc limit 4", 1007);
        try
        {
          while (oldatd.next()) {
            pUltConsultas.addItem(Dates.DateFormat("dd-MM-yyyy", oldatd.getDate("ma_data")) + " - " + oldatd.getString("ma_medico").toUpperCase() + " = " + (oldatd.getBoolean("ma_consulta") ? "CONSULTA" : "REVISAO"));
          }
        }
        catch (Exception e) {}
        DbMain.FecharTabela(oldatd);
        try
        {
          tdtcadastro = rs.getDate("pc_dtcadastro").toString();
        }
        catch (Exception e) {}
      }
    }
    catch (Exception err)
    {
      err.printStackTrace();
    }
    try
    {
      pBairro.setText(tbairro);
    }
    catch (Exception e)
    {
      pBairro.setText(null);
    }
    try
    {
      pCep.setText(tcep);
    }
    catch (Exception e)
    {
      pCep.setText(null);
    }
    try
    {
      pCidade.setText(tcidade);
    }
    catch (Exception e)
    {
      pCidade.setText(null);
    }
    try
    {
      pComplemento.setText(tcomplemento);
    }
    catch (Exception e)
    {
      pComplemento.setText(null);
    }
    try
    {
      pContato.setText(tcontato);
    }
    catch (Exception e)
    {
      pContato.setText(null);
    }
    try
    {
      pConvenio.getModel().setSelectedItem(tconvenio);
    }
    catch (Exception e)
    {
      pConvenio.getModel().setSelectedItem(null);
    }
    try
    {
      pCor.getModel().setSelectedItem(tcor);
    }
    catch (Exception e)
    {
      pCor.getModel().setSelectedItem(null);
    }
    try
    {
      pCpf.setText(tcpf);
    }
    catch (Exception e)
    {
      pCpf.setText(null);
    }
    try
    {
      pDtNasc.setText(tdtnasc);
    }
    catch (Exception e)
    {
      pDtNasc.setText(null);
    }
    try
    {
      pEndereco.setText(tendereco);
    }
    catch (Exception e)
    {
      pEndereco.setText(null);
    }
    try
    {
      pEstCivil.getModel().setSelectedItem(testcivil);
    }
    catch (Exception e)
    {
      pEstCivil.getModel().setSelectedItem(null);
    }
    try
    {
      pEstado.setText(testado);
    }
    catch (Exception e)
    {
      pEstado.setText(null);
    }
    try
    {
      pInscricao.setText(tinscricao);
    }
    catch (Exception e)
    {
      pInscricao.setText(null);
    }
    try
    {
      pInscricao.setToolTipText(nFicha);
    }
    catch (Exception e)
    {
      pInscricao.setToolTipText(null);
    }
    try
    {
      pMae.setText(tmae);
    }
    catch (Exception e)
    {
      pMae.setText(null);
    }
    try
    {
      pNacionalidade.setText(tnacionalidade);
    }
    catch (Exception e)
    {
      pNacionalidade.setText(null);
    }
    try
    {
      pNaturalidade.setText(tnaturalidade);
    }
    catch (Exception e)
    {
      pNaturalidade.setText(null);
    }
    try
    {
      pNomePaciente.setText(tnomepaciente);
    }
    catch (Exception e)
    {
      pNomePaciente.setText(null);
    }
    try
    {
      pNumero.setText(tnumero);
    }
    catch (Exception e)
    {
      pNumero.setText(null);
    }
    try
    {
      pObservacoes.setText(tobservacao);
    }
    catch (Exception e)
    {
      pObservacoes.setText(null);
    }
    try
    {
      pPai.setText(tpai);
    }
    catch (Exception e)
    {
      pPai.setText(null);
    }
    try
    {
      pPlano.setText(tplano);
    }
    catch (Exception e)
    {
      pPlano.setText(null);
    }
    try
    {
      pProfissao.setText(tprofissao);
    }
    catch (Exception e)
    {
      pProfissao.setText(null);
    }
    try
    {
      pRg.setText(trg);
    }
    catch (Exception e)
    {
      pRg.setText(null);
    }
    try
    {
      pSexo.getModel().setSelectedItem(tsexo);
    }
    catch (Exception e)
    {
      pSexo.getModel().setSelectedItem(null);
    }
    try
    {
      pTel1.setText(ttel1);
    }
    catch (Exception e)
    {
      pTel1.setText(null);
    }
    try
    {
      pTel2.setText(ttel2);
    }
    catch (Exception e)
    {
      pTel2.setText(null);
    }
    try
    {
      pTel3.setText(ttel3);
    }
    catch (Exception e)
    {
      pTel3.setText(null);
    }
    try
    {
      pUltConsultas.setSelectedIndex(0);
    }
    catch (Exception e)
    {
      pUltConsultas.getModel().setSelectedItem(null);
    }
    try
    {
      pValidadePlano.setText(tvalidadeplano);
    }
    catch (Exception e)
    {
      pValidadePlano.setText(null);
    }
    try
    {
      pDtCadastro.setText(tdtcadastro);
    }
    catch (Exception e)
    {
      pDtCadastro.setText(null);
    }
    try
    {
      pRenda.setText(trenda);
    }
    catch (Exception e)
    {
      pRenda.setText(null);
    }
    try
    {
      pNumPesFamilia.setValue(Integer.valueOf(tnumpesfamilia));
    }
    catch (Exception e)
    {
      pNumPesFamilia.setValue(Integer.valueOf(0));
    }
    try
    {
      pRendaFamiliar.setText(trendafam);
    }
    catch (Exception e)
    {
      pRendaFamiliar.setText(null);
    }
    try
    {
      pRendaPercapta.setText(trendaper);
    }
    catch (Exception e)
    {
      pRendaPercapta.setText(null);
    }
    try
    {
      setTitle("Cadastro de Pacientes - Ficha N�� " + nFicha);
    }
    catch (Exception e)
    {
      setTitle(".:: Cadastro de Pacientes");
    }
  }
  
  private void GerarFichaPac(String cdpac) {
    String query = "select p.pc_inscricao, p.pc_nome, p.pc_nascimento, extract(year from age(pc_nascimento)) AS idade, p.pc_nacionalidade, p.pc_profissao, p.pc_numero, p.pc_nome, p.pc_endereco, p.pc_bairro, p.pc_cidade, p.pc_estado, p.pc_cep, p.pc_naturalidade, p.pc_mae, p.pc_pai, p.pc_estadocivil, p.pc_sexo, p.pc_cor, p.pc_convenio, p.pc_renda, p.pc_pessoas, s.st_sintoma, s.st_data, s.st_hora, s.st_nmmedico FROM pacientes p, sintomas s WHERE (p.pc_numero = s.pc_numero) AND p.pc_numero = Cast('" + cdpac + "' AS double precision) " + "ORDER BY s.st_data DESC;";    
    ResultSet rs = conn.AbrirTabela(query, 1007);    
    JRResultSetDataSource jrRS = new JRResultSetDataSource(rs);    
    String fileName = "./reports/rFichaPac.jasper";
    
    Map parametros = new HashMap();
    parametros.put("pcnumero", cdpac);
    parametros.put("SUBREPORT_DIR", "reports/");
    parametros.put("REPORT_CONNECTION", conn.conn);
    try {
      JasperPrint print = JasperFillManager.fillReport(fileName, parametros, jrRS);
      viewReportFrame("Ficha do Paci��nte", print);
    } catch (Exception ex) {
      ex.printStackTrace();
    }
    DbMain.FecharTabela(rs);
  }
  
  private static void viewReportFrame(String titulo, JasperPrint print) {
    JRViewer viewer = new JRViewer(print);    
    JFrame frameRelatorio = new JFrame(titulo);    
    frameRelatorio.add(viewer, "Center");    
    frameRelatorio.setSize(500, 500);    
    frameRelatorio.setExtendedState(6);    
    frameRelatorio.setDefaultCloseOperation(2);    
    frameRelatorio.setVisible(true);
    //frameRelatorio.setModalExclusionType(ModalExclusionType.TOOLKIT_EXCLUDE);
  }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbiometria;
    private javax.swing.JButton btnQuestionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtBuscaCep;
    private javax.swing.JButton jbtDelFichaPac;
    private javax.swing.JButton jbtFechar;
    private javax.swing.JButton jbtFichaPaciente;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JButton jbtSavaeFecha;
    private javax.swing.JTextField pBairro;
    private javax.swing.JTextField pCep;
    private javax.swing.JTextField pCidade;
    private javax.swing.JTextField pComplemento;
    private javax.swing.JTextField pContato;
    private javax.swing.JComboBox pConvenio;
    private javax.swing.JComboBox pCor;
    private javax.swing.JFormattedTextField pCpf;
    private javax.swing.JFormattedTextField pDtCadastro;
    private javax.swing.JFormattedTextField pDtNasc;
    private javax.swing.JTextField pEndereco;
    private javax.swing.JComboBox pEstCivil;
    private javax.swing.JTextField pEstado;
    private javax.swing.JTextField pInscricao;
    private javax.swing.JTextField pMae;
    private javax.swing.JTextField pNacionalidade;
    private javax.swing.JTextField pNaturalidade;
    private javax.swing.JTextField pNomePaciente;
    private javax.swing.JSpinner pNumPesFamilia;
    private javax.swing.JTextField pNumero;
    private javax.swing.JTextArea pObservacoes;
    private javax.swing.JTextField pPai;
    private javax.swing.JTextField pPlano;
    private javax.swing.JTextField pProfissao;
    private javax.swing.JFormattedTextField pRenda;
    private javax.swing.JFormattedTextField pRendaFamiliar;
    private javax.swing.JFormattedTextField pRendaPercapta;
    private javax.swing.JFormattedTextField pRg;
    private javax.swing.JComboBox pSexo;
    private javax.swing.JFormattedTextField pTel1;
    private javax.swing.JFormattedTextField pTel2;
    private javax.swing.JFormattedTextField pTel3;
    private javax.swing.JComboBox pUltConsultas;
    private javax.swing.JTextField pValidadePlano;
    // End of variables declaration//GEN-END:variables
}
